////////////////////////////////////////////////////////////////
//
// Copyright (C) 2005 Affymetrix, Inc.
//
// This program is free software; you can redistribute it and/or modify 
// it under the terms of the GNU General Public License (version 2) as 
// published by the Free Software Foundation.
// 
// This program is distributed in the hope that it will be useful, 
// but WITHOUT ANY WARRANTY; without even the implied warranty of 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public License 
// along with this program;if not, write to the 
// 
// Free Software Foundation, Inc., 
// 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
////////////////////////////////////////////////////////////////

/**
 * @file   ErrHandler.h
 * @author Chuck Sugnet
 * @date   Mon Jun 26 10:13:11 2006
 * 
 * @brief Interface for doing something with the errors generated by
 * Err::errAbort().
 */

#ifndef ERRHANDLER_H
#define ERRHANDLER_H

#include <string>

/**
 * Abstract base class (aka interface) for handling errors that come from
 * Err::errAbort(). Write a class inheriting from ErrHandler and push it 
 * onto the handler stack via Err::pushErrHandler(). 
 */
class ErrHandler {

public:
  /** Virtual destructor for a virtual class. */
  virtual ~ErrHandler() {}

  /** Prototype for the function */
  virtual void handleError(const std::string &msg) = 0;
};


#endif /* ERRHANDLER_H */
