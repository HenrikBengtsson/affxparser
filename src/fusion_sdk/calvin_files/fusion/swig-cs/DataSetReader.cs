/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class DataSetReader : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal DataSetReader(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DataSetReader obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DataSetReader() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_DataSetReader(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public DataSetReader(SWIGTYPE_p_std__ifstream s, DataSetHeader d) : this(affx_fusionPINVOKE.new_DataSetReader(SWIGTYPE_p_std__ifstream.getCPtr(s), DataSetHeader.getCPtr(d)), true) {
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_std__wstring GetDataSetName() {
    SWIGTYPE_p_std__wstring ret = new SWIGTYPE_p_std__wstring(affx_fusionPINVOKE.DataSetReader_GetDataSetName(swigCPtr), true);
    return ret;
  }

  public DataSetHeader GetDataSetHeader() {
    DataSetHeader ret = new DataSetHeader(affx_fusionPINVOKE.DataSetReader_GetDataSetHeader(swigCPtr), false);
    return ret;
  }

  public void Read(SWIGTYPE_p_char value) {
    affx_fusionPINVOKE.DataSetReader_Read__SWIG_0(swigCPtr, SWIGTYPE_p_char.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Read(SWIGTYPE_p_unsigned_char value) {
    affx_fusionPINVOKE.DataSetReader_Read__SWIG_1(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Read(SWIGTYPE_p_short value) {
    affx_fusionPINVOKE.DataSetReader_Read__SWIG_2(swigCPtr, SWIGTYPE_p_short.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Read(SWIGTYPE_p_unsigned_short value) {
    affx_fusionPINVOKE.DataSetReader_Read__SWIG_3(swigCPtr, SWIGTYPE_p_unsigned_short.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Read(SWIGTYPE_p_int value) {
    affx_fusionPINVOKE.DataSetReader_Read__SWIG_4(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Read(SWIGTYPE_p_unsigned_int value) {
    affx_fusionPINVOKE.DataSetReader_Read__SWIG_5(swigCPtr, SWIGTYPE_p_unsigned_int.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Read(SWIGTYPE_p_float value) {
    affx_fusionPINVOKE.DataSetReader_Read__SWIG_6(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Read(SWIGTYPE_p_std__string value) {
    affx_fusionPINVOKE.DataSetReader_Read__SWIG_7(swigCPtr, SWIGTYPE_p_std__string.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Read(SWIGTYPE_p_std__wstring value) {
    affx_fusionPINVOKE.DataSetReader_Read__SWIG_8(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

}
