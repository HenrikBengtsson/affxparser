/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ArrayFileReader : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ArrayFileReader(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ArrayFileReader obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArrayFileReader() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_ArrayFileReader(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public ArrayFileReader() : this(affx_fusionPINVOKE.new_ArrayFileReader(), true) {
  }

  public bool Read(string fileName, ArrayData arrayData, bool headerOnly) {
    bool ret = affx_fusionPINVOKE.ArrayFileReader_Read__SWIG_0(swigCPtr, fileName, ArrayData.getCPtr(arrayData), headerOnly);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Read(string fileName, ArrayData arrayData) {
    bool ret = affx_fusionPINVOKE.ArrayFileReader_Read__SWIG_1(swigCPtr, fileName, ArrayData.getCPtr(arrayData));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string DataTypeIdentifier() {
    string ret = affx_fusionPINVOKE.ArrayFileReader_DataTypeIdentifier__SWIG_0(swigCPtr);
    return ret;
  }

  public static bool IsFileType(string fileName, string dataTypeId) {
    bool ret = affx_fusionPINVOKE.ArrayFileReader_IsFileType(fileName, dataTypeId);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string DataTypeIdentifier(string fileName) {
    string ret = affx_fusionPINVOKE.ArrayFileReader_DataTypeIdentifier__SWIG_1(fileName);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
