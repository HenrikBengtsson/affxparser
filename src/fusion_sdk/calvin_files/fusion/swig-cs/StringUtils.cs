/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class StringUtils : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal StringUtils(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(StringUtils obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~StringUtils() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_StringUtils(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public static void STLTrimLeft(SWIGTYPE_p_std__string s, char chTarget) {
    affx_fusionPINVOKE.StringUtils_STLTrimLeft__SWIG_0(SWIGTYPE_p_std__string.getCPtr(s), chTarget);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void STLTrimLeft(SWIGTYPE_p_std__string s) {
    affx_fusionPINVOKE.StringUtils_STLTrimLeft__SWIG_1(SWIGTYPE_p_std__string.getCPtr(s));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void STLTrimRight(SWIGTYPE_p_std__string s, char chTarget) {
    affx_fusionPINVOKE.StringUtils_STLTrimRight__SWIG_0(SWIGTYPE_p_std__string.getCPtr(s), chTarget);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void STLTrimRight(SWIGTYPE_p_std__string s) {
    affx_fusionPINVOKE.StringUtils_STLTrimRight__SWIG_1(SWIGTYPE_p_std__string.getCPtr(s));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void STLTrimLeft(SWIGTYPE_p_std__wstring s, SWIGTYPE_p_wchar_t chTarget) {
    affx_fusionPINVOKE.StringUtils_STLTrimLeft__SWIG_2(SWIGTYPE_p_std__wstring.getCPtr(s), SWIGTYPE_p_wchar_t.getCPtr(chTarget));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void STLTrimLeft(SWIGTYPE_p_std__wstring s) {
    affx_fusionPINVOKE.StringUtils_STLTrimLeft__SWIG_3(SWIGTYPE_p_std__wstring.getCPtr(s));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void STLTrimRight(SWIGTYPE_p_std__wstring s, SWIGTYPE_p_wchar_t chTarget) {
    affx_fusionPINVOKE.StringUtils_STLTrimRight__SWIG_2(SWIGTYPE_p_std__wstring.getCPtr(s), SWIGTYPE_p_wchar_t.getCPtr(chTarget));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void STLTrimRight(SWIGTYPE_p_std__wstring s) {
    affx_fusionPINVOKE.StringUtils_STLTrimRight__SWIG_3(SWIGTYPE_p_std__wstring.getCPtr(s));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public static string ConvertWCSToMBS(SWIGTYPE_p_std__wstring source) {
    string ret = affx_fusionPINVOKE.StringUtils_ConvertWCSToMBS(SWIGTYPE_p_std__wstring.getCPtr(source));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_std__wstring ConvertMBSToWCS(string source) {
    SWIGTYPE_p_std__wstring ret = new SWIGTYPE_p_std__wstring(affx_fusionPINVOKE.StringUtils_ConvertMBSToWCS(source), true);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public StringUtils() : this(affx_fusionPINVOKE.new_StringUtils(), true) {
  }

}
