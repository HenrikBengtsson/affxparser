/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class TagValuePairType : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal TagValuePairType(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(TagValuePairType obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~TagValuePairType() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_TagValuePairType(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public SWIGTYPE_p_std__string Tag {
    set {
      affx_fusionPINVOKE.set_TagValuePairType_Tag(swigCPtr, SWIGTYPE_p_std__string.getCPtr(value));
    } 
    get {
      IntPtr cPtr = affx_fusionPINVOKE.get_TagValuePairType_Tag(swigCPtr);
      SWIGTYPE_p_std__string ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_std__string(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__string Value {
    set {
      affx_fusionPINVOKE.set_TagValuePairType_Value(swigCPtr, SWIGTYPE_p_std__string.getCPtr(value));
    } 
    get {
      IntPtr cPtr = affx_fusionPINVOKE.get_TagValuePairType_Value(swigCPtr);
      SWIGTYPE_p_std__string ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_std__string(cPtr, false);
      return ret;
    } 
  }

  public TagValuePairType _TagValuePairType_assign(TagValuePairType vp) {
    TagValuePairType ret = new TagValuePairType(affx_fusionPINVOKE.TagValuePairType__TagValuePairType_assign(swigCPtr, TagValuePairType.getCPtr(vp)), true);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool _TagValuePairType_equals_obj(TagValuePairType vp) {
    bool ret = affx_fusionPINVOKE.TagValuePairType__TagValuePairType_equals_obj(swigCPtr, TagValuePairType.getCPtr(vp));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool _TagValuePairType_equals_tag(string tag) {
    bool ret = affx_fusionPINVOKE.TagValuePairType__TagValuePairType_equals_tag(swigCPtr, tag);
    return ret;
  }

  public TagValuePairType() : this(affx_fusionPINVOKE.new_TagValuePairType(), true) {
  }

}
