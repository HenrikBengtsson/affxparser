/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class FusionResequencingResults : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FusionResequencingResults(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(FusionResequencingResults obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~FusionResequencingResults() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_FusionResequencingResults(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public FusionResequencingResults() : this(affx_fusionPINVOKE.new_FusionResequencingResults(), true) {
  }

  public void Clear() {
    affx_fusionPINVOKE.FusionResequencingResults_Clear(swigCPtr);
  }

  public SWIGTYPE_p_std__vectorTchar_t GetCalledBases() {
    SWIGTYPE_p_std__vectorTchar_t ret = new SWIGTYPE_p_std__vectorTchar_t(affx_fusionPINVOKE.FusionResequencingResults_GetCalledBases(swigCPtr), false);
    return ret;
  }

  public char GetCalledBase(int index) {
    char ret = affx_fusionPINVOKE.FusionResequencingResults_GetCalledBase(swigCPtr, index);
    return ret;
  }

  public int GetCalledBasesSize() {
    int ret = affx_fusionPINVOKE.FusionResequencingResults_GetCalledBasesSize(swigCPtr);
    return ret;
  }

  public void ResizeCalledBases(int size) {
    affx_fusionPINVOKE.FusionResequencingResults_ResizeCalledBases(swigCPtr, size);
  }

  public void SetCalledBase(int index, char call) {
    affx_fusionPINVOKE.FusionResequencingResults_SetCalledBase(swigCPtr, index, call);
  }

  public void AddCalledBase(char call) {
    affx_fusionPINVOKE.FusionResequencingResults_AddCalledBase(swigCPtr, call);
  }

  public SWIGTYPE_p_std__vectorTfloat_t GetScores() {
    SWIGTYPE_p_std__vectorTfloat_t ret = new SWIGTYPE_p_std__vectorTfloat_t(affx_fusionPINVOKE.FusionResequencingResults_GetScores(swigCPtr), false);
    return ret;
  }

  public float GetScore(int index) {
    float ret = affx_fusionPINVOKE.FusionResequencingResults_GetScore(swigCPtr, index);
    return ret;
  }

  public int GetScoresSize() {
    int ret = affx_fusionPINVOKE.FusionResequencingResults_GetScoresSize(swigCPtr);
    return ret;
  }

  public void ResizeScores(int size) {
    affx_fusionPINVOKE.FusionResequencingResults_ResizeScores(swigCPtr, size);
  }

  public void SetScore(int index, float score) {
    affx_fusionPINVOKE.FusionResequencingResults_SetScore(swigCPtr, index, score);
  }

  public void AddScore(float score) {
    affx_fusionPINVOKE.FusionResequencingResults_AddScore(swigCPtr, score);
  }

  public SWIGTYPE_p_std__vectorTaffymetrix_fusion_io__FusionForceCallType_t GetForceCalls() {
    SWIGTYPE_p_std__vectorTaffymetrix_fusion_io__FusionForceCallType_t ret = new SWIGTYPE_p_std__vectorTaffymetrix_fusion_io__FusionForceCallType_t(affx_fusionPINVOKE.FusionResequencingResults_GetForceCalls(swigCPtr), false);
    return ret;
  }

  public FusionForceCallType GetForceCall(int index) {
    FusionForceCallType ret = new FusionForceCallType(affx_fusionPINVOKE.FusionResequencingResults_GetForceCall(swigCPtr, index), true);
    return ret;
  }

  public int GetForceCallsSize() {
    int ret = affx_fusionPINVOKE.FusionResequencingResults_GetForceCallsSize(swigCPtr);
    return ret;
  }

  public void ResizeForceCalls(int size) {
    affx_fusionPINVOKE.FusionResequencingResults_ResizeForceCalls(swigCPtr, size);
  }

  public void SetForceCall(int index, FusionForceCallType call) {
    affx_fusionPINVOKE.FusionResequencingResults_SetForceCall(swigCPtr, index, FusionForceCallType.getCPtr(call));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddForceCall(FusionForceCallType call) {
    affx_fusionPINVOKE.FusionResequencingResults_AddForceCall(swigCPtr, FusionForceCallType.getCPtr(call));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_std__vectorTaffymetrix_fusion_io__FusionBaseCallType_t GetOrigCalls() {
    SWIGTYPE_p_std__vectorTaffymetrix_fusion_io__FusionBaseCallType_t ret = new SWIGTYPE_p_std__vectorTaffymetrix_fusion_io__FusionBaseCallType_t(affx_fusionPINVOKE.FusionResequencingResults_GetOrigCalls(swigCPtr), false);
    return ret;
  }

  public FusionBaseCallType GetOrigCall(int index) {
    FusionBaseCallType ret = new FusionBaseCallType(affx_fusionPINVOKE.FusionResequencingResults_GetOrigCall(swigCPtr, index), true);
    return ret;
  }

  public int GetOrigCallsSize() {
    int ret = affx_fusionPINVOKE.FusionResequencingResults_GetOrigCallsSize(swigCPtr);
    return ret;
  }

  public void ResizeOrigCalls(int size) {
    affx_fusionPINVOKE.FusionResequencingResults_ResizeOrigCalls(swigCPtr, size);
  }

  public void SetOrigCall(int index, FusionBaseCallType call) {
    affx_fusionPINVOKE.FusionResequencingResults_SetOrigCall(swigCPtr, index, FusionBaseCallType.getCPtr(call));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddOrigCall(FusionBaseCallType call) {
    affx_fusionPINVOKE.FusionResequencingResults_AddOrigCall(swigCPtr, FusionBaseCallType.getCPtr(call));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

}
