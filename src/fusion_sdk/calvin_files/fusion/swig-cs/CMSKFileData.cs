/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CMSKFileData : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CMSKFileData(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CMSKFileData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CMSKFileData() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_CMSKFileData(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public CMSKFileData() : this(affx_fusionPINVOKE.new_CMSKFileData(), true) {
  }

  public void SetFileName(string name) {
    affx_fusionPINVOKE.CMSKFileData_SetFileName(swigCPtr, name);
  }

  public string GetFileName() {
    string ret = affx_fusionPINVOKE.CMSKFileData_GetFileName(swigCPtr);
    return ret;
  }

  public string GetArrayType() {
    string ret = affx_fusionPINVOKE.CMSKFileData_GetArrayType(swigCPtr);
    return ret;
  }

  public int GetProbeSetIndiciesListCount() {
    int ret = affx_fusionPINVOKE.CMSKFileData_GetProbeSetIndiciesListCount(swigCPtr);
    return ret;
  }

  public int GetProbeSetListCount() {
    int ret = affx_fusionPINVOKE.CMSKFileData_GetProbeSetListCount(swigCPtr);
    return ret;
  }

  public string GetError() {
    string ret = affx_fusionPINVOKE.CMSKFileData_GetError(swigCPtr);
    return ret;
  }

  public void GetProbeSetIndiciesIterators(SWIGTYPE_p_affxmsk__ProbeSetIndiciesList__const_iterator begin, SWIGTYPE_p_affxmsk__ProbeSetIndiciesList__const_iterator end) {
    affx_fusionPINVOKE.CMSKFileData_GetProbeSetIndiciesIterators(swigCPtr, SWIGTYPE_p_affxmsk__ProbeSetIndiciesList__const_iterator.getCPtr(begin), SWIGTYPE_p_affxmsk__ProbeSetIndiciesList__const_iterator.getCPtr(end));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void GetProbeSetIterators(SWIGTYPE_p_affxmsk__ProbeSetList__const_iterator begin, SWIGTYPE_p_affxmsk__ProbeSetList__const_iterator end) {
    affx_fusionPINVOKE.CMSKFileData_GetProbeSetIterators(swigCPtr, SWIGTYPE_p_affxmsk__ProbeSetList__const_iterator.getCPtr(begin), SWIGTYPE_p_affxmsk__ProbeSetList__const_iterator.getCPtr(end));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool Read() {
    bool ret = affx_fusionPINVOKE.CMSKFileData_Read(swigCPtr);
    return ret;
  }

  public bool Exists() {
    bool ret = affx_fusionPINVOKE.CMSKFileData_Exists(swigCPtr);
    return ret;
  }

  public void Clear() {
    affx_fusionPINVOKE.CMSKFileData_Clear(swigCPtr);
  }

}
