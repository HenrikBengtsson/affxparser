/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CDFData : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CDFData(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CDFData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CDFData() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_CDFData(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public CDFData() : this(affx_fusionPINVOKE.new_CDFData__SWIG_0(), true) {
  }

  public CDFData(string filename) : this(affx_fusionPINVOKE.new_CDFData__SWIG_1(filename), true) {
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Clear() {
    affx_fusionPINVOKE.CDFData_Clear(swigCPtr);
  }

  public void SetFilename(string p) {
    affx_fusionPINVOKE.CDFData_SetFilename(swigCPtr, p);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetFilename() {
    string ret = affx_fusionPINVOKE.CDFData_GetFilename(swigCPtr);
    return ret;
  }

  public int GetProbeSetCnt() {
    int ret = affx_fusionPINVOKE.CDFData_GetProbeSetCnt(swigCPtr);
    return ret;
  }

  public void SetProbeSetCnt(uint cnt, CDFDataTypeIds type) {
    affx_fusionPINVOKE.CDFData_SetProbeSetCnt(swigCPtr, cnt, (int)type);
  }

  public SWIGTYPE_p_std__wstring GetProbeSetName(int index) {
    SWIGTYPE_p_std__wstring ret = new SWIGTYPE_p_std__wstring(affx_fusionPINVOKE.CDFData_GetProbeSetName(swigCPtr, index), true);
    return ret;
  }

  public void SetArrayRows(uint value) {
    affx_fusionPINVOKE.CDFData_SetArrayRows(swigCPtr, value);
  }

  public uint GetArrayRows() {
    uint ret = affx_fusionPINVOKE.CDFData_GetArrayRows(swigCPtr);
    return ret;
  }

  public void SetArrayCols(uint value) {
    affx_fusionPINVOKE.CDFData_SetArrayCols(swigCPtr, value);
  }

  public uint GetArrayCols() {
    uint ret = affx_fusionPINVOKE.CDFData_GetArrayCols(swigCPtr);
    return ret;
  }

  public void SetRefSequence(string seq) {
    affx_fusionPINVOKE.CDFData_SetRefSequence(swigCPtr, seq);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetRefSequence() {
    string ret = affx_fusionPINVOKE.CDFData_GetRefSequence(swigCPtr);
    return ret;
  }

  public string GetDataTypeId() {
    string ret = affx_fusionPINVOKE.CDFData_GetDataTypeId(swigCPtr);
    return ret;
  }

  public FileHeader GetFileHeader() {
    IntPtr cPtr = affx_fusionPINVOKE.CDFData_GetFileHeader(swigCPtr);
    FileHeader ret = (cPtr == IntPtr.Zero) ? null : new FileHeader(cPtr, false);
    return ret;
  }

  public GenericData GetGenericData() {
    GenericData ret = new GenericData(affx_fusionPINVOKE.CDFData_GetGenericData(swigCPtr), false);
    return ret;
  }

  public void GetProbeSetInformation(int index, CDFProbeSetInformation info) {
    affx_fusionPINVOKE.CDFData_GetProbeSetInformation__SWIG_0(swigCPtr, index, CDFProbeSetInformation.getCPtr(info));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void GetProbeSetInformation(SWIGTYPE_p_std__wstring probeSetName, CDFProbeSetInformation info) {
    affx_fusionPINVOKE.CDFData_GetProbeSetInformation__SWIG_1(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(probeSetName), CDFProbeSetInformation.getCPtr(info));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void GetQCProbeSetInformation(int index, CDFQCProbeSetInformation info) {
    affx_fusionPINVOKE.CDFData_GetQCProbeSetInformation__SWIG_0(swigCPtr, index, CDFQCProbeSetInformation.getCPtr(info));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void GetQCProbeSetInformation(SWIGTYPE_p_std__wstring probeSetName, CDFQCProbeSetInformation info) {
    affx_fusionPINVOKE.CDFData_GetQCProbeSetInformation__SWIG_1(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(probeSetName), CDFQCProbeSetInformation.getCPtr(info));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

}
