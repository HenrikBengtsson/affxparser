/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CCHPFileData : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CCHPFileData(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CCHPFileData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CCHPFileData() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_CCHPFileData(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public CCHPFileData() : this(affx_fusionPINVOKE.new_CCHPFileData(), true) {
  }

  public CCHPFileHeader GetHeader() {
    CCHPFileHeader ret = new CCHPFileHeader(affx_fusionPINVOKE.CCHPFileData_GetHeader(swigCPtr), false);
    return ret;
  }

  public CExpressionProbeSetResults GetExpressionResults(int index) {
    IntPtr cPtr = affx_fusionPINVOKE.CCHPFileData_GetExpressionResults(swigCPtr, index);
    CExpressionProbeSetResults ret = (cPtr == IntPtr.Zero) ? null : new CExpressionProbeSetResults(cPtr, false);
    return ret;
  }

  public CGenotypeProbeSetResults GetGenotypingResults(int index) {
    IntPtr cPtr = affx_fusionPINVOKE.CCHPFileData_GetGenotypingResults(swigCPtr, index);
    CGenotypeProbeSetResults ret = (cPtr == IntPtr.Zero) ? null : new CGenotypeProbeSetResults(cPtr, false);
    return ret;
  }

  public CUniversalProbeSetResults GetUniversalResults(int index) {
    IntPtr cPtr = affx_fusionPINVOKE.CCHPFileData_GetUniversalResults(swigCPtr, index);
    CUniversalProbeSetResults ret = (cPtr == IntPtr.Zero) ? null : new CUniversalProbeSetResults(cPtr, false);
    return ret;
  }

  public CResequencingResults GetResequencingResults() {
    IntPtr cPtr = affx_fusionPINVOKE.CCHPFileData_GetResequencingResults(swigCPtr);
    CResequencingResults ret = (cPtr == IntPtr.Zero) ? null : new CResequencingResults(cPtr, false);
    return ret;
  }

  public string GetError() {
    string ret = affx_fusionPINVOKE.CCHPFileData_GetError(swigCPtr);
    return ret;
  }

  public bool Read() {
    bool ret = affx_fusionPINVOKE.CCHPFileData_Read(swigCPtr);
    return ret;
  }

  public bool ReadHeader() {
    bool ret = affx_fusionPINVOKE.CCHPFileData_ReadHeader(swigCPtr);
    return ret;
  }

  public bool Exists() {
    bool ret = affx_fusionPINVOKE.CCHPFileData_Exists(swigCPtr);
    return ret;
  }

  public bool IsXDACompatibleFile() {
    bool ret = affx_fusionPINVOKE.CCHPFileData_IsXDACompatibleFile(swigCPtr);
    return ret;
  }

  public void SetFileName(string name) {
    affx_fusionPINVOKE.CCHPFileData_SetFileName(swigCPtr, name);
  }

  public string GetFileName() {
    string ret = affx_fusionPINVOKE.CCHPFileData_GetFileName(swigCPtr);
    return ret;
  }

  public void Clear() {
    affx_fusionPINVOKE.CCHPFileData_Clear(swigCPtr);
  }

}
