/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class MIMEValue : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MIMEValue(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(MIMEValue obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~MIMEValue() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_MIMEValue(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public MIMEValue() : this(affx_fusionPINVOKE.new_MIMEValue__SWIG_0(), true) {
  }

  public MIMEValue(SWIGTYPE_p_void value, uint size) : this(affx_fusionPINVOKE.new_MIMEValue__SWIG_1(SWIGTYPE_p_void.getCPtr(value), size), true) {
  }

  public MIMEValue(MIMEValue source) : this(affx_fusionPINVOKE.new_MIMEValue__SWIG_2(MIMEValue.getCPtr(source)), true) {
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public MIMEValue MIMEValue_copy(MIMEValue source) {
    MIMEValue ret = new MIMEValue(affx_fusionPINVOKE.MIMEValue_MIMEValue_copy(swigCPtr, MIMEValue.getCPtr(source)), false);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool MIMEValue_equals(MIMEValue lhs) {
    bool ret = affx_fusionPINVOKE.MIMEValue_MIMEValue_equals(swigCPtr, MIMEValue.getCPtr(lhs));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool MIMEValue_not_equals(MIMEValue lhs) {
    bool ret = affx_fusionPINVOKE.MIMEValue_MIMEValue_not_equals(swigCPtr, MIMEValue.getCPtr(lhs));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetValue(SWIGTYPE_p_void value, uint size) {
    affx_fusionPINVOKE.MIMEValue_SetValue(swigCPtr, SWIGTYPE_p_void.getCPtr(value), size);
  }

  public SWIGTYPE_p_void GetValue(SWIGTYPE_p_unsigned_int size) {
    IntPtr cPtr = affx_fusionPINVOKE.MIMEValue_GetValue(swigCPtr, SWIGTYPE_p_unsigned_int.getCPtr(size));
    SWIGTYPE_p_void ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint Size() {
    uint ret = affx_fusionPINVOKE.MIMEValue_Size(swigCPtr);
    return ret;
  }

}
