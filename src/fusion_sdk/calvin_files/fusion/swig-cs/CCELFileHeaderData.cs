/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CCELFileHeaderData : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CCELFileHeaderData(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CCELFileHeaderData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CCELFileHeaderData() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_CCELFileHeaderData(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public CCELFileHeaderData() : this(affx_fusionPINVOKE.new_CCELFileHeaderData(), true) {
  }

  public void Clear() {
    affx_fusionPINVOKE.CCELFileHeaderData_Clear(swigCPtr);
  }

  public void SetMagic(int i) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetMagic(swigCPtr, i);
  }

  public int GetMagic() {
    int ret = affx_fusionPINVOKE.CCELFileHeaderData_GetMagic(swigCPtr);
    return ret;
  }

  public void SetVersion(int i) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetVersion(swigCPtr, i);
  }

  public int GetVersion() {
    int ret = affx_fusionPINVOKE.CCELFileHeaderData_GetVersion(swigCPtr);
    return ret;
  }

  public void SetCols(int i) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetCols(swigCPtr, i);
  }

  public int GetCols() {
    int ret = affx_fusionPINVOKE.CCELFileHeaderData_GetCols(swigCPtr);
    return ret;
  }

  public void SetRows(int i) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetRows(swigCPtr, i);
  }

  public int GetRows() {
    int ret = affx_fusionPINVOKE.CCELFileHeaderData_GetRows(swigCPtr);
    return ret;
  }

  public void SetCells(int i) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetCells(swigCPtr, i);
  }

  public int GetCells() {
    int ret = affx_fusionPINVOKE.CCELFileHeaderData_GetCells(swigCPtr);
    return ret;
  }

  public void AppendHeader(string p) {
    affx_fusionPINVOKE.CCELFileHeaderData_AppendHeader(swigCPtr, p);
  }

  public void SetHeader(string p) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetHeader(swigCPtr, p);
  }

  public string GetHeader() {
    string ret = affx_fusionPINVOKE.CCELFileHeaderData_GetHeader(swigCPtr);
    return ret;
  }

  public void SetAlg(string p) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetAlg(swigCPtr, p);
  }

  public string GetAlg() {
    string ret = affx_fusionPINVOKE.CCELFileHeaderData_GetAlg(swigCPtr);
    return ret;
  }

  public void SetParams(string p) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetParams(swigCPtr, p);
  }

  public string GetParams() {
    string ret = affx_fusionPINVOKE.CCELFileHeaderData_GetParams(swigCPtr);
    return ret;
  }

  public void ParseChipType() {
    affx_fusionPINVOKE.CCELFileHeaderData_ParseChipType(swigCPtr);
  }

  public void SetChipType(string p) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetChipType(swigCPtr, p);
  }

  public string GetChipType() {
    string ret = affx_fusionPINVOKE.CCELFileHeaderData_GetChipType(swigCPtr);
    return ret;
  }

  public void ParseDatHeader() {
    affx_fusionPINVOKE.CCELFileHeaderData_ParseDatHeader(swigCPtr);
  }

  public void SetDatHeader() {
    affx_fusionPINVOKE.CCELFileHeaderData_SetDatHeader__SWIG_0(swigCPtr);
  }

  public void SetDatHeader(string p) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetDatHeader__SWIG_1(swigCPtr, p);
  }

  public string GetDatHeader() {
    string ret = affx_fusionPINVOKE.CCELFileHeaderData_GetDatHeader(swigCPtr);
    return ret;
  }

  public void SetMargin(int i) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetMargin(swigCPtr, i);
  }

  public int GetMargin() {
    int ret = affx_fusionPINVOKE.CCELFileHeaderData_GetMargin(swigCPtr);
    return ret;
  }

  public void SetOutliers(uint l) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetOutliers(swigCPtr, l);
  }

  public uint GetOutliers() {
    uint ret = affx_fusionPINVOKE.CCELFileHeaderData_GetOutliers(swigCPtr);
    return ret;
  }

  public void IncrementOutliers() {
    affx_fusionPINVOKE.CCELFileHeaderData_IncrementOutliers(swigCPtr);
  }

  public void DecrementOutliers() {
    affx_fusionPINVOKE.CCELFileHeaderData_DecrementOutliers(swigCPtr);
  }

  public void SetMasked(uint l) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetMasked(swigCPtr, l);
  }

  public uint GetMasked() {
    uint ret = affx_fusionPINVOKE.CCELFileHeaderData_GetMasked(swigCPtr);
    return ret;
  }

  public void IncrementMasked() {
    affx_fusionPINVOKE.CCELFileHeaderData_IncrementMasked(swigCPtr);
  }

  public void DecrementMasked() {
    affx_fusionPINVOKE.CCELFileHeaderData_DecrementMasked(swigCPtr);
  }

  public void ParseAlgorithmParameters() {
    affx_fusionPINVOKE.CCELFileHeaderData_ParseAlgorithmParameters(swigCPtr);
  }

  public void AddAlgorithmParameter(SWIGTYPE_p_std__string tag, SWIGTYPE_p_std__string value) {
    affx_fusionPINVOKE.CCELFileHeaderData_AddAlgorithmParameter__SWIG_0(swigCPtr, SWIGTYPE_p_std__string.getCPtr(tag), SWIGTYPE_p_std__string.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddAlgorithmParameter(string tag, string value) {
    affx_fusionPINVOKE.CCELFileHeaderData_AddAlgorithmParameter__SWIG_1(swigCPtr, tag, value);
  }

  public void SetAlgorithmParameter(string tag, string value) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetAlgorithmParameter(swigCPtr, tag, value);
  }

  public string GetAlgorithmParameter(string tag) {
    string ret = affx_fusionPINVOKE.CCELFileHeaderData_GetAlgorithmParameter(swigCPtr, tag);
    return ret;
  }

  public string GetAlgorithmParameterTag(int index) {
    string ret = affx_fusionPINVOKE.CCELFileHeaderData_GetAlgorithmParameterTag(swigCPtr, index);
    return ret;
  }

  public int GetNumberAlgorithmParameters() {
    int ret = affx_fusionPINVOKE.CCELFileHeaderData_GetNumberAlgorithmParameters(swigCPtr);
    return ret;
  }

  public string GetAlgorithmParameters() {
    string ret = affx_fusionPINVOKE.CCELFileHeaderData_GetAlgorithmParameters(swigCPtr);
    return ret;
  }

  public void SetGridCorners(GridCoordinatesType grid) {
    affx_fusionPINVOKE.CCELFileHeaderData_SetGridCorners(swigCPtr, GridCoordinatesType.getCPtr(grid));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void ParseCorners() {
    affx_fusionPINVOKE.CCELFileHeaderData_ParseCorners(swigCPtr);
  }

  public GridCoordinatesType GetGridCorners() {
    GridCoordinatesType ret = new GridCoordinatesType(affx_fusionPINVOKE.CCELFileHeaderData_GetGridCorners(swigCPtr), true);
    return ret;
  }

}
