/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class IFusionCHPDataAdapter : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IFusionCHPDataAdapter(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(IFusionCHPDataAdapter obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~IFusionCHPDataAdapter() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_IFusionCHPDataAdapter(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public virtual IFusionCHPHeaderAdapter GetHeader() {
    IFusionCHPHeaderAdapter ret = new IFusionCHPHeaderAdapter(affx_fusionPINVOKE.IFusionCHPDataAdapter_GetHeader(swigCPtr), false);
    return ret;
  }

  public virtual bool CanReadFile() {
    bool ret = affx_fusionPINVOKE.IFusionCHPDataAdapter_CanReadFile(swigCPtr);
    return ret;
  }

  public virtual bool GetExpressionResults(int index, FusionExpressionProbeSetResults result) {
    bool ret = affx_fusionPINVOKE.IFusionCHPDataAdapter_GetExpressionResults(swigCPtr, index, FusionExpressionProbeSetResults.getCPtr(result));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool GetGenotypingResults(int index, FusionGenotypeProbeSetResults result) {
    bool ret = affx_fusionPINVOKE.IFusionCHPDataAdapter_GetGenotypingResults(swigCPtr, index, FusionGenotypeProbeSetResults.getCPtr(result));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool GetUniversalResults(int index, FusionUniversalProbeSetResults results) {
    bool ret = affx_fusionPINVOKE.IFusionCHPDataAdapter_GetUniversalResults(swigCPtr, index, FusionUniversalProbeSetResults.getCPtr(results));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool GetResequencingResults(FusionResequencingResults results) {
    bool ret = affx_fusionPINVOKE.IFusionCHPDataAdapter_GetResequencingResults(swigCPtr, FusionResequencingResults.getCPtr(results));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool Read() {
    bool ret = affx_fusionPINVOKE.IFusionCHPDataAdapter_Read(swigCPtr);
    return ret;
  }

  public virtual bool ReadHeader() {
    bool ret = affx_fusionPINVOKE.IFusionCHPDataAdapter_ReadHeader(swigCPtr);
    return ret;
  }

  public virtual void SetFileName(string value) {
    affx_fusionPINVOKE.IFusionCHPDataAdapter_SetFileName(swigCPtr, value);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual string GetFileName() {
    string ret = affx_fusionPINVOKE.IFusionCHPDataAdapter_GetFileName(swigCPtr);
    return ret;
  }

  public virtual void Clear() {
    affx_fusionPINVOKE.IFusionCHPDataAdapter_Clear(swigCPtr);
  }

}
