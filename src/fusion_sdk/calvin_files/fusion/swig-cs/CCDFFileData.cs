/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CCDFFileData : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CCDFFileData(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CCDFFileData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CCDFFileData() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_CCDFFileData(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public void SetFileName(string name) {
    affx_fusionPINVOKE.CCDFFileData_SetFileName(swigCPtr, name);
  }

  public string GetFileName() {
    string ret = affx_fusionPINVOKE.CCDFFileData_GetFileName(swigCPtr);
    return ret;
  }

  public CCDFFileHeader GetHeader() {
    CCDFFileHeader ret = new CCDFFileHeader(affx_fusionPINVOKE.CCDFFileData_GetHeader(swigCPtr), false);
    return ret;
  }

  public string GetError() {
    string ret = affx_fusionPINVOKE.CCDFFileData_GetError(swigCPtr);
    return ret;
  }

  public string GetProbeSetName(int index) {
    string ret = affx_fusionPINVOKE.CCDFFileData_GetProbeSetName(swigCPtr, index);
    return ret;
  }

  public string GetChipType() {
    string ret = affx_fusionPINVOKE.CCDFFileData_GetChipType(swigCPtr);
    return ret;
  }

  public bool Read() {
    bool ret = affx_fusionPINVOKE.CCDFFileData_Read(swigCPtr);
    return ret;
  }

  public bool ReadHeader() {
    bool ret = affx_fusionPINVOKE.CCDFFileData_ReadHeader(swigCPtr);
    return ret;
  }

  public bool Exists() {
    bool ret = affx_fusionPINVOKE.CCDFFileData_Exists(swigCPtr);
    return ret;
  }

  public void Close() {
    affx_fusionPINVOKE.CCDFFileData_Close(swigCPtr);
  }

  public bool IsXDACompatibleFile() {
    bool ret = affx_fusionPINVOKE.CCDFFileData_IsXDACompatibleFile(swigCPtr);
    return ret;
  }

  public GeneChipProbeSetType GetProbeSetType(int index) {
    GeneChipProbeSetType ret = (GeneChipProbeSetType)affx_fusionPINVOKE.CCDFFileData_GetProbeSetType(swigCPtr, index);
    return ret;
  }

  public void GetProbeSetInformation(int index, CCDFProbeSetInformation info) {
    affx_fusionPINVOKE.CCDFFileData_GetProbeSetInformation(swigCPtr, index, CCDFProbeSetInformation.getCPtr(info));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void GetQCProbeSetInformation(int index, CCDFQCProbeSetInformation info) {
    affx_fusionPINVOKE.CCDFFileData_GetQCProbeSetInformation(swigCPtr, index, CCDFQCProbeSetInformation.getCPtr(info));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public void GetQCProbeSetInformation_By_Type(GeneChipQCProbeSetType qcType, CCDFQCProbeSetInformation info) {
    affx_fusionPINVOKE.CCDFFileData_GetQCProbeSetInformation_By_Type(swigCPtr, (int)qcType, CCDFQCProbeSetInformation.getCPtr(info));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public CCDFFileData() : this(affx_fusionPINVOKE.new_CCDFFileData(), true) {
  }

}
