/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ParameterNameValueType : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ParameterNameValueType(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ParameterNameValueType obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ParameterNameValueType() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_ParameterNameValueType(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public ParameterNameValueType() : this(affx_fusionPINVOKE.new_ParameterNameValueType__SWIG_0(), true) {
  }

  public ParameterNameValueType(SWIGTYPE_p_std__wstring name, SWIGTYPE_p_void mimeValue, int mimeValueSize, SWIGTYPE_p_std__wstring mimeType) : this(affx_fusionPINVOKE.new_ParameterNameValueType__SWIG_1(SWIGTYPE_p_std__wstring.getCPtr(name), SWIGTYPE_p_void.getCPtr(mimeValue), mimeValueSize, SWIGTYPE_p_std__wstring.getCPtr(mimeType)), true) {
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public ParameterNameValueType(SWIGTYPE_p_std__wstring name, MIMEValue mimeValue, SWIGTYPE_p_std__wstring mimeType) : this(affx_fusionPINVOKE.new_ParameterNameValueType__SWIG_2(SWIGTYPE_p_std__wstring.getCPtr(name), MIMEValue.getCPtr(mimeValue), SWIGTYPE_p_std__wstring.getCPtr(mimeType)), true) {
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public ParameterNameValueType ParameterNameValueType_copy(ParameterNameValueType param) {
    ParameterNameValueType ret = new ParameterNameValueType(affx_fusionPINVOKE.ParameterNameValueType_ParameterNameValueType_copy(swigCPtr, ParameterNameValueType.getCPtr(param)), true);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ParameterNameValueType_equals_obj(ParameterNameValueType param) {
    bool ret = affx_fusionPINVOKE.ParameterNameValueType_ParameterNameValueType_equals_obj(swigCPtr, ParameterNameValueType.getCPtr(param));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ParameterNameValueType_not_equals_obj(ParameterNameValueType param) {
    bool ret = affx_fusionPINVOKE.ParameterNameValueType_ParameterNameValueType_not_equals_obj(swigCPtr, ParameterNameValueType.getCPtr(param));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ParameterNameValueType_equals_name(SWIGTYPE_p_std__wstring name) {
    bool ret = affx_fusionPINVOKE.ParameterNameValueType_ParameterNameValueType_equals_name(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(name));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ParameterNameValueType_not_equals_name(SWIGTYPE_p_std__wstring name) {
    bool ret = affx_fusionPINVOKE.ParameterNameValueType_ParameterNameValueType_not_equals_name(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(name));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ParameterNameValueType_less_than(ParameterNameValueType param) {
    bool ret = affx_fusionPINVOKE.ParameterNameValueType_ParameterNameValueType_less_than(swigCPtr, ParameterNameValueType.getCPtr(param));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ParameterNameValueType_greater_than(ParameterNameValueType param) {
    bool ret = affx_fusionPINVOKE.ParameterNameValueType_ParameterNameValueType_greater_than(swigCPtr, ParameterNameValueType.getCPtr(param));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__wstring GetName() {
    SWIGTYPE_p_std__wstring ret = new SWIGTYPE_p_std__wstring(affx_fusionPINVOKE.ParameterNameValueType_GetName(swigCPtr), true);
    return ret;
  }

  public void SetName(SWIGTYPE_p_std__wstring value) {
    affx_fusionPINVOKE.ParameterNameValueType_SetName(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public ParameterNameValueType.ParameterType GetParameterType() {
    ParameterNameValueType.ParameterType ret = (ParameterNameValueType.ParameterType)affx_fusionPINVOKE.ParameterNameValueType_GetParameterType(swigCPtr);
    return ret;
  }

  public char GetValueInt8() {
    char ret = affx_fusionPINVOKE.ParameterNameValueType_GetValueInt8(swigCPtr);
    return ret;
  }

  public void SetValueInt8(char value) {
    affx_fusionPINVOKE.ParameterNameValueType_SetValueInt8(swigCPtr, value);
  }

  public byte GetValueUInt8() {
    byte ret = affx_fusionPINVOKE.ParameterNameValueType_GetValueUInt8(swigCPtr);
    return ret;
  }

  public void SetValueUInt8(byte value) {
    affx_fusionPINVOKE.ParameterNameValueType_SetValueUInt8(swigCPtr, value);
  }

  public short GetValueInt16() {
    short ret = affx_fusionPINVOKE.ParameterNameValueType_GetValueInt16(swigCPtr);
    return ret;
  }

  public void SetValueInt16(short value) {
    affx_fusionPINVOKE.ParameterNameValueType_SetValueInt16(swigCPtr, value);
  }

  public ushort GetValueUInt16() {
    ushort ret = affx_fusionPINVOKE.ParameterNameValueType_GetValueUInt16(swigCPtr);
    return ret;
  }

  public void SetValueUInt16(ushort value) {
    affx_fusionPINVOKE.ParameterNameValueType_SetValueUInt16(swigCPtr, value);
  }

  public int GetValueInt32() {
    int ret = affx_fusionPINVOKE.ParameterNameValueType_GetValueInt32(swigCPtr);
    return ret;
  }

  public void SetValueInt32(int value) {
    affx_fusionPINVOKE.ParameterNameValueType_SetValueInt32(swigCPtr, value);
  }

  public uint GetValueUInt32() {
    uint ret = affx_fusionPINVOKE.ParameterNameValueType_GetValueUInt32(swigCPtr);
    return ret;
  }

  public void SetValueUInt32(uint value) {
    affx_fusionPINVOKE.ParameterNameValueType_SetValueUInt32(swigCPtr, value);
  }

  public float GetValueFloat() {
    float ret = affx_fusionPINVOKE.ParameterNameValueType_GetValueFloat(swigCPtr);
    return ret;
  }

  public void SetValueFloat(float value) {
    affx_fusionPINVOKE.ParameterNameValueType_SetValueFloat(swigCPtr, value);
  }

  public SWIGTYPE_p_std__wstring GetValueText() {
    SWIGTYPE_p_std__wstring ret = new SWIGTYPE_p_std__wstring(affx_fusionPINVOKE.ParameterNameValueType_GetValueText(swigCPtr), true);
    return ret;
  }

  public void SetValueText(SWIGTYPE_p_std__wstring value) {
    affx_fusionPINVOKE.ParameterNameValueType_SetValueText(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetValueAscii() {
    string ret = affx_fusionPINVOKE.ParameterNameValueType_GetValueAscii(swigCPtr);
    return ret;
  }

  public void SetValueAscii(string value) {
    affx_fusionPINVOKE.ParameterNameValueType_SetValueAscii(swigCPtr, value);
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_std__wstring GetMIMEType() {
    SWIGTYPE_p_std__wstring ret = new SWIGTYPE_p_std__wstring(affx_fusionPINVOKE.ParameterNameValueType_GetMIMEType(swigCPtr), true);
    return ret;
  }

  public void SetMIMEType(SWIGTYPE_p_std__wstring value) {
    affx_fusionPINVOKE.ParameterNameValueType_SetMIMEType(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public MIMEValue GetMIMEValue() {
    MIMEValue ret = new MIMEValue(affx_fusionPINVOKE.ParameterNameValueType_GetMIMEValue(swigCPtr), true);
    return ret;
  }

  public void SetMIMEValue(MIMEValue value) {
    affx_fusionPINVOKE.ParameterNameValueType_SetMIMEValue(swigCPtr, MIMEValue.getCPtr(value));
    if (affx_fusionPINVOKE.SWIGPendingException.Pending) throw affx_fusionPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_std__wstring ToString() {
    SWIGTYPE_p_std__wstring ret = new SWIGTYPE_p_std__wstring(affx_fusionPINVOKE.ParameterNameValueType_ToString(swigCPtr), true);
    return ret;
  }

  public enum ParameterType {
    Int8Type,
    UInt8Type,
    Int16Type,
    UInt16Type,
    Int32Type,
    UInt32Type,
    FloatType,
    TextType,
    AsciiType,
    UnknownType
  }

}
