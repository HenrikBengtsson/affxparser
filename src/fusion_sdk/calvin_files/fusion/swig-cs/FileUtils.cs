/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class FileUtils : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FileUtils(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(FileUtils obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~FileUtils() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionPINVOKE.delete_FileUtils(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public static bool Exists(string fileName) {
    bool ret = affx_fusionPINVOKE.FileUtils_Exists(fileName);
    return ret;
  }

  public static bool LockFile(string fileName) {
    bool ret = affx_fusionPINVOKE.FileUtils_LockFile(fileName);
    return ret;
  }

  public static bool UnlockFile(string fileName) {
    bool ret = affx_fusionPINVOKE.FileUtils_UnlockFile(fileName);
    return ret;
  }

  public static SWIGTYPE_p_std__listTstd__string_t ListFiles(string pathName, string ext) {
    SWIGTYPE_p_std__listTstd__string_t ret = new SWIGTYPE_p_std__listTstd__string_t(affx_fusionPINVOKE.FileUtils_ListFiles(pathName, ext), true);
    return ret;
  }

  public FileUtils() : this(affx_fusionPINVOKE.new_FileUtils(), true) {
  }

}
