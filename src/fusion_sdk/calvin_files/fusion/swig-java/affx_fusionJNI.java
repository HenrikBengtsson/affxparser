/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


class affx_fusionJNI {
  public final static native long new_AffymetrixGuid();
  public final static native void delete_AffymetrixGuid(long jarg1);
  public final static native String AffymetrixGuid_GenerateNewGuid();
  public final static native int CheckSum_OnesComplementCheckSum(long jarg1, long jarg2);
  public final static native long new_CheckSum();
  public final static native void delete_CheckSum(long jarg1);
  public final static native int get_UpperLeft();
  public final static native void set_FPoint_x(long jarg1, float jarg2);
  public final static native float get_FPoint_x(long jarg1);
  public final static native void set_FPoint_y(long jarg1, float jarg2);
  public final static native float get_FPoint_y(long jarg1);
  public final static native boolean FPoint_FPoint_equals(long jarg1, long jarg2);
  public final static native boolean FPoint_FPoint_not_equals(long jarg1, long jarg2);
  public final static native long new_FPoint();
  public final static native void delete_FPoint(long jarg1);
  public final static native void FRegion_Clear(long jarg1);
  public final static native void set_FRegion_pts(long jarg1, long jarg2);
  public final static native long get_FRegion_pts(long jarg1);
  public final static native long new_FRegion();
  public final static native void delete_FRegion(long jarg1);
  public final static native long new_FRect__SWIG_0();
  public final static native long new_FRect__SWIG_1(long jarg1);
  public final static native long FRect_op_FRegion(long jarg1);
  public final static native boolean FRect_IsEmpty(long jarg1);
  public final static native void set_FRect_upperleft(long jarg1, long jarg2);
  public final static native long get_FRect_upperleft(long jarg1);
  public final static native void set_FRect_upperright(long jarg1, long jarg2);
  public final static native long get_FRect_upperright(long jarg1);
  public final static native void set_FRect_lowerright(long jarg1, long jarg2);
  public final static native long get_FRect_lowerright(long jarg1);
  public final static native void set_FRect_lowerleft(long jarg1, long jarg2);
  public final static native long get_FRect_lowerleft(long jarg1);
  public final static native void delete_FRect(long jarg1);
  public final static native void set_Point_x(long jarg1, int jarg2);
  public final static native int get_Point_x(long jarg1);
  public final static native void set_Point_y(long jarg1, int jarg2);
  public final static native int get_Point_y(long jarg1);
  public final static native boolean Point_Point_equals(long jarg1, long jarg2);
  public final static native boolean Point_Point_not_equals(long jarg1, long jarg2);
  public final static native long new_Point();
  public final static native void delete_Point(long jarg1);
  public final static native void set_PointU16_t_x(long jarg1, int jarg2);
  public final static native int get_PointU16_t_x(long jarg1);
  public final static native void set_PointU16_t_y(long jarg1, int jarg2);
  public final static native int get_PointU16_t_y(long jarg1);
  public final static native long new_PointU16_t();
  public final static native void delete_PointU16_t(long jarg1);
  public final static native void Region_Clear(long jarg1);
  public final static native void set_Region_pts(long jarg1, long jarg2);
  public final static native long get_Region_pts(long jarg1);
  public final static native long new_Region();
  public final static native void delete_Region(long jarg1);
  public final static native long new_Rect__SWIG_0();
  public final static native long new_Rect__SWIG_1(long jarg1);
  public final static native long Rect_op_Region(long jarg1);
  public final static native boolean Rect_IsEmpty(long jarg1);
  public final static native void set_Rect_upperleft(long jarg1, long jarg2);
  public final static native long get_Rect_upperleft(long jarg1);
  public final static native void set_Rect_upperright(long jarg1, long jarg2);
  public final static native long get_Rect_upperright(long jarg1);
  public final static native void set_Rect_lowerright(long jarg1, long jarg2);
  public final static native long get_Rect_lowerright(long jarg1);
  public final static native void set_Rect_lowerleft(long jarg1, long jarg2);
  public final static native long get_Rect_lowerleft(long jarg1);
  public final static native void delete_Rect(long jarg1);
  public final static native long new_DateTime();
  public final static native void delete_DateTime(long jarg1);
  public final static native long DateTime_Date__SWIG_0(long jarg1);
  public final static native void DateTime_Date__SWIG_1(long jarg1, long jarg2);
  public final static native long DateTime_Time__SWIG_0(long jarg1);
  public final static native void DateTime_Time__SWIG_1(long jarg1, long jarg2);
  public final static native void DateTime_Clear(long jarg1);
  public final static native long DateTime_GetCurrentDateTime();
  public final static native boolean DateTime_IsUTC(long jarg1);
  public final static native long DateTime_ToString(long jarg1);
  public final static native long DateTime_Parse(long jarg1);
  public final static native boolean FileUtils_Exists(String jarg1);
  public final static native boolean FileUtils_LockFile(String jarg1);
  public final static native boolean FileUtils_UnlockFile(String jarg1);
  public final static native long FileUtils_ListFiles(String jarg1, String jarg2);
  public final static native long new_FileUtils();
  public final static native void delete_FileUtils(long jarg1);
  public final static native void StringUtils_STLTrimLeft__SWIG_0(long jarg1, char jarg2);
  public final static native void StringUtils_STLTrimLeft__SWIG_1(long jarg1);
  public final static native void StringUtils_STLTrimRight__SWIG_0(long jarg1, char jarg2);
  public final static native void StringUtils_STLTrimRight__SWIG_1(long jarg1);
  public final static native void StringUtils_STLTrimLeft__SWIG_2(long jarg1, long jarg2);
  public final static native void StringUtils_STLTrimLeft__SWIG_3(long jarg1);
  public final static native void StringUtils_STLTrimRight__SWIG_2(long jarg1, long jarg2);
  public final static native void StringUtils_STLTrimRight__SWIG_3(long jarg1);
  public final static native String StringUtils_ConvertWCSToMBS(long jarg1);
  public final static native long StringUtils_ConvertMBSToWCS(String jarg1);
  public final static native long new_StringUtils();
  public final static native void delete_StringUtils(long jarg1);
  public final static native void set_Subgrid_row(long jarg1, int jarg2);
  public final static native int get_Subgrid_row(long jarg1);
  public final static native void set_Subgrid_col(long jarg1, int jarg2);
  public final static native int get_Subgrid_col(long jarg1);
  public final static native void set_Subgrid_pixelgrid(long jarg1, long jarg2);
  public final static native long get_Subgrid_pixelgrid(long jarg1);
  public final static native void set_Subgrid_cellgrid(long jarg1, long jarg2);
  public final static native long get_Subgrid_cellgrid(long jarg1);
  public final static native long new_Subgrid();
  public final static native void delete_Subgrid(long jarg1);
  public final static native long new_CalvinException__SWIG_0();
  public final static native long new_CalvinException__SWIG_1(long jarg1, long jarg2, long jarg3, String jarg4, int jarg5, java.math.BigInteger jarg6);
  public final static native long new_CalvinException__SWIG_2(long jarg1, long jarg2, java.math.BigInteger jarg3);
  public final static native long new_CalvinException__SWIG_3(long jarg1, java.math.BigInteger jarg2);
  public final static native long new_CalvinException__SWIG_4(java.math.BigInteger jarg1);
  public final static native long CalvinException_Source__SWIG_0(long jarg1);
  public final static native void CalvinException_Source__SWIG_1(long jarg1, long jarg2);
  public final static native long CalvinException_Description__SWIG_0(long jarg1);
  public final static native void CalvinException_Description__SWIG_1(long jarg1, long jarg2);
  public final static native long CalvinException_TimeStamp__SWIG_0(long jarg1);
  public final static native void CalvinException_TimeStamp__SWIG_1(long jarg1, long jarg2);
  public final static native String CalvinException_SourceFile__SWIG_0(long jarg1);
  public final static native void CalvinException_SourceFile__SWIG_1(long jarg1, String jarg2);
  public final static native int CalvinException_LineNumber__SWIG_0(long jarg1);
  public final static native void CalvinException_LineNumber__SWIG_1(long jarg1, int jarg2);
  public final static native java.math.BigInteger CalvinException_ErrorCode__SWIG_0(long jarg1);
  public final static native void CalvinException_ErrorCode__SWIG_1(long jarg1, java.math.BigInteger jarg2);
  public final static native long CalvinException_ToString(long jarg1);
  public final static native void delete_CalvinException(long jarg1);
  public final static native long new_NotImplementedException();
  public final static native void delete_NotImplementedException(long jarg1);
  public final static native long new_FormatException();
  public final static native void delete_FormatException(long jarg1);
  public final static native long new_ParameterMismatchException();
  public final static native void delete_ParameterMismatchException(long jarg1);
  public final static native long new_UnexpectedParameterException(long jarg1);
  public final static native void delete_UnexpectedParameterException(long jarg1);
  public final static native long new_OutOfRangeParameterException(long jarg1, long jarg2);
  public final static native void delete_OutOfRangeParameterException(long jarg1);
  public final static native void set_ParameterNameValuePair_Name(long jarg1, long jarg2);
  public final static native long get_ParameterNameValuePair_Name(long jarg1);
  public final static native void set_ParameterNameValuePair_Value(long jarg1, long jarg2);
  public final static native long get_ParameterNameValuePair_Value(long jarg1);
  public final static native long ParameterNameValuePair_ParameterNameValuePair_copy(long jarg1, long jarg2);
  public final static native boolean ParameterNameValuePair_ParameterNameValuePair_equals_obj(long jarg1, long jarg2);
  public final static native boolean ParameterNameValuePair_ParameterNameValueControlVocabulary_equals_name(long jarg1, long jarg2);
  public final static native long new_ParameterNameValuePair();
  public final static native void delete_ParameterNameValuePair(long jarg1);
  public final static native void set_ParameterNameValueControlVocabulary_Name(long jarg1, long jarg2);
  public final static native long get_ParameterNameValueControlVocabulary_Name(long jarg1);
  public final static native void set_ParameterNameValueControlVocabulary_Value(long jarg1, long jarg2);
  public final static native long get_ParameterNameValueControlVocabulary_Value(long jarg1);
  public final static native void set_ParameterNameValueControlVocabulary_ControlledVocabulary(long jarg1, long jarg2);
  public final static native long get_ParameterNameValueControlVocabulary_ControlledVocabulary(long jarg1);
  public final static native long ParameterNameValueControlVocabulary_ParameterNameValueControlVocabulary_copy(long jarg1, long jarg2);
  public final static native boolean ParameterNameValueControlVocabulary_ParameterNameValueControlVocabulary_equals_obj(long jarg1, long jarg2);
  public final static native boolean ParameterNameValueControlVocabulary_ParameterNameValueControlVocabulary_equals_name(long jarg1, long jarg2);
  public final static native long new_ParameterNameValueControlVocabulary();
  public final static native void delete_ParameterNameValueControlVocabulary(long jarg1);
  public final static native int get_PARAMETER_VALUE_SIGNED_INTEGRAL();
  public final static native int get_PARAMETER_VALUE_UNSIGNED_INTEGRAL();
  public final static native int get_PARAMETER_VALUE_FLOATING_POINT();
  public final static native int get_PARAMETER_VALUE_STRING8_TYPE();
  public final static native int get_PARAMETER_VALUE_STRING16_TYPE();
  public final static native void set_ParameterDataValue_i8(long jarg1, char jarg2);
  public final static native char get_ParameterDataValue_i8(long jarg1);
  public final static native void set_ParameterDataValue_i16(long jarg1, short jarg2);
  public final static native short get_ParameterDataValue_i16(long jarg1);
  public final static native void set_ParameterDataValue_i32(long jarg1, int jarg2);
  public final static native int get_ParameterDataValue_i32(long jarg1);
  public final static native void set_ParameterDataValue_iu8(long jarg1, short jarg2);
  public final static native short get_ParameterDataValue_iu8(long jarg1);
  public final static native void set_ParameterDataValue_iu16(long jarg1, int jarg2);
  public final static native int get_ParameterDataValue_iu16(long jarg1);
  public final static native void set_ParameterDataValue_iu32(long jarg1, long jarg2);
  public final static native long get_ParameterDataValue_iu32(long jarg1);
  public final static native void set_ParameterDataValue_f32(long jarg1, float jarg2);
  public final static native float get_ParameterDataValue_f32(long jarg1);
  public final static native long new_ParameterDataValue();
  public final static native void delete_ParameterDataValue(long jarg1);
  public final static native void set_ParameterValue_paramValueType(long jarg1, short jarg2);
  public final static native short get_ParameterValue_paramValueType(long jarg1);
  public final static native void set_ParameterValue_valueSize(long jarg1, int jarg2);
  public final static native int get_ParameterValue_valueSize(long jarg1);
  public final static native void set_ParameterValue_paramValue(long jarg1, long jarg2);
  public final static native long get_ParameterValue_paramValue(long jarg1);
  public final static native long new_ParameterValue();
  public final static native void delete_ParameterValue(long jarg1);
  public final static native String get_AFFY_EXPR_PS();
  public final static native String get_AFFY_GENO_PS();
  public final static native String get_AFFY_TAG_PS();
  public final static native String get_AFFY_RESEQ_PS();
  public final static native String get_AFFY_CNTRL_PS();
  public final static native long new_MIMEValue__SWIG_0();
  public final static native long new_MIMEValue__SWIG_1(long jarg1, long jarg2);
  public final static native long new_MIMEValue__SWIG_2(long jarg1);
  public final static native void delete_MIMEValue(long jarg1);
  public final static native long MIMEValue_MIMEValue_copy(long jarg1, long jarg2);
  public final static native boolean MIMEValue_MIMEValue_equals(long jarg1, long jarg2);
  public final static native boolean MIMEValue_MIMEValue_not_equals(long jarg1, long jarg2);
  public final static native void MIMEValue_SetValue(long jarg1, long jarg2, long jarg3);
  public final static native long MIMEValue_GetValue(long jarg1, long jarg2);
  public final static native long MIMEValue_Size(long jarg1);
  public final static native long new_ParameterNameValueType__SWIG_0();
  public final static native long new_ParameterNameValueType__SWIG_1(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native long new_ParameterNameValueType__SWIG_2(long jarg1, long jarg2, long jarg3);
  public final static native long ParameterNameValueType_ParameterNameValueType_copy(long jarg1, long jarg2);
  public final static native boolean ParameterNameValueType_ParameterNameValueType_equals_obj(long jarg1, long jarg2);
  public final static native boolean ParameterNameValueType_ParameterNameValueType_not_equals_obj(long jarg1, long jarg2);
  public final static native boolean ParameterNameValueType_ParameterNameValueType_equals_name(long jarg1, long jarg2);
  public final static native boolean ParameterNameValueType_ParameterNameValueType_not_equals_name(long jarg1, long jarg2);
  public final static native boolean ParameterNameValueType_ParameterNameValueType_less_than(long jarg1, long jarg2);
  public final static native boolean ParameterNameValueType_ParameterNameValueType_greater_than(long jarg1, long jarg2);
  public final static native long ParameterNameValueType_GetName(long jarg1);
  public final static native void ParameterNameValueType_SetName(long jarg1, long jarg2);
  public final static native int ParameterNameValueType_GetParameterType(long jarg1);
  public final static native char ParameterNameValueType_GetValueInt8(long jarg1);
  public final static native void ParameterNameValueType_SetValueInt8(long jarg1, char jarg2);
  public final static native short ParameterNameValueType_GetValueUInt8(long jarg1);
  public final static native void ParameterNameValueType_SetValueUInt8(long jarg1, short jarg2);
  public final static native short ParameterNameValueType_GetValueInt16(long jarg1);
  public final static native void ParameterNameValueType_SetValueInt16(long jarg1, short jarg2);
  public final static native int ParameterNameValueType_GetValueUInt16(long jarg1);
  public final static native void ParameterNameValueType_SetValueUInt16(long jarg1, int jarg2);
  public final static native int ParameterNameValueType_GetValueInt32(long jarg1);
  public final static native void ParameterNameValueType_SetValueInt32(long jarg1, int jarg2);
  public final static native long ParameterNameValueType_GetValueUInt32(long jarg1);
  public final static native void ParameterNameValueType_SetValueUInt32(long jarg1, long jarg2);
  public final static native float ParameterNameValueType_GetValueFloat(long jarg1);
  public final static native void ParameterNameValueType_SetValueFloat(long jarg1, float jarg2);
  public final static native long ParameterNameValueType_GetValueText(long jarg1);
  public final static native void ParameterNameValueType_SetValueText(long jarg1, long jarg2);
  public final static native String ParameterNameValueType_GetValueAscii(long jarg1);
  public final static native void ParameterNameValueType_SetValueAscii(long jarg1, String jarg2);
  public final static native long ParameterNameValueType_GetMIMEType(long jarg1);
  public final static native void ParameterNameValueType_SetMIMEType(long jarg1, long jarg2);
  public final static native long ParameterNameValueType_GetMIMEValue(long jarg1);
  public final static native void ParameterNameValueType_SetMIMEValue(long jarg1, long jarg2);
  public final static native long ParameterNameValueType_ToString(long jarg1);
  public final static native void delete_ParameterNameValueType(long jarg1);
  public final static native long new_ArrayAttributes();
  public final static native void delete_ArrayAttributes(long jarg1);
  public final static native long ArrayAttributes_Identifier(long jarg1);
  public final static native long ArrayAttributes_Attributes(long jarg1);
  public final static native void ArrayAttributes_Clear(long jarg1);
  public final static native long new_ArrayAuditEntry();
  public final static native void delete_ArrayAuditEntry(long jarg1);
  public final static native long ArrayAuditEntry_UserName(long jarg1);
  public final static native long ArrayAuditEntry_DateTime(long jarg1);
  public final static native long ArrayAuditEntry_ActionType(long jarg1);
  public final static native long ArrayAuditEntry_ArrayGuid(long jarg1);
  public final static native long ArrayAuditEntry_InputFileGuids(long jarg1);
  public final static native long ArrayAuditEntry_OutputFileGuids(long jarg1);
  public final static native long ArrayAuditEntry_ActionParameters(long jarg1);
  public final static native void ArrayAuditEntry_Clear(long jarg1);
  public final static native int get_ARRAY_FILE_CREATEION_ACTION();
  public final static native int get_ARRAY_FILE_ATTRIBUTE_UPDATE_ACTION();
  public final static native int get_FLUIDICS_INSTRUMENT_CONTROL_ACTION();
  public final static native int get_SCAN_INSTRUMENT_CONTROL_ACTION();
  public final static native String get_ARRAY_FILE_TYPE_IDENTIFIER();
  public final static native long new_ArrayData();
  public final static native void delete_ArrayData(long jarg1);
  public final static native long ArrayData_ArraySetIdentifier(long jarg1);
  public final static native long ArrayData_PhysicalArraysAttributes(long jarg1);
  public final static native long ArrayData_UserAttributes(long jarg1);
  public final static native void ArrayData_Clear(long jarg1);
  public final static native int get_MAX_CDF_PROBE_SET_NAME_LENGTH();
  public final static native long new_CDFData__SWIG_0();
  public final static native long new_CDFData__SWIG_1(String jarg1);
  public final static native void delete_CDFData(long jarg1);
  public final static native void CDFData_Clear(long jarg1);
  public final static native void CDFData_SetFilename(long jarg1, String jarg2);
  public final static native String CDFData_GetFilename(long jarg1);
  public final static native int CDFData_GetProbeSetCnt(long jarg1);
  public final static native void CDFData_SetProbeSetCnt(long jarg1, long jarg2, int jarg3);
  public final static native long CDFData_GetProbeSetName(long jarg1, int jarg2);
  public final static native void CDFData_SetArrayRows(long jarg1, long jarg2);
  public final static native long CDFData_GetArrayRows(long jarg1);
  public final static native void CDFData_SetArrayCols(long jarg1, long jarg2);
  public final static native long CDFData_GetArrayCols(long jarg1);
  public final static native void CDFData_SetRefSequence(long jarg1, String jarg2);
  public final static native String CDFData_GetRefSequence(long jarg1);
  public final static native String CDFData_GetDataTypeId(long jarg1);
  public final static native long CDFData_GetFileHeader(long jarg1);
  public final static native long CDFData_GetGenericData(long jarg1);
  public final static native void CDFData_GetProbeSetInformation__SWIG_0(long jarg1, int jarg2, long jarg3);
  public final static native void CDFData_GetProbeSetInformation__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native void CDFData_GetQCProbeSetInformation__SWIG_0(long jarg1, int jarg2, long jarg3);
  public final static native void CDFData_GetQCProbeSetInformation__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native long new_CDFProbeGroupInformation();
  public final static native void delete_CDFProbeGroupInformation(long jarg1);
  public final static native int CDFProbeGroupInformation_GetDirection(long jarg1);
  public final static native long CDFProbeGroupInformation_GetNumLists(long jarg1);
  public final static native long CDFProbeGroupInformation_GetNumCells(long jarg1);
  public final static native short CDFProbeGroupInformation_GetNumCellsPerList(long jarg1);
  public final static native long CDFProbeGroupInformation_GetName(long jarg1);
  public final static native void CDFProbeGroupInformation_GetCell(long jarg1, int jarg2, long jarg3);
  public final static native long new_CDFProbeInformation();
  public final static native long CDFProbeInformation_GetListIndex(long jarg1);
  public final static native int CDFProbeInformation_GetExpos(long jarg1);
  public final static native int CDFProbeInformation_GetX(long jarg1);
  public final static native int CDFProbeInformation_GetY(long jarg1);
  public final static native char CDFProbeInformation_GetPBase(long jarg1);
  public final static native char CDFProbeInformation_GetTBase(long jarg1);
  public final static native void delete_CDFProbeInformation(long jarg1);
  public final static native long new_CDFProbeSetInformation();
  public final static native void delete_CDFProbeSetInformation(long jarg1);
  public final static native long CDFProbeSetInformation_GetName(long jarg1);
  public final static native int CDFProbeSetInformation_GetDirection(long jarg1);
  public final static native long CDFProbeSetInformation_GetNumLists(long jarg1);
  public final static native long CDFProbeSetInformation_GetNumGroups(long jarg1);
  public final static native long CDFProbeSetInformation_GetNumCells(long jarg1);
  public final static native short CDFProbeSetInformation_GetNumCellsPerList(long jarg1);
  public final static native long CDFProbeSetInformation_GetProbeSetNumber(long jarg1);
  public final static native void CDFProbeSetInformation_GetGroupInformation(long jarg1, long jarg2, long jarg3);
  public final static native int CDFProbeSetInformation_GetProbeSetType(long jarg1);
  public final static native long new_CDFQCProbeInformation();
  public final static native int CDFQCProbeInformation_GetX(long jarg1);
  public final static native int CDFQCProbeInformation_GetY(long jarg1);
  public final static native short CDFQCProbeInformation_GetPLen(long jarg1);
  public final static native boolean CDFQCProbeInformation_IsPerfectMatchProbe(long jarg1);
  public final static native boolean CDFQCProbeInformation_IsBackgroundProbe(long jarg1);
  public final static native void delete_CDFQCProbeInformation(long jarg1);
  public final static native long new_CDFQCProbeSetInformation();
  public final static native void delete_CDFQCProbeSetInformation(long jarg1);
  public final static native long CDFQCProbeSetInformation_GetQCProbeSetType(long jarg1);
  public final static native int CDFQCProbeSetInformation_GetNumCells(long jarg1);
  public final static native void CDFQCProbeSetInformation_GetProbeInformation(long jarg1, int jarg2, long jarg3);
  public final static native long new_CHPBackgroundZone__SWIG_0();
  public final static native long new_CHPBackgroundZone__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4);
  public final static native void delete_CHPBackgroundZone(long jarg1);
  public final static native void CHPBackgroundZone_Clear(long jarg1);
  public final static native long CHPBackgroundZone_CHPBackgroundZone_assign(long jarg1, long jarg2);
  public final static native float CHPBackgroundZone_GetCenterX(long jarg1);
  public final static native float CHPBackgroundZone_GetCenterY(long jarg1);
  public final static native float CHPBackgroundZone_GetBackground(long jarg1);
  public final static native float CHPBackgroundZone_GetSmoothFactor(long jarg1);
  public final static native void CHPBackgroundZone_SetCenterX(long jarg1, float jarg2);
  public final static native void CHPBackgroundZone_SetCenterY(long jarg1, float jarg2);
  public final static native void CHPBackgroundZone_SetBackground(long jarg1, float jarg2);
  public final static native void CHPBackgroundZone_SetSmoothFactor(long jarg1, float jarg2);
  public final static native long new_CHPData__SWIG_0();
  public final static native long new_CHPData__SWIG_1(String jarg1, String jarg2);
  public final static native void delete_CHPData(long jarg1);
  public final static native void CHPData_Clear(long jarg1);
  public final static native void CHPData_SetFilename(long jarg1, String jarg2);
  public final static native String CHPData_GetFilename(long jarg1);
  public final static native short CHPData_GetVersion(long jarg1);
  public final static native short CHPData_GetMagic(long jarg1);
  public final static native int CHPData_GetRows(long jarg1);
  public final static native void CHPData_SetRows(long jarg1, int jarg2);
  public final static native int CHPData_GetCols(long jarg1);
  public final static native void CHPData_SetCols(long jarg1, int jarg2);
  public final static native long CHPData_GetProgId(long jarg1);
  public final static native void CHPData_SetProgId(long jarg1, long jarg2);
  public final static native long CHPData_GetArrayType(long jarg1);
  public final static native String CHPData_GetAssayType(long jarg1);
  public final static native void CHPData_SetArrayType(long jarg1, long jarg2);
  public final static native long CHPData_GetAlgName(long jarg1);
  public final static native void CHPData_SetAlgName(long jarg1, long jarg2);
  public final static native long CHPData_GetParentCell(long jarg1);
  public final static native void CHPData_SetParentCell(long jarg1, long jarg2);
  public final static native long CHPData_GetAlgVersion(long jarg1);
  public final static native void CHPData_SetAlgVersion(long jarg1, long jarg2);
  public final static native void CHPData_AddAlgParam(long jarg1, long jarg2, long jarg3);
  public final static native long CHPData_GetAlgParam(long jarg1, long jarg2);
  public final static native void CHPData_AddChipSum(long jarg1, long jarg2, long jarg3);
  public final static native long CHPData_GetChipSums(long jarg1);
  public final static native long CHPData_GetChipSum(long jarg1, long jarg2);
  public final static native long CHPData_GetFileHeader(long jarg1);
  public final static native long CHPData_GetGenericData(long jarg1);
  public final static native void CHPData_SetEntryCount(long jarg1, int jarg2);
  public final static native int CHPData_GetEntryCount(long jarg1);
  public final static native void CHPData_GetExpressionEntry(long jarg1, int jarg2, long jarg3);
  public final static native void CHPData_GetGenotypeEntry(long jarg1, int jarg2, long jarg3);
  public final static native void CHPData_GetUniversalEntry(long jarg1, int jarg2, long jarg3);
  public final static native int CHPData_GetBackgroundZoneCnt(long jarg1);
  public final static native void CHPData_SetBackgroundZoneCnt(long jarg1, int jarg2);
  public final static native void CHPData_GetBackgroundZone(long jarg1, int jarg2, long jarg3);
  public final static native void CHPData_GetBackgroundZones(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native long new_CHPExpressionEntry__SWIG_0();
  public final static native long new_CHPExpressionEntry__SWIG_1(long jarg1, short jarg2, float jarg3, float jarg4, int jarg5, int jarg6, short jarg7, float jarg8, float jarg9, float jarg10, float jarg11, int jarg12);
  public final static native void delete_CHPExpressionEntry(long jarg1);
  public final static native void CHPExpressionEntry_Clear(long jarg1);
  public final static native long CHPExpressionEntry_CHPExpressionEntry_assign(long jarg1, long jarg2);
  public final static native long CHPExpressionEntry_GetProbeSetName(long jarg1);
  public final static native short CHPExpressionEntry_GetDetection(long jarg1);
  public final static native float CHPExpressionEntry_GetDetectionPValue(long jarg1);
  public final static native float CHPExpressionEntry_GetSignal(long jarg1);
  public final static native int CHPExpressionEntry_GetNumPairs(long jarg1);
  public final static native int CHPExpressionEntry_GetNumPairsUsed(long jarg1);
  public final static native short CHPExpressionEntry_GetChange(long jarg1);
  public final static native float CHPExpressionEntry_GetChangePValue(long jarg1);
  public final static native float CHPExpressionEntry_GetSigLogRatio(long jarg1);
  public final static native float CHPExpressionEntry_GetSigLogRatioLo(long jarg1);
  public final static native float CHPExpressionEntry_GetSigLogRatioHi(long jarg1);
  public final static native int CHPExpressionEntry_GetCommonPairs(long jarg1);
  public final static native void CHPExpressionEntry_SetProbeSetName(long jarg1, long jarg2);
  public final static native void CHPExpressionEntry_SetDetection(long jarg1, short jarg2);
  public final static native void CHPExpressionEntry_SetDetectionPValue(long jarg1, float jarg2);
  public final static native void CHPExpressionEntry_SetSignal(long jarg1, float jarg2);
  public final static native void CHPExpressionEntry_SetNumPairs(long jarg1, int jarg2);
  public final static native void CHPExpressionEntry_SetNumPairsUsed(long jarg1, int jarg2);
  public final static native void CHPExpressionEntry_SetChange(long jarg1, short jarg2);
  public final static native void CHPExpressionEntry_SetChangePValue(long jarg1, float jarg2);
  public final static native void CHPExpressionEntry_SetSigLogRatio(long jarg1, float jarg2);
  public final static native void CHPExpressionEntry_SetSigLogRatioLo(long jarg1, float jarg2);
  public final static native void CHPExpressionEntry_SetSigLogRatioHi(long jarg1, float jarg2);
  public final static native void CHPExpressionEntry_SetCommonPairs(long jarg1, int jarg2);
  public final static native long new_CHPGenotypeEntry__SWIG_0();
  public final static native long new_CHPGenotypeEntry__SWIG_1(long jarg1, short jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9);
  public final static native void delete_CHPGenotypeEntry(long jarg1);
  public final static native void CHPGenotypeEntry_Clear(long jarg1);
  public final static native long CHPGenotypeEntry_CHPGenotypeEntry_assign(long jarg1, long jarg2);
  public final static native long CHPGenotypeEntry_GetProbeSetName(long jarg1);
  public final static native short CHPGenotypeEntry_GetCall(long jarg1);
  public final static native float CHPGenotypeEntry_GetConfidence(long jarg1);
  public final static native float CHPGenotypeEntry_GetRAS1(long jarg1);
  public final static native float CHPGenotypeEntry_GetRAS2(long jarg1);
  public final static native float CHPGenotypeEntry_GetAACall(long jarg1);
  public final static native float CHPGenotypeEntry_GetABCall(long jarg1);
  public final static native float CHPGenotypeEntry_GetBBCall(long jarg1);
  public final static native float CHPGenotypeEntry_GetNoCall(long jarg1);
  public final static native void CHPGenotypeEntry_SetProbeSetName(long jarg1, long jarg2);
  public final static native void CHPGenotypeEntry_SetCall(long jarg1, short jarg2);
  public final static native void CHPGenotypeEntry_SetConfidence(long jarg1, float jarg2);
  public final static native void CHPGenotypeEntry_SetRAS1(long jarg1, float jarg2);
  public final static native void CHPGenotypeEntry_SetRAS2(long jarg1, float jarg2);
  public final static native void CHPGenotypeEntry_SetAACall(long jarg1, float jarg2);
  public final static native void CHPGenotypeEntry_SetABCall(long jarg1, float jarg2);
  public final static native void CHPGenotypeEntry_SetBBCall(long jarg1, float jarg2);
  public final static native void CHPGenotypeEntry_SetNoCall(long jarg1, float jarg2);
  public final static native long new_CHPUniversalEntry__SWIG_0();
  public final static native long new_CHPUniversalEntry__SWIG_1(float jarg1);
  public final static native void delete_CHPUniversalEntry(long jarg1);
  public final static native void CHPUniversalEntry_Clear(long jarg1);
  public final static native long CHPUniversalEntry_CHPUniversalEntry_assign(long jarg1, long jarg2);
  public final static native float CHPUniversalEntry_GetBackground(long jarg1);
  public final static native void CHPUniversalEntry_SetBackground(long jarg1, float jarg2);
  public final static native long new_XYCoord__SWIG_0();
  public final static native long new_XYCoord__SWIG_1(short jarg1, short jarg2);
  public final static native void delete_XYCoord(long jarg1);
  public final static native void set_XYCoord_xCoord(long jarg1, short jarg2);
  public final static native short get_XYCoord_xCoord(long jarg1);
  public final static native void set_XYCoord_yCoord(long jarg1, short jarg2);
  public final static native short get_XYCoord_yCoord(long jarg1);
  public final static native long XYCoord_XYCoord_assign(long jarg1, long jarg2);
  public final static native boolean XYCoord_XYCoord_equals(long jarg1, long jarg2);
  public final static native boolean XYCoord_XYCoord_not_equals(long jarg1, long jarg2);
  public final static native boolean XYCoord_XYCoord_less_than(long jarg1, long jarg2);
  public final static native long new_CelFileData__SWIG_0();
  public final static native long new_CelFileData__SWIG_1(String jarg1);
  public final static native void delete_CelFileData(long jarg1);
  public final static native void CelFileData_Clear(long jarg1);
  public final static native void CelFileData_SetFilename(long jarg1, String jarg2);
  public final static native String CelFileData_GetFilename(long jarg1);
  public final static native void CelFileData_SetIntensityCount(long jarg1, int jarg2);
  public final static native void CelFileData_SetStdDevCount(long jarg1, int jarg2);
  public final static native void CelFileData_SetPixelCount(long jarg1, int jarg2);
  public final static native void CelFileData_SetOutlierCount(long jarg1, int jarg2);
  public final static native void CelFileData_SetMaskCount(long jarg1, int jarg2);
  public final static native long CelFileData_GetFileHeader(long jarg1);
  public final static native short CelFileData_GetVersion(long jarg1);
  public final static native void CelFileData_SetArrayType(long jarg1, long jarg2);
  public final static native long CelFileData_GetArrayType(long jarg1);
  public final static native void CelFileData_SetAlgorithmName(long jarg1, long jarg2);
  public final static native long CelFileData_GetAlgorithmName(long jarg1);
  public final static native void CelFileData_SetRows(long jarg1, int jarg2);
  public final static native int CelFileData_GetRows(long jarg1);
  public final static native void CelFileData_SetCols(long jarg1, int jarg2);
  public final static native int CelFileData_GetCols(long jarg1);
  public final static native int CelFileData_GetNumCells(long jarg1);
  public final static native void CelFileData_GetAlgorithmParameters(long jarg1, long jarg2);
  public final static native boolean CelFileData_FindAlgorithmParameter(long jarg1, long jarg2, long jarg3);
  public final static native void CelFileData_AddAlgorithmParameter(long jarg1, long jarg2);
  public final static native void CelFileData_GetData(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native boolean CelFileData_HasStdev(long jarg1);
  public final static native boolean CelFileData_HasNumPixels(long jarg1);
  public final static native boolean CelFileData_GetIntensities(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native boolean CelFileData_GetStdev(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native boolean CelFileData_GetNumPixels(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native boolean CelFileData_GetOutliers(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native boolean CelFileData_GetMasked(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void CelFileData_GetOutlierCoords(long jarg1, long jarg2);
  public final static native void CelFileData_GetMaskedCoords(long jarg1, long jarg2);
  public final static native long new_ColumnType(int jarg1, int jarg2);
  public final static native boolean ColumnType_ColumnType_equals(long jarg1, long jarg2);
  public final static native boolean ColumnType_ColumnType_not_equals(long jarg1, long jarg2);
  public final static native int ColumnType_GetColumnType(long jarg1);
  public final static native int ColumnType_GetSize(long jarg1);
  public final static native int ColumnType_GetLength(long jarg1);
  public final static native void delete_ColumnType(long jarg1);
  public final static native long new_ByteColumnType();
  public final static native void delete_ByteColumnType(long jarg1);
  public final static native long new_UByteColumnType();
  public final static native void delete_UByteColumnType(long jarg1);
  public final static native long new_ShortColumnType();
  public final static native void delete_ShortColumnType(long jarg1);
  public final static native long new_UShortColumnType();
  public final static native void delete_UShortColumnType(long jarg1);
  public final static native long new_IntColumnType();
  public final static native void delete_IntColumnType(long jarg1);
  public final static native long new_UIntColumnType();
  public final static native void delete_UIntColumnType(long jarg1);
  public final static native long new_FloatColumnType();
  public final static native void delete_FloatColumnType(long jarg1);
  public final static native long new_ASCIIColumnType(int jarg1);
  public final static native void delete_ASCIIColumnType(long jarg1);
  public final static native long new_UnicodeColumnType(int jarg1);
  public final static native void delete_UnicodeColumnType(long jarg1);
  public final static native long new_DataSetNotOpenException();
  public final static native void delete_DataSetNotOpenException(long jarg1);
  public final static native long new_ColumnIndexOutOfBoundsException();
  public final static native void delete_ColumnIndexOutOfBoundsException(long jarg1);
  public final static native long new_RowIndexOutOfBoundsException();
  public final static native void delete_RowIndexOutOfBoundsException(long jarg1);
  public final static native long new_UnexpectedColumnTypeException();
  public final static native void delete_UnexpectedColumnTypeException(long jarg1);
  public final static native long new_DataGroupNotFoundException();
  public final static native void delete_DataGroupNotFoundException(long jarg1);
  public final static native long new_DataSetNotFoundException();
  public final static native void delete_DataSetNotFoundException(long jarg1);
  public final static native long new_ProbeSetNotFoundException();
  public final static native void delete_ProbeSetNotFoundException(long jarg1);
  public final static native long new_CDFAccessNotSupportedByModeException();
  public final static native void delete_CDFAccessNotSupportedByModeException(long jarg1);
  public final static native long new_DataGroup(String jarg1, long jarg2, long jarg3);
  public final static native long DataGroup_Header(long jarg1);
  public final static native long DataGroup_DataSet__SWIG_0(long jarg1, long jarg2);
  public final static native long DataGroup_DataSet__SWIG_1(long jarg1, long jarg2);
  public final static native void delete_DataGroup(long jarg1);
  public final static native long new_DataGroupHeader__SWIG_0();
  public final static native long new_DataGroupHeader__SWIG_1(long jarg1);
  public final static native void delete_DataGroupHeader(long jarg1);
  public final static native void DataGroupHeader_Clear(long jarg1);
  public final static native void DataGroupHeader_SetName(long jarg1, long jarg2);
  public final static native long DataGroupHeader_GetName(long jarg1);
  public final static native int DataGroupHeader_GetDataSetCnt(long jarg1);
  public final static native void DataGroupHeader_AddDataSetHdr(long jarg1, long jarg2);
  public final static native long DataGroupHeader_GetDataSet(long jarg1, int jarg2);
  public final static native long DataGroupHeader_GetDataSetConst(long jarg1, int jarg2);
  public final static native void DataGroupHeader_GetDataSetIterators(long jarg1, long jarg2, long jarg3);
  public final static native void DataGroupHeader_SetDataSetPos(long jarg1, long jarg2);
  public final static native long DataGroupHeader_GetDataSetPos(long jarg1);
  public final static native void DataGroupHeader_SetNextCubePos(long jarg1, long jarg2);
  public final static native long DataGroupHeader_GetNextCubePos(long jarg1);
  public final static native long DataGroupHeader_FindDataSetHeader(long jarg1, long jarg2);
  public final static native long new_DataSet(String jarg1, long jarg2, long jarg3);
  public final static native void DataSet_Delete(long jarg1);
  public final static native boolean DataSet_Open(long jarg1);
  public final static native void DataSet_Close(long jarg1);
  public final static native long DataSet_Header(long jarg1);
  public final static native int DataSet_Rows(long jarg1);
  public final static native int DataSet_Cols(long jarg1);
  public final static native boolean DataSet_IsOpen(long jarg1);
  public final static native void DataSet_GetData__SWIG_0(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void DataSet_GetData__SWIG_1(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void DataSet_GetData__SWIG_2(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void DataSet_GetData__SWIG_3(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void DataSet_GetData__SWIG_4(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void DataSet_GetData__SWIG_5(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void DataSet_GetData__SWIG_6(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void DataSet_GetData__SWIG_7(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void DataSet_GetData__SWIG_8(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void DataSet_GetData__SWIG_9(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void DataSet_GetData__SWIG_10(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void DataSet_GetData__SWIG_11(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void DataSet_GetData__SWIG_12(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void DataSet_GetData__SWIG_13(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void DataSet_GetData__SWIG_14(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void DataSet_GetData__SWIG_15(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void DataSet_GetData__SWIG_16(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void DataSet_GetData__SWIG_17(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int DataSet_GetDataRaw__SWIG_0(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int DataSet_GetDataRaw__SWIG_1(long jarg1, int jarg2, int jarg3, int jarg4, String jarg5);
  public final static native int DataSet_GetDataRaw__SWIG_2(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int DataSet_GetDataRaw__SWIG_3(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int DataSet_GetDataRaw__SWIG_4(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int DataSet_GetDataRaw__SWIG_5(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int DataSet_GetDataRaw__SWIG_6(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int DataSet_GetDataRaw__SWIG_7(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int DataSet_GetDataRaw__SWIG_8(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void DataSet_CheckRowColumnAndType(long jarg1, int jarg2, int jarg3, int jarg4);
  public final static native int DataSet_BytesPerRow(long jarg1);
  public final static native long new_DataSetHeader();
  public final static native void delete_DataSetHeader(long jarg1);
  public final static native void DataSetHeader_Clear(long jarg1);
  public final static native int DataSetHeader_GetDataSize(long jarg1);
  public final static native int DataSetHeader_GetRowSize(long jarg1);
  public final static native void DataSetHeader_SetName(long jarg1, long jarg2);
  public final static native long DataSetHeader_GetName(long jarg1);
  public final static native int DataSetHeader_GetNameValParamCnt(long jarg1);
  public final static native void DataSetHeader_AddNameValParam(long jarg1, long jarg2);
  public final static native void DataSetHeader_GetNameValIterators(long jarg1, long jarg2, long jarg3);
  public final static native boolean DataSetHeader_FindNameValParam(long jarg1, long jarg2, long jarg3);
  public final static native void DataSetHeader_AddColumnType(long jarg1, long jarg2);
  public final static native void DataSetHeader_AddIntColumnType(long jarg1);
  public final static native void DataSetHeader_AddUIntColumnType(long jarg1);
  public final static native void DataSetHeader_AddShortColumnType(long jarg1);
  public final static native void DataSetHeader_AddUShortColumnType(long jarg1);
  public final static native void DataSetHeader_AddByteColumnType(long jarg1);
  public final static native void DataSetHeader_AddUByteColumnType(long jarg1);
  public final static native void DataSetHeader_AddFloatColumnType(long jarg1);
  public final static native void DataSetHeader_AddAsciiColumnType(long jarg1, int jarg2);
  public final static native void DataSetHeader_AddUnicodeColumnType(long jarg1, int jarg2);
  public final static native long DataSetHeader_GetColumnType(long jarg1, int jarg2);
  public final static native int DataSetHeader_GetRowCnt(long jarg1);
  public final static native void DataSetHeader_SetRowCnt(long jarg1, int jarg2);
  public final static native int DataSetHeader_GetColumnCnt(long jarg1);
  public final static native void DataSetHeader_SetHeaderStartFilePos(long jarg1, long jarg2);
  public final static native long DataSetHeader_GetHeaderStartFilePos(long jarg1);
  public final static native void DataSetHeader_SetDataStartFilePos(long jarg1, long jarg2);
  public final static native long DataSetHeader_GetDataStartFilePos(long jarg1);
  public final static native short get_MAGIC_NUM();
  public final static native short get_VERSION();
  public final static native long new_FileHeader();
  public final static native void delete_FileHeader(long jarg1);
  public final static native void FileHeader_Clear(long jarg1);
  public final static native void FileHeader_SetFilename(long jarg1, String jarg2);
  public final static native String FileHeader_GetFilename(long jarg1);
  public final static native short FileHeader_GetMagicNumber(long jarg1);
  public final static native short FileHeader_GetVersion(long jarg1);
  public final static native int FileHeader_GetDataGroupCnt(long jarg1);
  public final static native void FileHeader_AddDataGroupHdr(long jarg1, long jarg2);
  public final static native long FileHeader_GetDataGroup(long jarg1, int jarg2);
  public final static native long FileHeader_GetDataGroupConst(long jarg1, int jarg2);
  public final static native void FileHeader_GetDataGroupIts(long jarg1, long jarg2, long jarg3);
  public final static native void FileHeader_SetGenericDataHdr(long jarg1, long jarg2);
  public final static native long FileHeader_GetGenericDataHdr(long jarg1);
  public final static native long FileHeader_FindDataGroupHeader(long jarg1, long jarg2);
  public final static native int FileHeader_GetNumDataGroups(long jarg1);
  public final static native void FileHeader_SetNumDataGroups(long jarg1, int jarg2);
  public final static native long FileHeader_GetFirstDataGroupFilePos(long jarg1);
  public final static native void FileHeader_SetFirstDataGroupFilePos(long jarg1, long jarg2);
  public final static native long new_GenericData();
  public final static native void delete_GenericData(long jarg1);
  public final static native String GenericData_FileIdentifier(long jarg1);
  public final static native String GenericData_ArrayFileIdentifier(long jarg1);
  public final static native long GenericData_Header(long jarg1);
  public final static native long GenericData_DataGroupCnt(long jarg1);
  public final static native void GenericData_DataGroupNames(long jarg1, long jarg2);
  public final static native long GenericData_DataSetCnt__SWIG_0(long jarg1, long jarg2);
  public final static native long GenericData_DataSetCnt__SWIG_1(long jarg1, long jarg2);
  public final static native void GenericData_DataSetNames__SWIG_0(long jarg1, long jarg2, long jarg3);
  public final static native void GenericData_DataSetNames__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native long GenericData_DataSet__SWIG_0(long jarg1, long jarg2, long jarg3);
  public final static native long GenericData_DataSet__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native long GenericData_DataGroup(long jarg1, long jarg2);
  public final static native void GenericData_Clear(long jarg1);
  public final static native void GenericData_ReadFullDataSetHeader(long jarg1, long jarg2);
  public final static native boolean GenericData_IsDPHPartiallyRead(long jarg1, long jarg2);
  public final static native void GenericData_OpenFStream(long jarg1, long jarg2);
  public final static native long GenericData_FindDataGroupHeader__SWIG_0(long jarg1, long jarg2);
  public final static native long GenericData_FindDataGroupHeader__SWIG_1(long jarg1, int jarg2);
  public final static native long GenericData_FindDataSetHeader__SWIG_0(long jarg1, long jarg2);
  public final static native long GenericData_FindDataSetHeader__SWIG_1(long jarg1, long jarg2);
  public final static native boolean GenericData_MapFile(long jarg1);
  public final static native void GenericData_UnmapFile(long jarg1);
  public final static native long new_GenericDataHeader();
  public final static native void delete_GenericDataHeader(long jarg1);
  public final static native void GenericDataHeader_Clear(long jarg1);
  public final static native void GenericDataHeader_SetFileTypeId(long jarg1, String jarg2);
  public final static native String GenericDataHeader_GetFileTypeId(long jarg1);
  public final static native void GenericDataHeader_SetFileId(long jarg1, String jarg2);
  public final static native String GenericDataHeader_GetFileId(long jarg1);
  public final static native void GenericDataHeader_SetFileCreationTime(long jarg1, long jarg2);
  public final static native long GenericDataHeader_GetFileCreationTime(long jarg1);
  public final static native void GenericDataHeader_SetLocale(long jarg1, long jarg2);
  public final static native long GenericDataHeader_GetLocale(long jarg1);
  public final static native void GenericDataHeader_AddNameValParam(long jarg1, long jarg2);
  public final static native long GenericDataHeader_GetNameValParam(long jarg1, int jarg2);
  public final static native int GenericDataHeader_GetNameValParamCnt(long jarg1);
  public final static native void GenericDataHeader_GetNameValIterators(long jarg1, long jarg2, long jarg3);
  public final static native int GenericDataHeader_GetParentCnt(long jarg1);
  public final static native void GenericDataHeader_AddParent(long jarg1, long jarg2);
  public final static native long GenericDataHeader_GetParent(long jarg1, int jarg2);
  public final static native void GenericDataHeader_GetParentIterators(long jarg1, long jarg2, long jarg3);
  public final static native boolean GenericDataHeader_FindNameValParam(long jarg1, long jarg2, long jarg3);
  public final static native boolean GenericDataHeader_GetNameValParamsBeginsWith(long jarg1, long jarg2, long jarg3);
  public final static native long get_SCAN_ACQUISITION_DATA_TYPE();
  public final static native long get_INTENSITY_DATA_TYPE();
  public final static native long get_EXPRESSION_RESULTS_DATA_TYPE();
  public final static native long get_GENOTYPING_RESULTS_DATA_TYPE();
  public final static native long get_RESEQUENCING_RESULTS_DATA_TYPE();
  public final static native long get_TAG_RESULTS_DATA_TYPE();
  public final static native long new_ArrayFileReader();
  public final static native void delete_ArrayFileReader(long jarg1);
  public final static native boolean ArrayFileReader_Read__SWIG_0(long jarg1, String jarg2, long jarg3, boolean jarg4);
  public final static native boolean ArrayFileReader_Read__SWIG_1(long jarg1, String jarg2, long jarg3);
  public final static native String ArrayFileReader_DataTypeIdentifier__SWIG_0(long jarg1);
  public final static native boolean ArrayFileReader_IsFileType(String jarg1, String jarg2);
  public final static native String ArrayFileReader_DataTypeIdentifier__SWIG_1(String jarg1);
  public final static native String get_AUDIT_USER_TAG();
  public final static native String get_AUDIT_DATE_TAG();
  public final static native String get_AUDIT_TIME_TAG();
  public final static native String get_AUDIT_ACTION_TAG();
  public final static native String get_AUDIT_ARRAY_ID_TAG();
  public final static native String get_AUDIT_INPUT_ID_TAG();
  public final static native String get_AUDIT_OUTPUT_ID_TAG();
  public final static native String get_AUDIT_START_TAG();
  public final static native String get_AUDIT_END_TAG();
  public final static native long new_AuditFileReader();
  public final static native void delete_AuditFileReader(long jarg1);
  public final static native boolean AuditFileReader_Read(long jarg1, String jarg2, long jarg3);
  public final static native long new_CDFFileReader();
  public final static native void delete_CDFFileReader(long jarg1);
  public final static native String CDFFileReader_GetFilename(long jarg1);
  public final static native void CDFFileReader_SetFilename(long jarg1, String jarg2);
  public final static native void CDFFileReader_Read__SWIG_0(long jarg1, long jarg2, int jarg3);
  public final static native void CDFFileReader_Read__SWIG_1(long jarg1, long jarg2);
  public final static native long new_CHPFileReader();
  public final static native void delete_CHPFileReader(long jarg1);
  public final static native String CHPFileReader_GetFilename(long jarg1);
  public final static native void CHPFileReader_SetFilename(long jarg1, String jarg2);
  public final static native void CHPFileReader_Read(long jarg1, long jarg2);
  public final static native long new_CelFileReader();
  public final static native void delete_CelFileReader(long jarg1);
  public final static native String CelFileReader_GetFilename(long jarg1);
  public final static native void CelFileReader_SetFilename(long jarg1, String jarg2);
  public final static native void CelFileReader_Read(long jarg1, long jarg2);
  public final static native long new_DataGroupHeaderReader();
  public final static native void DataGroupHeaderReader_ReadAllMinimumInfo(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void DataGroupHeaderReader_ReadAll(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long DataGroupHeaderReader_ReadMinimumInfo(long jarg1, long jarg2, long jarg3);
  public final static native long DataGroupHeaderReader_Read(long jarg1, long jarg2, long jarg3);
  public final static native long DataGroupHeaderReader_ReadHeader(long jarg1, long jarg2, long jarg3);
  public final static native void delete_DataGroupHeaderReader(long jarg1);
  public final static native long new_DataGroupReader(long jarg1, long jarg2);
  public final static native void delete_DataGroupReader(long jarg1);
  public final static native int DataGroupReader_GetDataSetCnt(long jarg1);
  public final static native long DataGroupReader_GetDataGroupName(long jarg1);
  public final static native long DataGroupReader_GetDataSetReader__SWIG_0(long jarg1, int jarg2);
  public final static native long DataGroupReader_GetDataSetReader__SWIG_1(long jarg1, long jarg2);
  public final static native long new_DataSetHeaderReader();
  public final static native void DataSetHeaderReader_ReadAllMinimumInfo(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void DataSetHeaderReader_ReadAll(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long DataSetHeaderReader_ReadMinimumInfo(long jarg1, long jarg2, long jarg3);
  public final static native long DataSetHeaderReader_Read(long jarg1, long jarg2, long jarg3);
  public final static native void delete_DataSetHeaderReader(long jarg1);
  public final static native long new_DataSetReader(long jarg1, long jarg2);
  public final static native void delete_DataSetReader(long jarg1);
  public final static native long DataSetReader_GetDataSetName(long jarg1);
  public final static native long DataSetReader_GetDataSetHeader(long jarg1);
  public final static native void DataSetReader_Read__SWIG_0(long jarg1, long jarg2);
  public final static native void DataSetReader_Read__SWIG_1(long jarg1, long jarg2);
  public final static native void DataSetReader_Read__SWIG_2(long jarg1, long jarg2);
  public final static native void DataSetReader_Read__SWIG_3(long jarg1, long jarg2);
  public final static native void DataSetReader_Read__SWIG_4(long jarg1, long jarg2);
  public final static native void DataSetReader_Read__SWIG_5(long jarg1, long jarg2);
  public final static native void DataSetReader_Read__SWIG_6(long jarg1, long jarg2);
  public final static native void DataSetReader_Read__SWIG_7(long jarg1, long jarg2);
  public final static native void DataSetReader_Read__SWIG_8(long jarg1, long jarg2);
  public final static native long new_FileNotFoundException();
  public final static native void delete_FileNotFoundException(long jarg1);
  public final static native long new_InvalidVersionException();
  public final static native void delete_InvalidVersionException(long jarg1);
  public final static native long new_InvalidFileTypeException();
  public final static native void delete_InvalidFileTypeException(long jarg1);
  public final static native long new_UnableToOpenFileException();
  public final static native void delete_UnableToOpenFileException(long jarg1);
  public final static native long new_FileNotOpenException();
  public final static native void delete_FileNotOpenException(long jarg1);
  public final static native long new_FileHeaderReader(long jarg1, long jarg2);
  public final static native void FileHeaderReader_Read(long jarg1);
  public final static native long FileHeaderReader_GetDataGroupCnt(long jarg1);
  public final static native long FileHeaderReader_GetFirstDataGroupFilePos(long jarg1);
  public final static native void delete_FileHeaderReader(long jarg1);
  public final static native char FileInput_ReadInt8__SWIG_0(long jarg1);
  public final static native short FileInput_ReadInt16__SWIG_0(long jarg1);
  public final static native int FileInput_ReadInt32__SWIG_0(long jarg1);
  public final static native short FileInput_ReadUInt8__SWIG_0(long jarg1);
  public final static native int FileInput_ReadUInt16__SWIG_0(long jarg1);
  public final static native long FileInput_ReadUInt32__SWIG_0(long jarg1);
  public final static native float FileInput_ReadFloat__SWIG_0(long jarg1);
  public final static native char FileInput_ReadInt8__SWIG_1(long jarg1);
  public final static native short FileInput_ReadInt16__SWIG_1(long jarg1);
  public final static native int FileInput_ReadInt32__SWIG_1(long jarg1);
  public final static native short FileInput_ReadUInt8__SWIG_1(long jarg1);
  public final static native int FileInput_ReadUInt16__SWIG_1(long jarg1);
  public final static native long FileInput_ReadUInt32__SWIG_1(long jarg1);
  public final static native float FileInput_ReadFloat__SWIG_1(long jarg1);
  public final static native long FileInput_ReadString16__SWIG_0(long jarg1, int jarg2);
  public final static native long FileInput_ReadString16__SWIG_1(long jarg1);
  public final static native String FileInput_ReadString8__SWIG_0(long jarg1, int jarg2);
  public final static native String FileInput_ReadString8__SWIG_1(long jarg1);
  public final static native long FileInput_ReadString16__SWIG_2(long jarg1, int jarg2);
  public final static native long FileInput_ReadString16__SWIG_3(long jarg1);
  public final static native String FileInput_ReadString8__SWIG_2(long jarg1, int jarg2);
  public final static native String FileInput_ReadString8__SWIG_3(long jarg1);
  public final static native int FileInput_ReadBlob(long jarg1, long jarg2);
  public final static native long new_FileInput();
  public final static native void delete_FileInput(long jarg1);
  public final static native long new_GenericDataHeaderReader(long jarg1);
  public final static native void GenericDataHeaderReader_Read(long jarg1, long jarg2);
  public final static native void delete_GenericDataHeaderReader(long jarg1);
  public final static native long new_GenericFileReader();
  public final static native void delete_GenericFileReader(long jarg1);
  public final static native String GenericFileReader_GetFilename(long jarg1);
  public final static native void GenericFileReader_SetFilename(long jarg1, String jarg2);
  public final static native void GenericFileReader_ReadHeader__SWIG_0(long jarg1, long jarg2, int jarg3);
  public final static native void GenericFileReader_ReadHeader__SWIG_1(long jarg1, long jarg2);
  public final static native void GenericFileReader_Open__SWIG_0(long jarg1, long jarg2, int jarg3);
  public final static native void GenericFileReader_Open__SWIG_1(long jarg1, long jarg2);
  public final static native long GenericFileReader_GetDataGroupCnt(long jarg1);
  public final static native long GenericFileReader_GetDataGroupReader__SWIG_0(long jarg1, int jarg2);
  public final static native long GenericFileReader_GetDataGroupReader__SWIG_1(long jarg1, long jarg2);
  public final static native void GenericFileReader_Close(long jarg1);
  public final static native String get_GRD_FILE_TYPE_IDENTIFIER();
  public final static native long new_GridControlFileReader();
  public final static native void delete_GridControlFileReader(long jarg1);
  public final static native void GridControlFileReader_Read(long jarg1, String jarg2, long jarg3);
  public final static native long new_TemplateFileReader();
  public final static native void delete_TemplateFileReader(long jarg1);
  public final static native long new_TextFileReader();
  public final static native void delete_TextFileReader(long jarg1);
  public final static native void TextFileReader_ReadFile__SWIG_0(long jarg1, String jarg2, long jarg3);
  public final static native void TextFileReader_ReadFile__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native int get_TEMPLATE_FILE_CREATEION_ACTION();
  public final static native int get_TEMPLATE_FILE_ATTRIBUTE_UPDATE_ACTION();
  public final static native String get_TEMPLATE_FILE_TYPE_IDENTIFIER();
  public final static native long new_TemplateData();
  public final static native void delete_TemplateData(long jarg1);
  public final static native int get__AFFY_BASE_TYPE_H();
  public final static native int get___int8_t_defined();
  public final static native int get_AFFX_FILEIO_H();
  public final static native void ReadUInt32_I(long jarg1, long jarg2);
  public final static native void ReadInt32_I(long jarg1, long jarg2);
  public final static native void ReadFloat_I(long jarg1, long jarg2);
  public final static native void ReadUInt16_I(long jarg1, long jarg2);
  public final static native void ReadInt16_I(long jarg1, long jarg2);
  public final static native void ReadCString_I(long jarg1, long jarg2);
  public final static native void ReadString_I(long jarg1, long jarg2);
  public final static native void ReadUIntLenString_I(long jarg1, long jarg2);
  public final static native void ReadUInt8(long jarg1, long jarg2);
  public final static native void ReadInt8(long jarg1, long jarg2);
  public final static native void ReadUInt32_N(long jarg1, long jarg2);
  public final static native void ReadInt32_N(long jarg1, long jarg2);
  public final static native void ReadFloat_N(long jarg1, long jarg2);
  public final static native void ReadUInt16_N(long jarg1, long jarg2);
  public final static native void ReadInt16_N(long jarg1, long jarg2);
  public final static native void ReadCString_N(long jarg1, long jarg2);
  public final static native void ReadString_N(long jarg1, long jarg2);
  public final static native void ReadUIntLenString_N(long jarg1, long jarg2);
  public final static native void ReadFixedString(long jarg1, long jarg2, long jarg3);
  public final static native void ReadFixedCString(long jarg1, String jarg2, long jarg3);
  public final static native void ReadFixedUCString(long jarg1, long jarg2, long jarg3);
  public final static native void ReadCharacterArray(long jarg1, String jarg2, long jarg3);
  public final static native void ReadNextLine(long jarg1, String jarg2, int jarg3);
  public final static native void ReadFloatFromOldBPMAP_N(long jarg1, long jarg2);
  public final static native long MmGetUInt32_I(long jarg1);
  public final static native int MmGetInt32_I(long jarg1);
  public final static native int MmGetUInt16_I(long jarg1);
  public final static native short MmGetInt16_I(long jarg1);
  public final static native short MmGetUInt8(long jarg1);
  public final static native char MmGetInt8(String jarg1);
  public final static native long MmGetUInt32_N(long jarg1);
  public final static native int MmGetUInt16_N(long jarg1);
  public final static native float MmGetFloat_N(long jarg1);
  public final static native int MmGetInt32_N(long jarg1);
  public final static native short MmGetInt16_N(long jarg1);
  public final static native float MmGetFloat_I(long jarg1);
  public final static native float MmGetFloatFromOldBPMAP_N(long jarg1);
  public final static native void MmSetUInt32_I(long jarg1, long jarg2);
  public final static native void MmSetUInt16_I(long jarg1, int jarg2);
  public final static native void MmSetUInt8(long jarg1, short jarg2);
  public final static native void MmSetFloat_I(long jarg1, float jarg2);
  public final static native void MmSetUInt32_N(long jarg1, long jarg2);
  public final static native void MmSetUInt16_N(long jarg1, int jarg2);
  public final static native void MmSetFloat_N(long jarg1, float jarg2);
  public final static native void set_CoordinatePoint_x(long jarg1, int jarg2);
  public final static native int get_CoordinatePoint_x(long jarg1);
  public final static native void set_CoordinatePoint_y(long jarg1, int jarg2);
  public final static native int get_CoordinatePoint_y(long jarg1);
  public final static native long new_CoordinatePoint();
  public final static native void delete_CoordinatePoint(long jarg1);
  public final static native void set_GridCoordinatesType_upperleft(long jarg1, long jarg2);
  public final static native long get_GridCoordinatesType_upperleft(long jarg1);
  public final static native void set_GridCoordinatesType_upperright(long jarg1, long jarg2);
  public final static native long get_GridCoordinatesType_upperright(long jarg1);
  public final static native void set_GridCoordinatesType_lowerright(long jarg1, long jarg2);
  public final static native long get_GridCoordinatesType_lowerright(long jarg1);
  public final static native void set_GridCoordinatesType_lowerleft(long jarg1, long jarg2);
  public final static native long get_GridCoordinatesType_lowerleft(long jarg1);
  public final static native long new_GridCoordinatesType();
  public final static native void delete_GridCoordinatesType(long jarg1);
  public final static native void set_TagValuePairType_Tag(long jarg1, long jarg2);
  public final static native long get_TagValuePairType_Tag(long jarg1);
  public final static native void set_TagValuePairType_Value(long jarg1, long jarg2);
  public final static native long get_TagValuePairType_Value(long jarg1);
  public final static native long TagValuePairType__TagValuePairType_assign(long jarg1, long jarg2);
  public final static native boolean TagValuePairType__TagValuePairType_equals_obj(long jarg1, long jarg2);
  public final static native boolean TagValuePairType__TagValuePairType_equals_tag(long jarg1, String jarg2);
  public final static native long new_TagValuePairType();
  public final static native void delete_TagValuePairType(long jarg1);
  public final static native int get_MAX_PROBE_SET_NAME_LENGTH();
  public final static native int CCDFFileHeader_GetCols(long jarg1);
  public final static native int CCDFFileHeader_GetRows(long jarg1);
  public final static native int CCDFFileHeader_GetNumProbeSets(long jarg1);
  public final static native int CCDFFileHeader_GetNumQCProbeSets(long jarg1);
  public final static native long CCDFFileHeader_GetReference(long jarg1);
  public final static native long new_CCDFFileHeader();
  public final static native void delete_CCDFFileHeader(long jarg1);
  public final static native int CCDFProbeInformation_GetListIndex(long jarg1);
  public final static native int CCDFProbeInformation_GetExpos(long jarg1);
  public final static native int CCDFProbeInformation_GetX(long jarg1);
  public final static native int CCDFProbeInformation_GetY(long jarg1);
  public final static native char CCDFProbeInformation_GetPBase(long jarg1);
  public final static native char CCDFProbeInformation_GetTBase(long jarg1);
  public final static native long new_CCDFProbeInformation();
  public final static native void delete_CCDFProbeInformation(long jarg1);
  public final static native int get_PROBE_SIZE();
  public final static native int CCDFProbeGroupInformation_GetDirection(long jarg1);
  public final static native int CCDFProbeGroupInformation_GetNumLists(long jarg1);
  public final static native int CCDFProbeGroupInformation_GetNumCells(long jarg1);
  public final static native int CCDFProbeGroupInformation_GetNumCellsPerList(long jarg1);
  public final static native int CCDFProbeGroupInformation_GetStart(long jarg1);
  public final static native int CCDFProbeGroupInformation_GetStop(long jarg1);
  public final static native String CCDFProbeGroupInformation_GetName(long jarg1);
  public final static native void CCDFProbeGroupInformation_GetCell(long jarg1, int jarg2, long jarg3);
  public final static native long new_CCDFProbeGroupInformation();
  public final static native void delete_CCDFProbeGroupInformation(long jarg1);
  public final static native int get_PROBE_GROUP_SIZE();
  public final static native int CCDFProbeSetInformation_GetProbeSetType(long jarg1);
  public final static native int CCDFProbeSetInformation_GetDirection(long jarg1);
  public final static native int CCDFProbeSetInformation_GetNumLists(long jarg1);
  public final static native int CCDFProbeSetInformation_GetNumGroups(long jarg1);
  public final static native int CCDFProbeSetInformation_GetNumCells(long jarg1);
  public final static native int CCDFProbeSetInformation_GetNumCellsPerList(long jarg1);
  public final static native int CCDFProbeSetInformation_GetProbeSetNumber(long jarg1);
  public final static native void CCDFProbeSetInformation_GetGroupInformation(long jarg1, int jarg2, long jarg3);
  public final static native long new_CCDFProbeSetInformation();
  public final static native void delete_CCDFProbeSetInformation(long jarg1);
  public final static native int get_PROBE_SET_SIZE();
  public final static native long new_CCDFProbeSetNames();
  public final static native void delete_CCDFProbeSetNames(long jarg1);
  public final static native void CCDFProbeSetNames_Clear(long jarg1);
  public final static native String CCDFProbeSetNames_GetName(long jarg1, int jarg2);
  public final static native long new_CCDFQCProbeInformation();
  public final static native int CCDFQCProbeInformation_GetX(long jarg1);
  public final static native int CCDFQCProbeInformation_GetY(long jarg1);
  public final static native int CCDFQCProbeInformation_GetPLen(long jarg1);
  public final static native boolean CCDFQCProbeInformation_IsPerfectMatchProbe(long jarg1);
  public final static native boolean CCDFQCProbeInformation_IsBackgroundProbe(long jarg1);
  public final static native void delete_CCDFQCProbeInformation(long jarg1);
  public final static native int get_QC_PROBE_SIZE();
  public final static native int CCDFQCProbeSetInformation_GetQCProbeSetType(long jarg1);
  public final static native int CCDFQCProbeSetInformation_GetNumCells(long jarg1);
  public final static native void CCDFQCProbeSetInformation_GetProbeInformation(long jarg1, int jarg2, long jarg3);
  public final static native long new_CCDFQCProbeSetInformation();
  public final static native void delete_CCDFQCProbeSetInformation(long jarg1);
  public final static native int get_QC_PROBE_SET_SIZE();
  public final static native void CCDFFileData_SetFileName(long jarg1, String jarg2);
  public final static native String CCDFFileData_GetFileName(long jarg1);
  public final static native long CCDFFileData_GetHeader(long jarg1);
  public final static native String CCDFFileData_GetError(long jarg1);
  public final static native String CCDFFileData_GetProbeSetName(long jarg1, int jarg2);
  public final static native String CCDFFileData_GetChipType(long jarg1);
  public final static native boolean CCDFFileData_Read(long jarg1);
  public final static native boolean CCDFFileData_ReadHeader(long jarg1);
  public final static native boolean CCDFFileData_Exists(long jarg1);
  public final static native void CCDFFileData_Close(long jarg1);
  public final static native boolean CCDFFileData_IsXDACompatibleFile(long jarg1);
  public final static native int CCDFFileData_GetProbeSetType(long jarg1, int jarg2);
  public final static native void CCDFFileData_GetProbeSetInformation(long jarg1, int jarg2, long jarg3);
  public final static native void CCDFFileData_GetQCProbeSetInformation(long jarg1, int jarg2, long jarg3);
  public final static native void CCDFFileData_GetQCProbeSetInformation_By_Type(long jarg1, int jarg2, long jarg3);
  public final static native long new_CCDFFileData();
  public final static native void delete_CCDFFileData(long jarg1);
  public final static native void set_CELFileEntryType_Intensity(long jarg1, float jarg2);
  public final static native float get_CELFileEntryType_Intensity(long jarg1);
  public final static native void set_CELFileEntryType_Stdv(long jarg1, float jarg2);
  public final static native float get_CELFileEntryType_Stdv(long jarg1);
  public final static native void set_CELFileEntryType_Pixels(long jarg1, short jarg2);
  public final static native short get_CELFileEntryType_Pixels(long jarg1);
  public final static native long new_CELFileEntryType();
  public final static native void delete_CELFileEntryType(long jarg1);
  public final static native void set_CELFileTranscriptomeEntryType_Intensity(long jarg1, int jarg2);
  public final static native int get_CELFileTranscriptomeEntryType_Intensity(long jarg1);
  public final static native void set_CELFileTranscriptomeEntryType_Stdv(long jarg1, int jarg2);
  public final static native int get_CELFileTranscriptomeEntryType_Stdv(long jarg1);
  public final static native void set_CELFileTranscriptomeEntryType_Pixels(long jarg1, short jarg2);
  public final static native short get_CELFileTranscriptomeEntryType_Pixels(long jarg1);
  public final static native long new_CELFileTranscriptomeEntryType();
  public final static native void delete_CELFileTranscriptomeEntryType(long jarg1);
  public final static native long new_CCELFileHeaderData();
  public final static native void delete_CCELFileHeaderData(long jarg1);
  public final static native void CCELFileHeaderData_Clear(long jarg1);
  public final static native void CCELFileHeaderData_SetMagic(long jarg1, int jarg2);
  public final static native int CCELFileHeaderData_GetMagic(long jarg1);
  public final static native void CCELFileHeaderData_SetVersion(long jarg1, int jarg2);
  public final static native int CCELFileHeaderData_GetVersion(long jarg1);
  public final static native void CCELFileHeaderData_SetCols(long jarg1, int jarg2);
  public final static native int CCELFileHeaderData_GetCols(long jarg1);
  public final static native void CCELFileHeaderData_SetRows(long jarg1, int jarg2);
  public final static native int CCELFileHeaderData_GetRows(long jarg1);
  public final static native void CCELFileHeaderData_SetCells(long jarg1, int jarg2);
  public final static native int CCELFileHeaderData_GetCells(long jarg1);
  public final static native void CCELFileHeaderData_AppendHeader(long jarg1, String jarg2);
  public final static native void CCELFileHeaderData_SetHeader(long jarg1, String jarg2);
  public final static native String CCELFileHeaderData_GetHeader(long jarg1);
  public final static native void CCELFileHeaderData_SetAlg(long jarg1, String jarg2);
  public final static native String CCELFileHeaderData_GetAlg(long jarg1);
  public final static native void CCELFileHeaderData_SetParams(long jarg1, String jarg2);
  public final static native String CCELFileHeaderData_GetParams(long jarg1);
  public final static native void CCELFileHeaderData_ParseChipType(long jarg1);
  public final static native void CCELFileHeaderData_SetChipType(long jarg1, String jarg2);
  public final static native String CCELFileHeaderData_GetChipType(long jarg1);
  public final static native void CCELFileHeaderData_ParseDatHeader(long jarg1);
  public final static native void CCELFileHeaderData_SetDatHeader__SWIG_0(long jarg1);
  public final static native void CCELFileHeaderData_SetDatHeader__SWIG_1(long jarg1, String jarg2);
  public final static native String CCELFileHeaderData_GetDatHeader(long jarg1);
  public final static native void CCELFileHeaderData_SetMargin(long jarg1, int jarg2);
  public final static native int CCELFileHeaderData_GetMargin(long jarg1);
  public final static native void CCELFileHeaderData_SetOutliers(long jarg1, long jarg2);
  public final static native long CCELFileHeaderData_GetOutliers(long jarg1);
  public final static native void CCELFileHeaderData_IncrementOutliers(long jarg1);
  public final static native void CCELFileHeaderData_DecrementOutliers(long jarg1);
  public final static native void CCELFileHeaderData_SetMasked(long jarg1, long jarg2);
  public final static native long CCELFileHeaderData_GetMasked(long jarg1);
  public final static native void CCELFileHeaderData_IncrementMasked(long jarg1);
  public final static native void CCELFileHeaderData_DecrementMasked(long jarg1);
  public final static native void CCELFileHeaderData_ParseAlgorithmParameters(long jarg1);
  public final static native void CCELFileHeaderData_AddAlgorithmParameter__SWIG_0(long jarg1, long jarg2, long jarg3);
  public final static native void CCELFileHeaderData_AddAlgorithmParameter__SWIG_1(long jarg1, String jarg2, String jarg3);
  public final static native void CCELFileHeaderData_SetAlgorithmParameter(long jarg1, String jarg2, String jarg3);
  public final static native String CCELFileHeaderData_GetAlgorithmParameter(long jarg1, String jarg2);
  public final static native String CCELFileHeaderData_GetAlgorithmParameterTag(long jarg1, int jarg2);
  public final static native int CCELFileHeaderData_GetNumberAlgorithmParameters(long jarg1);
  public final static native String CCELFileHeaderData_GetAlgorithmParameters(long jarg1);
  public final static native void CCELFileHeaderData_SetGridCorners(long jarg1, long jarg2);
  public final static native void CCELFileHeaderData_ParseCorners(long jarg1);
  public final static native long CCELFileHeaderData_GetGridCorners(long jarg1);
  public final static native int get_CCELFileData_TEXT_CEL();
  public final static native int get_CCELFileData_XDA_BCEL();
  public final static native int get_CCELFileData_TRANSCRIPTOME_BCEL();
  public final static native int get_CCELFileData_COMPACT_BCEL();
  public final static native int get_CCELFileData_CEL_ALL();
  public final static native int get_CCELFileData_CEL_DATA();
  public final static native int get_CCELFileData_CEL_OUTLIER();
  public final static native int get_CCELFileData_CEL_MASK();
  public final static native long new_CCELFileData();
  public final static native void delete_CCELFileData(long jarg1);
  public final static native void CCELFileData_SetError(long jarg1, String jarg2);
  public final static native String CCELFileData_GetError(long jarg1);
  public final static native long CCELFileData_GetThisPtr(long jarg1);
  public final static native void CCELFileData_SetFileName(long jarg1, String jarg2);
  public final static native String CCELFileData_GetFileName(long jarg1);
  public final static native String CCELFileData_GetHeaderKey(long jarg1, String jarg2);
  public final static native int CCELFileData_GetVersion(long jarg1);
  public final static native int CCELFileData_GetCols(long jarg1);
  public final static native int CCELFileData_GetRows(long jarg1);
  public final static native int CCELFileData_GetNumCells(long jarg1);
  public final static native String CCELFileData_GetHeaderString(long jarg1);
  public final static native long CCELFileData_GetHeader(long jarg1);
  public final static native String CCELFileData_GetAlg(long jarg1);
  public final static native String CCELFileData_GetParams(long jarg1);
  public final static native String CCELFileData_GetAlgorithmParameter(long jarg1, String jarg2);
  public final static native String CCELFileData_GetAlgorithmParameterTag(long jarg1, int jarg2);
  public final static native int CCELFileData_GetNumberAlgorithmParameters(long jarg1);
  public final static native String CCELFileData_GetAlgorithmParameters(long jarg1);
  public final static native String CCELFileData_GetDatHeader(long jarg1);
  public final static native String CCELFileData_GetChipType(long jarg1);
  public final static native int CCELFileData_GetCellMargin(long jarg1);
  public final static native long CCELFileData_GetNumOutliers(long jarg1);
  public final static native long CCELFileData_GetNumMasked(long jarg1);
  public final static native long CCELFileData_GetGridCorners(long jarg1);
  public final static native int CCELFileData_IndexToX(long jarg1, int jarg2);
  public final static native int CCELFileData_IndexToY(long jarg1, int jarg2);
  public final static native int CCELFileData_XYToIndex__SWIG_0(long jarg1, int jarg2, int jarg3);
  public final static native int CCELFileData_XYToIndex__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4);
  public final static native void CCELFileData_GetEntry__SWIG_0(long jarg1, int jarg2, long jarg3);
  public final static native void CCELFileData_GetEntry__SWIG_1(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void CCELFileData_GetTranscriptomeEntry__SWIG_0(long jarg1, int jarg2, long jarg3);
  public final static native void CCELFileData_GetTranscriptomeEntry__SWIG_1(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native float CCELFileData_GetIntensity__SWIG_0(long jarg1, int jarg2);
  public final static native float CCELFileData_GetIntensity__SWIG_1(long jarg1, int jarg2, int jarg3);
  public final static native float CCELFileData_GetStdv__SWIG_0(long jarg1, int jarg2);
  public final static native float CCELFileData_GetStdv__SWIG_1(long jarg1, int jarg2, int jarg3);
  public final static native short CCELFileData_GetPixels__SWIG_0(long jarg1, int jarg2);
  public final static native short CCELFileData_GetPixels__SWIG_1(long jarg1, int jarg2, int jarg3);
  public final static native boolean CCELFileData_IsMasked__SWIG_0(long jarg1, int jarg2, int jarg3);
  public final static native boolean CCELFileData_IsMasked__SWIG_1(long jarg1, int jarg2);
  public final static native boolean CCELFileData_IsOutlier__SWIG_0(long jarg1, int jarg2, int jarg3);
  public final static native boolean CCELFileData_IsOutlier__SWIG_1(long jarg1, int jarg2);
  public final static native void CCELFileData_Close(long jarg1);
  public final static native long CCELFileData_GetFileSize(long jarg1);
  public final static native boolean CCELFileData_Exists(long jarg1);
  public final static native boolean CCELFileData_ReadHeader(long jarg1);
  public final static native boolean CCELFileData_Read__SWIG_0(long jarg1, boolean jarg2);
  public final static native boolean CCELFileData_Read__SWIG_1(long jarg1);
  public final static native boolean CCELFileData_IsXDACompatibleFile(long jarg1);
  public final static native boolean CCELFileData_IsTranscriptomeBcelFile(long jarg1);
  public final static native boolean CCELFileData_IsCompactCelFile(long jarg1);
  public final static native boolean CCELFileData_ReadEx__SWIG_0(long jarg1, String jarg2, int jarg3);
  public final static native boolean CCELFileData_ReadEx__SWIG_1(long jarg1, String jarg2);
  public final static native boolean CCELFileData_ReadEx__SWIG_2(long jarg1);
  public final static native int CCELFileData_GetReadState(long jarg1);
  public final static native void CCELFileData_Clear(long jarg1);
  public final static native int CCELFileData_GetFileFormat(long jarg1);
  public final static native void CCELFileData_SetFileFormat(long jarg1, int jarg2);
  public final static native void CCELFileData_SetAlgorithmName(long jarg1, String jarg2);
  public final static native void CCELFileData_AddAlgorithmParameter(long jarg1, String jarg2, String jarg3);
  public final static native void CCELFileData_SetDimensions(long jarg1, int jarg2, int jarg3);
  public final static native void CCELFileData_SetChipType(long jarg1, String jarg2);
  public final static native void CCELFileData_SetMargin(long jarg1, int jarg2);
  public final static native void CCELFileData_SetGridCorners(long jarg1, long jarg2);
  public final static native void CCELFileData_SetCellEntry__SWIG_0(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void CCELFileData_SetCellEntry__SWIG_1(long jarg1, int jarg2, long jarg3);
  public final static native void CCELFileData_AllocateEntries(long jarg1);
  public final static native void CCELFileData_SetTranscriptomeCellEntry__SWIG_0(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void CCELFileData_SetTranscriptomeCellEntry__SWIG_1(long jarg1, int jarg2, long jarg3);
  public final static native void CCELFileData_AllocateTranscriptomeEntries(long jarg1);
  public final static native void CCELFileData_SetIntensity__SWIG_0(long jarg1, int jarg2, float jarg3);
  public final static native void CCELFileData_SetIntensity__SWIG_1(long jarg1, int jarg2, int jarg3, float jarg4);
  public final static native void CCELFileData_SetStdv__SWIG_0(long jarg1, int jarg2, float jarg3);
  public final static native void CCELFileData_SetStdv__SWIG_1(long jarg1, int jarg2, int jarg3, float jarg4);
  public final static native void CCELFileData_SetPixels__SWIG_0(long jarg1, int jarg2, short jarg3);
  public final static native void CCELFileData_SetPixels__SWIG_1(long jarg1, int jarg2, int jarg3, short jarg4);
  public final static native void CCELFileData_SetMask__SWIG_0(long jarg1, int jarg2, boolean jarg3);
  public final static native void CCELFileData_SetMask__SWIG_1(long jarg1, int jarg2, int jarg3, boolean jarg4);
  public final static native void CCELFileData_SetOutlier__SWIG_0(long jarg1, int jarg2, boolean jarg3);
  public final static native void CCELFileData_SetOutlier__SWIG_1(long jarg1, int jarg2, int jarg3, boolean jarg4);
  public final static native void CCELFileData_Munmap(long jarg1);
  public final static native void CCELFileData_EnsureNotMmapped(long jarg1);
  public final static native void set_BackgroundZoneType_centerx(long jarg1, float jarg2);
  public final static native float get_BackgroundZoneType_centerx(long jarg1);
  public final static native void set_BackgroundZoneType_centery(long jarg1, float jarg2);
  public final static native float get_BackgroundZoneType_centery(long jarg1);
  public final static native void set_BackgroundZoneType_background(long jarg1, float jarg2);
  public final static native float get_BackgroundZoneType_background(long jarg1);
  public final static native long BackgroundZoneType__BackgroundZoneType_assign(long jarg1, long jarg2);
  public final static native long new_BackgroundZoneType();
  public final static native void delete_BackgroundZoneType(long jarg1);
  public final static native void set_BackgroundZoneInfo_number_zones(long jarg1, int jarg2);
  public final static native int get_BackgroundZoneInfo_number_zones(long jarg1);
  public final static native void set_BackgroundZoneInfo_smooth_factor(long jarg1, float jarg2);
  public final static native float get_BackgroundZoneInfo_smooth_factor(long jarg1);
  public final static native void set_BackgroundZoneInfo_zones(long jarg1, long jarg2);
  public final static native long get_BackgroundZoneInfo_zones(long jarg1);
  public final static native long new_BackgroundZoneInfo();
  public final static native void delete_BackgroundZoneInfo(long jarg1);
  public final static native long new_CCHPFileHeader();
  public final static native void delete_CCHPFileHeader(long jarg1);
  public final static native int CCHPFileHeader_GetCols(long jarg1);
  public final static native int CCHPFileHeader_GetRows(long jarg1);
  public final static native int CCHPFileHeader_GetNumProbeSets(long jarg1);
  public final static native int CCHPFileHeader_GetAssayType(long jarg1);
  public final static native String CCHPFileHeader_GetChipType(long jarg1);
  public final static native String CCHPFileHeader_GetAlgName(long jarg1);
  public final static native String CCHPFileHeader_GetAlgVersion(long jarg1);
  public final static native long CCHPFileHeader_AlgorithmParameters(long jarg1);
  public final static native long CCHPFileHeader_SummaryParameters(long jarg1);
  public final static native String CCHPFileHeader_GetParentCellFile(long jarg1);
  public final static native String CCHPFileHeader_GetProgID(long jarg1);
  public final static native String CCHPFileHeader_GetAlgorithmParameter(long jarg1, String jarg2);
  public final static native String CCHPFileHeader_GetSummaryParameter(long jarg1, String jarg2);
  public final static native long CCHPFileHeader_GetBackgroundZoneInfo(long jarg1);
  public final static native long CCHPFileHeader_GetBackgroundZones(long jarg1);
  public final static native long CCHPFileHeader_GetBackgroundZone(long jarg1, int jarg2, int jarg3);
  public final static native int CCHPFileHeader_GetMagicNumber(long jarg1);
  public final static native int CCHPFileHeader_GetVersionNumber(long jarg1);
  public final static native void CCHPFileHeader_SetCols(long jarg1, int jarg2);
  public final static native void CCHPFileHeader_SetRows(long jarg1, int jarg2);
  public final static native void CCHPFileHeader_SetNumProbeSets(long jarg1, int jarg2);
  public final static native void CCHPFileHeader_SetAssayType(long jarg1, int jarg2);
  public final static native void CCHPFileHeader_SetChipType(long jarg1, String jarg2);
  public final static native void CCHPFileHeader_SetAlgName(long jarg1, String jarg2);
  public final static native void CCHPFileHeader_SetAlgVersion(long jarg1, String jarg2);
  public final static native void CCHPFileHeader_SetParentCellFile(long jarg1, String jarg2);
  public final static native void CCHPFileHeader_SetProgID(long jarg1, String jarg2);
  public final static native long new_CProbeSetResults();
  public final static native void delete_CProbeSetResults(long jarg1);
  public final static native int get_ABS_PRESENT_CALL();
  public final static native int get_ABS_MARGINAL_CALL();
  public final static native int get_ABS_ABSENT_CALL();
  public final static native int get_ABS_NO_CALL();
  public final static native int get_COMP_INCREASE_CALL();
  public final static native int get_COMP_DECREASE_CALL();
  public final static native int get_COMP_MOD_INCREASE_CALL();
  public final static native int get_COMP_MOD_DECREASE_CALL();
  public final static native int get_COMP_NO_CHANGE_CALL();
  public final static native int get_COMP_NO_CALL();
  public final static native void set_CExpressionProbeSetResults_DetectionPValue(long jarg1, float jarg2);
  public final static native float get_CExpressionProbeSetResults_DetectionPValue(long jarg1);
  public final static native void set_CExpressionProbeSetResults_Signal(long jarg1, float jarg2);
  public final static native float get_CExpressionProbeSetResults_Signal(long jarg1);
  public final static native void set_CExpressionProbeSetResults_NumPairs(long jarg1, int jarg2);
  public final static native int get_CExpressionProbeSetResults_NumPairs(long jarg1);
  public final static native void set_CExpressionProbeSetResults_NumUsedPairs(long jarg1, int jarg2);
  public final static native int get_CExpressionProbeSetResults_NumUsedPairs(long jarg1);
  public final static native void set_CExpressionProbeSetResults_Detection(long jarg1, short jarg2);
  public final static native short get_CExpressionProbeSetResults_Detection(long jarg1);
  public final static native void set_CExpressionProbeSetResults_m_HasCompResults(long jarg1, boolean jarg2);
  public final static native boolean get_CExpressionProbeSetResults_m_HasCompResults(long jarg1);
  public final static native void set_CExpressionProbeSetResults_ChangePValue(long jarg1, float jarg2);
  public final static native float get_CExpressionProbeSetResults_ChangePValue(long jarg1);
  public final static native void set_CExpressionProbeSetResults_SignalLogRatio(long jarg1, float jarg2);
  public final static native float get_CExpressionProbeSetResults_SignalLogRatio(long jarg1);
  public final static native void set_CExpressionProbeSetResults_SignalLogRatioLow(long jarg1, float jarg2);
  public final static native float get_CExpressionProbeSetResults_SignalLogRatioLow(long jarg1);
  public final static native void set_CExpressionProbeSetResults_SignalLogRatioHigh(long jarg1, float jarg2);
  public final static native float get_CExpressionProbeSetResults_SignalLogRatioHigh(long jarg1);
  public final static native void set_CExpressionProbeSetResults_NumCommonPairs(long jarg1, int jarg2);
  public final static native int get_CExpressionProbeSetResults_NumCommonPairs(long jarg1);
  public final static native void set_CExpressionProbeSetResults_Change(long jarg1, short jarg2);
  public final static native short get_CExpressionProbeSetResults_Change(long jarg1);
  public final static native String CExpressionProbeSetResults_GetDetectionString(long jarg1);
  public final static native String CExpressionProbeSetResults_GetChangeString(long jarg1);
  public final static native long CExpressionProbeSetResults_CExpressionProbeSetResults_assign(long jarg1, long jarg2);
  public final static native long new_CExpressionProbeSetResults();
  public final static native void delete_CExpressionProbeSetResults(long jarg1);
  public final static native int get_ALLELE_A_CALL();
  public final static native int get_ALLELE_B_CALL();
  public final static native int get_ALLELE_AB_CALL();
  public final static native int get_ALLELE_NO_CALL();
  public final static native void set_CGenotypeProbeSetResults_AlleleCall(long jarg1, short jarg2);
  public final static native short get_CGenotypeProbeSetResults_AlleleCall(long jarg1);
  public final static native void set_CGenotypeProbeSetResults_Confidence(long jarg1, float jarg2);
  public final static native float get_CGenotypeProbeSetResults_Confidence(long jarg1);
  public final static native void set_CGenotypeProbeSetResults_RAS1(long jarg1, float jarg2);
  public final static native float get_CGenotypeProbeSetResults_RAS1(long jarg1);
  public final static native void set_CGenotypeProbeSetResults_RAS2(long jarg1, float jarg2);
  public final static native float get_CGenotypeProbeSetResults_RAS2(long jarg1);
  public final static native void set_CGenotypeProbeSetResults_pvalue_AA(long jarg1, float jarg2);
  public final static native float get_CGenotypeProbeSetResults_pvalue_AA(long jarg1);
  public final static native void set_CGenotypeProbeSetResults_pvalue_AB(long jarg1, float jarg2);
  public final static native float get_CGenotypeProbeSetResults_pvalue_AB(long jarg1);
  public final static native void set_CGenotypeProbeSetResults_pvalue_BB(long jarg1, float jarg2);
  public final static native float get_CGenotypeProbeSetResults_pvalue_BB(long jarg1);
  public final static native void set_CGenotypeProbeSetResults_pvalue_NoCall(long jarg1, float jarg2);
  public final static native float get_CGenotypeProbeSetResults_pvalue_NoCall(long jarg1);
  public final static native String CGenotypeProbeSetResults_GetAlleleCallString(long jarg1);
  public final static native long CGenotypeProbeSetResults_CGenotypeProbeSetResults_assign(long jarg1, long jarg2);
  public final static native long new_CGenotypeProbeSetResults();
  public final static native void delete_CGenotypeProbeSetResults(long jarg1);
  public final static native float CUniversalProbeSetResults_GetBackground(long jarg1);
  public final static native void CUniversalProbeSetResults_SetBackground(long jarg1, float jarg2);
  public final static native long CUniversalProbeSetResults_CUniversalProbeSetResults_assign(long jarg1, long jarg2);
  public final static native long new_CUniversalProbeSetResults();
  public final static native void delete_CUniversalProbeSetResults(long jarg1);
  public final static native void set_ForceCallType_position(long jarg1, int jarg2);
  public final static native int get_ForceCallType_position(long jarg1);
  public final static native void set_ForceCallType_call(long jarg1, char jarg2);
  public final static native char get_ForceCallType_call(long jarg1);
  public final static native void set_ForceCallType_reason(long jarg1, short jarg2);
  public final static native short get_ForceCallType_reason(long jarg1);
  public final static native long new_ForceCallType();
  public final static native void delete_ForceCallType(long jarg1);
  public final static native char get_NO_SIGNAL_THR_FORCE_CALL();
  public final static native char get_WEAK_SIGNAL_THR_FORCE_CALL();
  public final static native char get_SATURATION_LEVEL_FORCE_CALL();
  public final static native char get_QUALITY_SCORE_THR_FORCE_CALL();
  public final static native char get_TRACE_AND_SEQUENCE_PROFILES_FORCE_CALL();
  public final static native char get_RELIABILITY_THR_FORCE_CALL();
  public final static native void set_BaseCallType_position(long jarg1, int jarg2);
  public final static native int get_BaseCallType_position(long jarg1);
  public final static native void set_BaseCallType_call(long jarg1, char jarg2);
  public final static native char get_BaseCallType_call(long jarg1);
  public final static native long new_BaseCallType();
  public final static native void delete_BaseCallType(long jarg1);
  public final static native long new_CResequencingResults();
  public final static native void delete_CResequencingResults(long jarg1);
  public final static native void CResequencingResults_Clear(long jarg1);
  public final static native long CResequencingResults_GetCalledBases(long jarg1);
  public final static native char CResequencingResults_GetCalledBase(long jarg1, int jarg2);
  public final static native int CResequencingResults_GetCalledBasesSize(long jarg1);
  public final static native void CResequencingResults_ResizeCalledBases(long jarg1, int jarg2);
  public final static native void CResequencingResults_SetCalledBase(long jarg1, int jarg2, char jarg3);
  public final static native long CResequencingResults_GetScores(long jarg1);
  public final static native float CResequencingResults_GetScore(long jarg1, int jarg2);
  public final static native int CResequencingResults_GetScoresSize(long jarg1);
  public final static native void CResequencingResults_ResizeScores(long jarg1, int jarg2);
  public final static native void CResequencingResults_SetScore(long jarg1, int jarg2, float jarg3);
  public final static native long CResequencingResults_GetForceCalls(long jarg1);
  public final static native long CResequencingResults_GetForceCall(long jarg1, int jarg2);
  public final static native int CResequencingResults_GetForceCallsSize(long jarg1);
  public final static native void CResequencingResults_ResizeForceCalls(long jarg1, int jarg2);
  public final static native void CResequencingResults_SetForceCall(long jarg1, int jarg2, long jarg3);
  public final static native long CResequencingResults_GetOrigCalls(long jarg1);
  public final static native long CResequencingResults_GetOrigCall(long jarg1, int jarg2);
  public final static native int CResequencingResults_GetOrigCallsSize(long jarg1);
  public final static native void CResequencingResults_ResizeOrigCalls(long jarg1, int jarg2);
  public final static native void CResequencingResults_SetOrigCall(long jarg1, int jarg2, long jarg3);
  public final static native long new_CCHPFileData();
  public final static native void delete_CCHPFileData(long jarg1);
  public final static native long CCHPFileData_GetHeader(long jarg1);
  public final static native long CCHPFileData_GetExpressionResults(long jarg1, int jarg2);
  public final static native long CCHPFileData_GetGenotypingResults(long jarg1, int jarg2);
  public final static native long CCHPFileData_GetUniversalResults(long jarg1, int jarg2);
  public final static native long CCHPFileData_GetResequencingResults(long jarg1);
  public final static native String CCHPFileData_GetError(long jarg1);
  public final static native boolean CCHPFileData_Read(long jarg1);
  public final static native boolean CCHPFileData_ReadHeader(long jarg1);
  public final static native boolean CCHPFileData_Exists(long jarg1);
  public final static native boolean CCHPFileData_IsXDACompatibleFile(long jarg1);
  public final static native void CCHPFileData_SetFileName(long jarg1, String jarg2);
  public final static native String CCHPFileData_GetFileName(long jarg1);
  public final static native void CCHPFileData_Clear(long jarg1);
  public final static native void set_BarSequenceResultData_dValue(long jarg1, double jarg2);
  public final static native double get_BarSequenceResultData_dValue(long jarg1);
  public final static native void set_BarSequenceResultData_fValue(long jarg1, float jarg2);
  public final static native float get_BarSequenceResultData_fValue(long jarg1);
  public final static native void set_BarSequenceResultData_iValue(long jarg1, int jarg2);
  public final static native int get_BarSequenceResultData_iValue(long jarg1);
  public final static native void set_BarSequenceResultData_sValue(long jarg1, short jarg2);
  public final static native short get_BarSequenceResultData_sValue(long jarg1);
  public final static native void set_BarSequenceResultData_cValue(long jarg1, char jarg2);
  public final static native char get_BarSequenceResultData_cValue(long jarg1);
  public final static native void set_BarSequenceResultData_uiValue(long jarg1, long jarg2);
  public final static native long get_BarSequenceResultData_uiValue(long jarg1);
  public final static native void set_BarSequenceResultData_usValue(long jarg1, int jarg2);
  public final static native int get_BarSequenceResultData_usValue(long jarg1);
  public final static native void set_BarSequenceResultData_ucValue(long jarg1, short jarg2);
  public final static native short get_BarSequenceResultData_ucValue(long jarg1);
  public final static native long new_BarSequenceResultData();
  public final static native void delete_BarSequenceResultData(long jarg1);
  public final static native long new_CGDACSequenceResultItem();
  public final static native void delete_CGDACSequenceResultItem(long jarg1);
  public final static native String CGDACSequenceResultItem_GetName(long jarg1);
  public final static native String CGDACSequenceResultItem_GetVersion(long jarg1);
  public final static native String CGDACSequenceResultItem_GetGroupName(long jarg1);
  public final static native int CGDACSequenceResultItem_GetNumberDataPoints(long jarg1);
  public final static native int CGDACSequenceResultItem_GetNumberColumns(long jarg1);
  public final static native int CGDACSequenceResultItem_GetColumnType(long jarg1, int jarg2);
  public final static native void CGDACSequenceResultItem_GetData(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native int CGDACSequenceResultItem_GetNumberParameters(long jarg1);
  public final static native long CGDACSequenceResultItem_GetParameter(long jarg1, int jarg2);
  public final static native void CGDACSequenceResultItem_SetName(long jarg1, String jarg2);
  public final static native void CGDACSequenceResultItem_SetVersion(long jarg1, String jarg2);
  public final static native void CGDACSequenceResultItem_SetGroupName(long jarg1, String jarg2);
  public final static native void CGDACSequenceResultItem_SetNumberDataPoints(long jarg1, int jarg2);
  public final static native void CGDACSequenceResultItem_SetDataPoint(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native void CGDACSequenceResultItem_AddParameter(long jarg1, String jarg2, String jarg3);
  public final static native long new_CBARFileData();
  public final static native void delete_CBARFileData(long jarg1);
  public final static native void CBARFileData_SetFileName(long jarg1, String jarg2);
  public final static native String CBARFileData_GetFileName(long jarg1);
  public final static native boolean CBARFileData_Read(long jarg1);
  public final static native boolean CBARFileData_ReadHeader(long jarg1);
  public final static native boolean CBARFileData_Exists(long jarg1);
  public final static native void CBARFileData_Close(long jarg1);
  public final static native String CBARFileData_GetError(long jarg1);
  public final static native float CBARFileData_GetVersion(long jarg1);
  public final static native int CBARFileData_GetNumberSequences(long jarg1);
  public final static native int CBARFileData_GetNumberColumns(long jarg1);
  public final static native int CBARFileData_GetNumberParameters(long jarg1);
  public final static native long CBARFileData_GetParameter(long jarg1, int jarg2);
  public final static native long CBARFileData_GetColumnTypes(long jarg1, int jarg2);
  public final static native void CBARFileData_GetResults(long jarg1, int jarg2, long jarg3);
  public final static native void CBARFileData_AddAlgorithmParameter(long jarg1, String jarg2, String jarg3);
  public final static native void CBARFileData_AddColumn(long jarg1, int jarg2);
  public final static native void CBARFileData_SetNumberSequences(long jarg1, int jarg2);
  public final static native long CBARFileData_GetResultsPtr(long jarg1, int jarg2);
  public final static native String get_BPMAP_FILE_HEADER_BYTES();
  public final static native int get_BPMAP_FILE_HEADER_LEN();
  public final static native int get_PM_ONLY();
  public final static native int get_PM_MM();
  public final static native int get_PROBE_STORAGE_BUFFER_LENGTH();
  public final static native void set_GDACSequenceHitItemType_PMX(long jarg1, long jarg2);
  public final static native long get_GDACSequenceHitItemType_PMX(long jarg1);
  public final static native void set_GDACSequenceHitItemType_PMY(long jarg1, long jarg2);
  public final static native long get_GDACSequenceHitItemType_PMY(long jarg1);
  public final static native void set_GDACSequenceHitItemType_MMX(long jarg1, long jarg2);
  public final static native long get_GDACSequenceHitItemType_MMX(long jarg1);
  public final static native void set_GDACSequenceHitItemType_MMY(long jarg1, long jarg2);
  public final static native long get_GDACSequenceHitItemType_MMY(long jarg1);
  public final static native void set_GDACSequenceHitItemType_MatchScore(long jarg1, float jarg2);
  public final static native float get_GDACSequenceHitItemType_MatchScore(long jarg1);
  public final static native void set_GDACSequenceHitItemType_Position(long jarg1, long jarg2);
  public final static native long get_GDACSequenceHitItemType_Position(long jarg1);
  public final static native void set_GDACSequenceHitItemType_PMProbe(long jarg1, long jarg2);
  public final static native long get_GDACSequenceHitItemType_PMProbe(long jarg1);
  public final static native void set_GDACSequenceHitItemType_ProbeLength(long jarg1, short jarg2);
  public final static native short get_GDACSequenceHitItemType_ProbeLength(long jarg1);
  public final static native void set_GDACSequenceHitItemType_TopStrand(long jarg1, short jarg2);
  public final static native short get_GDACSequenceHitItemType_TopStrand(long jarg1);
  public final static native boolean GDACSequenceHitItemType__GDACSequenceHitItemType_less_than(long jarg1, long jarg2);
  public final static native void set_GDACSequenceHitItemType_PackedPMProbe(long jarg1, String jarg2);
  public final static native String get_GDACSequenceHitItemType_PackedPMProbe(long jarg1);
  public final static native long new_GDACSequenceHitItemType();
  public final static native void delete_GDACSequenceHitItemType(long jarg1);
  public final static native int get_HIT_ITEM_SIZE_WITH_PROBE_PAIRS();
  public final static native int get_HIT_ITEM_SIZE_WITH_PM_ONLY();
  public final static native long new_CGDACSequenceItem();
  public final static native void delete_CGDACSequenceItem(long jarg1);
  public final static native String CGDACSequenceItem_GetName(long jarg1);
  public final static native String CGDACSequenceItem_GroupName(long jarg1);
  public final static native String CGDACSequenceItem_GetSeqVersion(long jarg1);
  public final static native int CGDACSequenceItem_GetProbeMapping(long jarg1);
  public final static native int CGDACSequenceItem_GetNumber(long jarg1);
  public final static native int CGDACSequenceItem_GetNumberHits(long jarg1);
  public final static native int CGDACSequenceItem_GetNumberParameters(long jarg1);
  public final static native long CGDACSequenceItem_GetParameter(long jarg1, int jarg2);
  public final static native void CGDACSequenceItem_GetHitItem__SWIG_0(long jarg1, int jarg2, long jarg3, boolean jarg4);
  public final static native void CGDACSequenceItem_GetHitItem__SWIG_1(long jarg1, int jarg2, long jarg3);
  public final static native long new_CBPMAPFileData();
  public final static native void delete_CBPMAPFileData(long jarg1);
  public final static native void CBPMAPFileData_SetFileName(long jarg1, String jarg2);
  public final static native String CBPMAPFileData_GetFileName(long jarg1);
  public final static native boolean CBPMAPFileData_Read(long jarg1);
  public final static native boolean CBPMAPFileData_ReadHeader(long jarg1);
  public final static native boolean CBPMAPFileData_Exists(long jarg1);
  public final static native void CBPMAPFileData_Close(long jarg1);
  public final static native String CBPMAPFileData_GetError(long jarg1);
  public final static native int CBPMAPFileData_GetNumberSequences(long jarg1);
  public final static native float CBPMAPFileData_GetVersion(long jarg1);
  public final static native void CBPMAPFileData_GetSequenceItem(long jarg1, int jarg2, long jarg3);
  public final static native long new_CEXPFileData();
  public final static native void delete_CEXPFileData(long jarg1);
  public final static native void CEXPFileData_SetFileName(long jarg1, String jarg2);
  public final static native String CEXPFileData_GetFileName(long jarg1);
  public final static native String CEXPFileData_GetArrayType(long jarg1);
  public final static native void CEXPFileData_SetArrayType(long jarg1, String jarg2);
  public final static native boolean CEXPFileData_Read(long jarg1);
  public final static native boolean CEXPFileData_Exists(long jarg1);
  public final static native void CEXPFileData_Clear(long jarg1);
  public final static native long CEXPFileData_GetScanParameters(long jarg1);
  public final static native long CEXPFileData_GetHybParameters(long jarg1);
  public final static native long CEXPFileData_GetSampleParameters(long jarg1);
  public final static native int get_GRC_VERSION();
  public final static native int get_GRC_MAGIC();
  public final static native long new_CGRCFileData();
  public final static native void delete_CGRCFileData(long jarg1);
  public final static native void CGRCFileData_SetFileName(long jarg1, String jarg2);
  public final static native String CGRCFileData_GetFileName(long jarg1);
  public final static native boolean CGRCFileData_Read(long jarg1, long jarg2);
  public final static native boolean CGRCFileData_Exists(long jarg1);
  public final static native void set_ProbeSetIndiciesType_probeSetName(long jarg1, long jarg2);
  public final static native long get_ProbeSetIndiciesType_probeSetName(long jarg1);
  public final static native void set_ProbeSetIndiciesType_indicies(long jarg1, long jarg2);
  public final static native long get_ProbeSetIndiciesType_indicies(long jarg1);
  public final static native long new_ProbeSetIndiciesType();
  public final static native void delete_ProbeSetIndiciesType(long jarg1);
  public final static native long new_CMSKFileData();
  public final static native void delete_CMSKFileData(long jarg1);
  public final static native void CMSKFileData_SetFileName(long jarg1, String jarg2);
  public final static native String CMSKFileData_GetFileName(long jarg1);
  public final static native String CMSKFileData_GetArrayType(long jarg1);
  public final static native int CMSKFileData_GetProbeSetIndiciesListCount(long jarg1);
  public final static native int CMSKFileData_GetProbeSetListCount(long jarg1);
  public final static native String CMSKFileData_GetError(long jarg1);
  public final static native void CMSKFileData_GetProbeSetIndiciesIterators(long jarg1, long jarg2, long jarg3);
  public final static native void CMSKFileData_GetProbeSetIterators(long jarg1, long jarg2, long jarg3);
  public final static native boolean CMSKFileData_Read(long jarg1);
  public final static native boolean CMSKFileData_Exists(long jarg1);
  public final static native void CMSKFileData_Clear(long jarg1);
  public final static native void set_ProbeSetInfo_probeSetName(long jarg1, long jarg2);
  public final static native long get_ProbeSetInfo_probeSetName(long jarg1);
  public final static native void set_ProbeSetInfo_numberPairs(long jarg1, int jarg2);
  public final static native int get_ProbeSetInfo_numberPairs(long jarg1);
  public final static native long new_ProbeSetInfo();
  public final static native void delete_ProbeSetInfo(long jarg1);
  public final static native long new_CPSIFileData();
  public final static native void delete_CPSIFileData(long jarg1);
  public final static native void CPSIFileData_SetFileName(long jarg1, String jarg2);
  public final static native String CPSIFileData_GetFileName(long jarg1);
  public final static native int CPSIFileData_GetProbeSetCount(long jarg1);
  public final static native String CPSIFileData_GetProbeSetName(long jarg1, int jarg2);
  public final static native int CPSIFileData_GetProbePairs(long jarg1, int jarg2);
  public final static native boolean CPSIFileData_Read(long jarg1);
  public final static native boolean CPSIFileData_Exists(long jarg1);
  public final static native void CPSIFileData_Clear(long jarg1);
  public final static native String get_GCOS_SAMPLE_NAME_PARAMETER_NAME();
  public final static native String get_GCOS_SAMPLE_TYPE_PARAMETER_NAME();
  public final static native String get_GCOS_SAMPLE_PROJECT_PARAMETER_NAME();
  public final static native void set_AttributeNameValueType_name(long jarg1, long jarg2);
  public final static native long get_AttributeNameValueType_name(long jarg1);
  public final static native void set_AttributeNameValueType_value(long jarg1, long jarg2);
  public final static native long get_AttributeNameValueType_value(long jarg1);
  public final static native void set_AttributeNameValueType_type(long jarg1, long jarg2);
  public final static native long get_AttributeNameValueType_type(long jarg1);
  public final static native long new_AttributeNameValueType();
  public final static native void delete_AttributeNameValueType(long jarg1);
  public final static native long new_DttArrayData();
  public final static native void delete_DttArrayData(long jarg1);
  public final static native String DttArrayData_GetArrayType(long jarg1);
  public final static native void DttArrayData_SetArrayType(long jarg1, String jarg2);
  public final static native String DttArrayData_GetExperimentName(long jarg1);
  public final static native void DttArrayData_SetExperimentName(long jarg1, String jarg2);
  public final static native long DttArrayData_Attributes(long jarg1);
  public final static native void DttArrayData_Clear(long jarg1);
  public final static native long new_DttArrayFileReader();
  public final static native void delete_DttArrayFileReader(long jarg1);
  public final static native String DttArrayFileReader_GetFileName(long jarg1);
  public final static native void DttArrayFileReader_SetFileName(long jarg1, String jarg2);
  public final static native boolean DttArrayFileReader_Read(long jarg1, long jarg2);
  public final static native boolean DttArrayFileReader_Exists(long jarg1);
  public final static native void set_FusionTagValuePairType_Tag(long jarg1, long jarg2);
  public final static native long get_FusionTagValuePairType_Tag(long jarg1);
  public final static native void set_FusionTagValuePairType_Value(long jarg1, long jarg2);
  public final static native long get_FusionTagValuePairType_Value(long jarg1);
  public final static native long FusionTagValuePairType_FusionTagValuePairType_assign(long jarg1, long jarg2);
  public final static native boolean FusionTagValuePairType_FusionTagValuePairType_equals_obj(long jarg1, long jarg2);
  public final static native boolean FusionTagValuePairType_FusionTagValuePairType_equals_tag(long jarg1, long jarg2);
  public final static native long FusionTagValuePairType_DetailedType(long jarg1);
  public final static native long new_FusionTagValuePairType();
  public final static native void delete_FusionTagValuePairType(long jarg1);
  public final static native long new_FusionArrayFileReader();
  public final static native void delete_FusionArrayFileReader(long jarg1);
  public final static native boolean FusionArrayFileReader_Read(long jarg1, String jarg2, long jarg3);
  public final static native String FusionArrayFileReader_DataTypeIdentifier(long jarg1);
  public final static native long new_FusionProbeSetResults();
  public final static native void delete_FusionProbeSetResults(long jarg1);
  public final static native void FusionExpressionProbeSetResults_Clear(long jarg1);
  public final static native float FusionExpressionProbeSetResults_GetDetectionPValue(long jarg1);
  public final static native float FusionExpressionProbeSetResults_GetSignal(long jarg1);
  public final static native int FusionExpressionProbeSetResults_GetNumPairs(long jarg1);
  public final static native int FusionExpressionProbeSetResults_GetNumUsedPairs(long jarg1);
  public final static native short FusionExpressionProbeSetResults_GetDetection(long jarg1);
  public final static native boolean FusionExpressionProbeSetResults_HasCompResults(long jarg1);
  public final static native float FusionExpressionProbeSetResults_GetChangePValue(long jarg1);
  public final static native float FusionExpressionProbeSetResults_GetSignalLogRatio(long jarg1);
  public final static native float FusionExpressionProbeSetResults_GetSignalLogRatioLow(long jarg1);
  public final static native float FusionExpressionProbeSetResults_GetSignalLogRatioHigh(long jarg1);
  public final static native int FusionExpressionProbeSetResults_GetNumCommonPairs(long jarg1);
  public final static native short FusionExpressionProbeSetResults_GetChange(long jarg1);
  public final static native void FusionExpressionProbeSetResults_SetDetectionPValue(long jarg1, float jarg2);
  public final static native void FusionExpressionProbeSetResults_SetSignal(long jarg1, float jarg2);
  public final static native void FusionExpressionProbeSetResults_SetNumPairs(long jarg1, int jarg2);
  public final static native void FusionExpressionProbeSetResults_SetNumUsedPairs(long jarg1, int jarg2);
  public final static native void FusionExpressionProbeSetResults_SetDetection(long jarg1, short jarg2);
  public final static native void FusionExpressionProbeSetResults_SetHasCompResults(long jarg1, boolean jarg2);
  public final static native void FusionExpressionProbeSetResults_SetChangePValue(long jarg1, float jarg2);
  public final static native void FusionExpressionProbeSetResults_SetSignalLogRatio(long jarg1, float jarg2);
  public final static native void FusionExpressionProbeSetResults_SetSignalLogRatioLow(long jarg1, float jarg2);
  public final static native void FusionExpressionProbeSetResults_SetSignalLogRatioHigh(long jarg1, float jarg2);
  public final static native void FusionExpressionProbeSetResults_SetNumCommonPairs(long jarg1, int jarg2);
  public final static native void FusionExpressionProbeSetResults_SetChange(long jarg1, short jarg2);
  public final static native String FusionExpressionProbeSetResults_GetDetectionString(long jarg1);
  public final static native String FusionExpressionProbeSetResults_GetChangeString(long jarg1);
  public final static native long FusionExpressionProbeSetResults_FusionExpressionProbeSetResults_assign(long jarg1, long jarg2);
  public final static native long new_FusionExpressionProbeSetResults();
  public final static native void delete_FusionExpressionProbeSetResults(long jarg1);
  public final static native void FusionGenotypeProbeSetResults_Clear(long jarg1);
  public final static native short FusionGenotypeProbeSetResults_GetAlleleCall(long jarg1);
  public final static native float FusionGenotypeProbeSetResults_GetConfidence(long jarg1);
  public final static native float FusionGenotypeProbeSetResults_GetRAS1(long jarg1);
  public final static native float FusionGenotypeProbeSetResults_GetRAS2(long jarg1);
  public final static native float FusionGenotypeProbeSetResults_GetPValueAA(long jarg1);
  public final static native float FusionGenotypeProbeSetResults_GetPValueAB(long jarg1);
  public final static native float FusionGenotypeProbeSetResults_GetPValueBB(long jarg1);
  public final static native float FusionGenotypeProbeSetResults_GetPValueNoCall(long jarg1);
  public final static native void FusionGenotypeProbeSetResults_SetAlleleCall(long jarg1, short jarg2);
  public final static native void FusionGenotypeProbeSetResults_SetConfidence(long jarg1, float jarg2);
  public final static native void FusionGenotypeProbeSetResults_SetRAS1(long jarg1, float jarg2);
  public final static native void FusionGenotypeProbeSetResults_SetRAS2(long jarg1, float jarg2);
  public final static native void FusionGenotypeProbeSetResults_SetPValueAA(long jarg1, float jarg2);
  public final static native void FusionGenotypeProbeSetResults_SetPValueAB(long jarg1, float jarg2);
  public final static native void FusionGenotypeProbeSetResults_SetPValueBB(long jarg1, float jarg2);
  public final static native void FusionGenotypeProbeSetResults_SetPValueNoCall(long jarg1, float jarg2);
  public final static native String FusionGenotypeProbeSetResults_GetAlleleCallString(long jarg1);
  public final static native long FusionGenotypeProbeSetResults_FusionGenotypeProbeSetResults_assign(long jarg1, long jarg2);
  public final static native long new_FusionGenotypeProbeSetResults();
  public final static native void delete_FusionGenotypeProbeSetResults(long jarg1);
  public final static native float FusionUniversalProbeSetResults_GetBackground(long jarg1);
  public final static native void FusionUniversalProbeSetResults_SetBackground(long jarg1, float jarg2);
  public final static native void FusionUniversalProbeSetResults_Clear(long jarg1);
  public final static native long FusionUniversalProbeSetResults_FusionUniversalProbeSetResults_assign(long jarg1, long jarg2);
  public final static native long new_FusionUniversalProbeSetResults();
  public final static native void delete_FusionUniversalProbeSetResults(long jarg1);
  public final static native long new_FusionForceCallType__SWIG_0();
  public final static native long new_FusionForceCallType__SWIG_1(int jarg1, char jarg2, short jarg3);
  public final static native void delete_FusionForceCallType(long jarg1);
  public final static native void FusionForceCallType_Clear(long jarg1);
  public final static native int FusionForceCallType_GetPosition(long jarg1);
  public final static native char FusionForceCallType_GetCall(long jarg1);
  public final static native short FusionForceCallType_GetReason(long jarg1);
  public final static native void FusionForceCallType_SetPosition(long jarg1, int jarg2);
  public final static native void FusionForceCallType_SetCall(long jarg1, char jarg2);
  public final static native void FusionForceCallType_SetReason(long jarg1, short jarg2);
  public final static native long new_FusionBaseCallType__SWIG_0();
  public final static native long new_FusionBaseCallType__SWIG_1(int jarg1, char jarg2);
  public final static native void delete_FusionBaseCallType(long jarg1);
  public final static native void FusionBaseCallType_Clear(long jarg1);
  public final static native int FusionBaseCallType_GetPosition(long jarg1);
  public final static native char FusionBaseCallType_GetCall(long jarg1);
  public final static native void FusionBaseCallType_SetPosition(long jarg1, int jarg2);
  public final static native void FusionBaseCallType_SetCall(long jarg1, char jarg2);
  public final static native long new_FusionResequencingResults();
  public final static native void delete_FusionResequencingResults(long jarg1);
  public final static native void FusionResequencingResults_Clear(long jarg1);
  public final static native long FusionResequencingResults_GetCalledBases(long jarg1);
  public final static native char FusionResequencingResults_GetCalledBase(long jarg1, int jarg2);
  public final static native int FusionResequencingResults_GetCalledBasesSize(long jarg1);
  public final static native void FusionResequencingResults_ResizeCalledBases(long jarg1, int jarg2);
  public final static native void FusionResequencingResults_SetCalledBase(long jarg1, int jarg2, char jarg3);
  public final static native void FusionResequencingResults_AddCalledBase(long jarg1, char jarg2);
  public final static native long FusionResequencingResults_GetScores(long jarg1);
  public final static native float FusionResequencingResults_GetScore(long jarg1, int jarg2);
  public final static native int FusionResequencingResults_GetScoresSize(long jarg1);
  public final static native void FusionResequencingResults_ResizeScores(long jarg1, int jarg2);
  public final static native void FusionResequencingResults_SetScore(long jarg1, int jarg2, float jarg3);
  public final static native void FusionResequencingResults_AddScore(long jarg1, float jarg2);
  public final static native long FusionResequencingResults_GetForceCalls(long jarg1);
  public final static native long FusionResequencingResults_GetForceCall(long jarg1, int jarg2);
  public final static native int FusionResequencingResults_GetForceCallsSize(long jarg1);
  public final static native void FusionResequencingResults_ResizeForceCalls(long jarg1, int jarg2);
  public final static native void FusionResequencingResults_SetForceCall(long jarg1, int jarg2, long jarg3);
  public final static native void FusionResequencingResults_AddForceCall(long jarg1, long jarg2);
  public final static native long FusionResequencingResults_GetOrigCalls(long jarg1);
  public final static native long FusionResequencingResults_GetOrigCall(long jarg1, int jarg2);
  public final static native int FusionResequencingResults_GetOrigCallsSize(long jarg1);
  public final static native void FusionResequencingResults_ResizeOrigCalls(long jarg1, int jarg2);
  public final static native void FusionResequencingResults_SetOrigCall(long jarg1, int jarg2, long jarg3);
  public final static native void FusionResequencingResults_AddOrigCall(long jarg1, long jarg2);
  public final static native int FusionCDFFileHeader_GetCols(long jarg1);
  public final static native int FusionCDFFileHeader_GetRows(long jarg1);
  public final static native int FusionCDFFileHeader_GetNumProbeSets(long jarg1);
  public final static native int FusionCDFFileHeader_GetNumQCProbeSets(long jarg1);
  public final static native long FusionCDFFileHeader_GetReference(long jarg1);
  public final static native long new_FusionCDFFileHeader();
  public final static native void delete_FusionCDFFileHeader(long jarg1);
  public final static native int FusionCDFProbeInformation_GetListIndex(long jarg1);
  public final static native int FusionCDFProbeInformation_GetExpos(long jarg1);
  public final static native int FusionCDFProbeInformation_GetX(long jarg1);
  public final static native int FusionCDFProbeInformation_GetY(long jarg1);
  public final static native char FusionCDFProbeInformation_GetPBase(long jarg1);
  public final static native char FusionCDFProbeInformation_GetTBase(long jarg1);
  public final static native long new_FusionCDFProbeInformation();
  public final static native void delete_FusionCDFProbeInformation(long jarg1);
  public final static native int FusionCDFProbeGroupInformation_GetDirection(long jarg1);
  public final static native int FusionCDFProbeGroupInformation_GetNumLists(long jarg1);
  public final static native int FusionCDFProbeGroupInformation_GetNumCells(long jarg1);
  public final static native int FusionCDFProbeGroupInformation_GetNumCellsPerList(long jarg1);
  public final static native int FusionCDFProbeGroupInformation_GetStart(long jarg1);
  public final static native int FusionCDFProbeGroupInformation_GetStop(long jarg1);
  public final static native String FusionCDFProbeGroupInformation_GetName(long jarg1);
  public final static native void FusionCDFProbeGroupInformation_GetCell(long jarg1, int jarg2, long jarg3);
  public final static native long new_FusionCDFProbeGroupInformation();
  public final static native void delete_FusionCDFProbeGroupInformation(long jarg1);
  public final static native int FusionCDFProbeSetInformation_GetProbeSetType(long jarg1);
  public final static native int FusionCDFProbeSetInformation_GetDirection(long jarg1);
  public final static native int FusionCDFProbeSetInformation_GetNumLists(long jarg1);
  public final static native int FusionCDFProbeSetInformation_GetNumGroups(long jarg1);
  public final static native int FusionCDFProbeSetInformation_GetNumCells(long jarg1);
  public final static native int FusionCDFProbeSetInformation_GetNumCellsPerList(long jarg1);
  public final static native int FusionCDFProbeSetInformation_GetProbeSetNumber(long jarg1);
  public final static native void FusionCDFProbeSetInformation_GetGroupInformation(long jarg1, int jarg2, long jarg3);
  public final static native long new_FusionCDFProbeSetInformation();
  public final static native void delete_FusionCDFProbeSetInformation(long jarg1);
  public final static native long new_FusionCDFQCProbeInformation();
  public final static native void delete_FusionCDFQCProbeInformation(long jarg1);
  public final static native int FusionCDFQCProbeInformation_GetX(long jarg1);
  public final static native int FusionCDFQCProbeInformation_GetY(long jarg1);
  public final static native int FusionCDFQCProbeInformation_GetPLen(long jarg1);
  public final static native boolean FusionCDFQCProbeInformation_IsPerfectMatchProbe(long jarg1);
  public final static native boolean FusionCDFQCProbeInformation_IsBackgroundProbe(long jarg1);
  public final static native int FusionCDFQCProbeSetInformation_GetQCProbeSetType(long jarg1);
  public final static native int FusionCDFQCProbeSetInformation_GetNumCells(long jarg1);
  public final static native void FusionCDFQCProbeSetInformation_GetProbeInformation(long jarg1, int jarg2, long jarg3);
  public final static native long new_FusionCDFQCProbeSetInformation();
  public final static native void delete_FusionCDFQCProbeSetInformation(long jarg1);
  public final static native long new_FusionCDFData();
  public final static native void delete_FusionCDFData(long jarg1);
  public final static native void FusionCDFData_SetFileName(long jarg1, String jarg2);
  public final static native String FusionCDFData_GetFileName(long jarg1);
  public final static native long FusionCDFData_GetHeader(long jarg1);
  public final static native String FusionCDFData_GetError(long jarg1);
  public final static native String FusionCDFData_GetProbeSetName(long jarg1, int jarg2);
  public final static native String FusionCDFData_GetChipType(long jarg1);
  public final static native boolean FusionCDFData_Read(long jarg1);
  public final static native boolean FusionCDFData_ReadHeader(long jarg1);
  public final static native boolean FusionCDFData_Exists(long jarg1);
  public final static native void FusionCDFData_Close(long jarg1);
  public final static native boolean FusionCDFData_IsXDACompatibleFile(String jarg1);
  public final static native boolean FusionCDFData_IsCalvinCompatibleFile(String jarg1);
  public final static native int FusionCDFData_GetProbeSetType(long jarg1, int jarg2);
  public final static native void FusionCDFData_GetProbeSetInformation(long jarg1, int jarg2, long jarg3);
  public final static native void FusionCDFData_GetQCProbeSetInformation(long jarg1, int jarg2, long jarg3);
  public final static native void FusionCDFData_FusionGetQCProbeSetInformation_By_Type(long jarg1, int jarg2, long jarg3);
  public final static native long FusionCDFQCProbeSetNames_GetStaticCDFQCProbeSetName(int jarg1);
  public final static native long new_FusionCDFQCProbeSetNames();
  public final static native void delete_FusionCDFQCProbeSetNames(long jarg1);
  public final static native int get_FusionCELData_CEL_ALL();
  public final static native int get_FusionCELData_CEL_DATA();
  public final static native int get_FusionCELData_CEL_OUTLIER();
  public final static native int get_FusionCELData_CEL_MASK();
  public final static native long new_FusionCELData();
  public final static native void delete_FusionCELData(long jarg1);
  public final static native void FusionCELData_SetFileName(long jarg1, String jarg2);
  public final static native String FusionCELData_GetFileName(long jarg1);
  public final static native void FusionCELData_SetError(long jarg1, long jarg2);
  public final static native long FusionCELData_GetError(long jarg1);
  public final static native long FusionCELData_GetHeaderKey(long jarg1, long jarg2);
  public final static native int FusionCELData_GetVersion(long jarg1);
  public final static native int FusionCELData_GetCols(long jarg1);
  public final static native int FusionCELData_GetRows(long jarg1);
  public final static native int FusionCELData_GetNumCells(long jarg1);
  public final static native long FusionCELData_GetHeader(long jarg1);
  public final static native long FusionCELData_GetAlg(long jarg1);
  public final static native long FusionCELData_GetParams(long jarg1);
  public final static native long FusionCELData_GetAlgorithmParameter(long jarg1, long jarg2);
  public final static native long FusionCELData_GetAlgorithmParameterTag(long jarg1, int jarg2);
  public final static native int FusionCELData_GetNumberAlgorithmParameters(long jarg1);
  public final static native long FusionCELData_GetAlgorithmParameters(long jarg1);
  public final static native long FusionCELData_GetParameters(long jarg1);
  public final static native long FusionCELData_GetChipType(long jarg1);
  public final static native int FusionCELData_GetCellMargin(long jarg1);
  public final static native long FusionCELData_GetNumOutliers(long jarg1);
  public final static native long FusionCELData_GetNumMasked(long jarg1);
  public final static native int FusionCELData_IndexToX(long jarg1, int jarg2);
  public final static native int FusionCELData_IndexToY(long jarg1, int jarg2);
  public final static native int FusionCELData_XYToIndex__SWIG_0(long jarg1, int jarg2, int jarg3);
  public final static native int FusionCELData_XYToIndex__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4);
  public final static native void FusionCELData_GetEntry__SWIG_0(long jarg1, int jarg2, long jarg3);
  public final static native void FusionCELData_GetEntry__SWIG_1(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native float FusionCELData_GetIntensity__SWIG_0(long jarg1, int jarg2);
  public final static native float FusionCELData_GetIntensity__SWIG_1(long jarg1, int jarg2, int jarg3);
  public final static native float FusionCELData_GetStdv__SWIG_0(long jarg1, int jarg2);
  public final static native float FusionCELData_GetStdv__SWIG_1(long jarg1, int jarg2, int jarg3);
  public final static native short FusionCELData_GetPixels__SWIG_0(long jarg1, int jarg2);
  public final static native short FusionCELData_GetPixels__SWIG_1(long jarg1, int jarg2, int jarg3);
  public final static native boolean FusionCELData_IsMasked__SWIG_0(long jarg1, int jarg2, int jarg3);
  public final static native boolean FusionCELData_IsMasked__SWIG_1(long jarg1, int jarg2);
  public final static native boolean FusionCELData_IsOutlier__SWIG_0(long jarg1, int jarg2, int jarg3);
  public final static native boolean FusionCELData_IsOutlier__SWIG_1(long jarg1, int jarg2);
  public final static native void FusionCELData_Close(long jarg1);
  public final static native long FusionCELData_GetFileSize(long jarg1);
  public final static native boolean FusionCELData_Exists(long jarg1);
  public final static native boolean FusionCELData_ReadHeader(long jarg1);
  public final static native boolean FusionCELData_Read__SWIG_0(long jarg1, boolean jarg2);
  public final static native boolean FusionCELData_Read__SWIG_1(long jarg1);
  public final static native boolean FusionCELData_ReadEx__SWIG_0(long jarg1, String jarg2, int jarg3);
  public final static native boolean FusionCELData_ReadEx__SWIG_1(long jarg1, String jarg2);
  public final static native boolean FusionCELData_ReadEx__SWIG_2(long jarg1);
  public final static native int FusionCELData_GetReadState(long jarg1);
  public final static native void FusionCELData_Clear(long jarg1);
  public final static native void FusionCELData_SetAlgorithmName(long jarg1, long jarg2);
  public final static native void FusionCELData_AddAlgorithmParameter(long jarg1, long jarg2, long jarg3);
  public final static native void FusionCELData_SetDimensions(long jarg1, int jarg2, int jarg3);
  public final static native void FusionCELData_SetChipType(long jarg1, long jarg2);
  public final static native void FusionCELData_SetMargin(long jarg1, int jarg2);
  public final static native void set_FusionCELFileEntryType_Intensity(long jarg1, float jarg2);
  public final static native float get_FusionCELFileEntryType_Intensity(long jarg1);
  public final static native void set_FusionCELFileEntryType_Stdv(long jarg1, float jarg2);
  public final static native float get_FusionCELFileEntryType_Stdv(long jarg1);
  public final static native void set_FusionCELFileEntryType_Pixels(long jarg1, short jarg2);
  public final static native short get_FusionCELFileEntryType_Pixels(long jarg1);
  public final static native long new_FusionCELFileEntryType();
  public final static native void delete_FusionCELFileEntryType(long jarg1);
  public final static native boolean IFusionCELDataAdapter_CanReadFile(long jarg1);
  public final static native void IFusionCELDataAdapter_SetFileName(long jarg1, String jarg2);
  public final static native String IFusionCELDataAdapter_GetFileName(long jarg1);
  public final static native void IFusionCELDataAdapter_SetError(long jarg1, long jarg2);
  public final static native long IFusionCELDataAdapter_GetError(long jarg1);
  public final static native long IFusionCELDataAdapter_GetHeaderKey(long jarg1, long jarg2);
  public final static native int IFusionCELDataAdapter_GetVersion(long jarg1);
  public final static native int IFusionCELDataAdapter_GetCols(long jarg1);
  public final static native int IFusionCELDataAdapter_GetRows(long jarg1);
  public final static native int IFusionCELDataAdapter_GetNumCells(long jarg1);
  public final static native long IFusionCELDataAdapter_GetHeader(long jarg1);
  public final static native long IFusionCELDataAdapter_GetAlg(long jarg1);
  public final static native long IFusionCELDataAdapter_GetParams(long jarg1);
  public final static native long IFusionCELDataAdapter_GetAlgorithmParameter(long jarg1, long jarg2);
  public final static native long IFusionCELDataAdapter_GetAlgorithmParameterTag(long jarg1, int jarg2);
  public final static native int IFusionCELDataAdapter_GetNumberAlgorithmParameters(long jarg1);
  public final static native long IFusionCELDataAdapter_GetAlgorithmParameters(long jarg1);
  public final static native void IFusionCELDataAdapter_GetParameters(long jarg1, long jarg2);
  public final static native long IFusionCELDataAdapter_GetChipType(long jarg1);
  public final static native int IFusionCELDataAdapter_GetCellMargin(long jarg1);
  public final static native long IFusionCELDataAdapter_GetNumOutliers(long jarg1);
  public final static native long IFusionCELDataAdapter_GetNumMasked(long jarg1);
  public final static native int IFusionCELDataAdapter_IndexToX(long jarg1, int jarg2);
  public final static native int IFusionCELDataAdapter_IndexToY(long jarg1, int jarg2);
  public final static native int IFusionCELDataAdapter_XYToIndex(long jarg1, int jarg2, int jarg3);
  public final static native void IFusionCELDataAdapter_GetEntry__SWIG_0(long jarg1, int jarg2, long jarg3);
  public final static native void IFusionCELDataAdapter_GetEntry__SWIG_1(long jarg1, int jarg2, int jarg3, long jarg4);
  public final static native float IFusionCELDataAdapter_GetIntensity__SWIG_0(long jarg1, int jarg2);
  public final static native float IFusionCELDataAdapter_GetIntensity__SWIG_1(long jarg1, int jarg2, int jarg3);
  public final static native float IFusionCELDataAdapter_GetStdv__SWIG_0(long jarg1, int jarg2);
  public final static native float IFusionCELDataAdapter_GetStdv__SWIG_1(long jarg1, int jarg2, int jarg3);
  public final static native short IFusionCELDataAdapter_GetPixels__SWIG_0(long jarg1, int jarg2);
  public final static native short IFusionCELDataAdapter_GetPixels__SWIG_1(long jarg1, int jarg2, int jarg3);
  public final static native boolean IFusionCELDataAdapter_IsMasked__SWIG_0(long jarg1, int jarg2, int jarg3);
  public final static native boolean IFusionCELDataAdapter_IsMasked__SWIG_1(long jarg1, int jarg2);
  public final static native boolean IFusionCELDataAdapter_IsOutlier__SWIG_0(long jarg1, int jarg2, int jarg3);
  public final static native boolean IFusionCELDataAdapter_IsOutlier__SWIG_1(long jarg1, int jarg2);
  public final static native void IFusionCELDataAdapter_Close(long jarg1);
  public final static native boolean IFusionCELDataAdapter_ReadHeader(long jarg1);
  public final static native boolean IFusionCELDataAdapter_Read(long jarg1, boolean jarg2);
  public final static native boolean IFusionCELDataAdapter_ReadEx(long jarg1, String jarg2, int jarg3);
  public final static native int IFusionCELDataAdapter_GetReadState(long jarg1);
  public final static native void IFusionCELDataAdapter_Clear(long jarg1);
  public final static native void IFusionCELDataAdapter_SetAlgorithmName(long jarg1, long jarg2);
  public final static native void IFusionCELDataAdapter_AddAlgorithmParameter(long jarg1, long jarg2, long jarg3);
  public final static native void IFusionCELDataAdapter_SetDimensions(long jarg1, int jarg2, int jarg3);
  public final static native void IFusionCELDataAdapter_SetChipType(long jarg1, long jarg2);
  public final static native void IFusionCELDataAdapter_SetMargin(long jarg1, int jarg2);
  public final static native void delete_IFusionCELDataAdapter(long jarg1);
  public final static native void ConvertFusion(long jarg1, long jarg2);
  public final static native void ConvertGCOS(long jarg1, long jarg2);
  public final static native int IFusionCHPHeaderAdapter_GetCols(long jarg1);
  public final static native int IFusionCHPHeaderAdapter_GetRows(long jarg1);
  public final static native int IFusionCHPHeaderAdapter_GetNumProbeSets(long jarg1);
  public final static native int IFusionCHPHeaderAdapter_GetAssayType(long jarg1);
  public final static native long IFusionCHPHeaderAdapter_GetChipType(long jarg1);
  public final static native long IFusionCHPHeaderAdapter_GetAlgName(long jarg1);
  public final static native long IFusionCHPHeaderAdapter_GetAlgVersion(long jarg1);
  public final static native void IFusionCHPHeaderAdapter_GetAlgorithmParameters(long jarg1, long jarg2);
  public final static native long IFusionCHPHeaderAdapter_GetAlgorithmParameterCount(long jarg1);
  public final static native void IFusionCHPHeaderAdapter_GetSummaryParameters(long jarg1, long jarg2);
  public final static native long IFusionCHPHeaderAdapter_GetParentCellFile(long jarg1);
  public final static native long IFusionCHPHeaderAdapter_GetProgID(long jarg1);
  public final static native long IFusionCHPHeaderAdapter_GetAlgorithmParameter(long jarg1, long jarg2);
  public final static native long IFusionCHPHeaderAdapter_GetSummaryParameter(long jarg1, long jarg2);
  public final static native void IFusionCHPHeaderAdapter_GetBackgroundZoneInfo(long jarg1, long jarg2);
  public final static native void IFusionCHPHeaderAdapter_GetBackgroundZones(long jarg1, long jarg2);
  public final static native void IFusionCHPHeaderAdapter_GetBackgroundZone(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int IFusionCHPHeaderAdapter_GetMagic(long jarg1);
  public final static native int IFusionCHPHeaderAdapter_GetVersion(long jarg1);
  public final static native void delete_IFusionCHPHeaderAdapter(long jarg1);
  public final static native long IFusionCHPDataAdapter_GetHeader(long jarg1);
  public final static native boolean IFusionCHPDataAdapter_CanReadFile(long jarg1);
  public final static native boolean IFusionCHPDataAdapter_GetExpressionResults(long jarg1, int jarg2, long jarg3);
  public final static native boolean IFusionCHPDataAdapter_GetGenotypingResults(long jarg1, int jarg2, long jarg3);
  public final static native boolean IFusionCHPDataAdapter_GetUniversalResults(long jarg1, int jarg2, long jarg3);
  public final static native boolean IFusionCHPDataAdapter_GetResequencingResults(long jarg1, long jarg2);
  public final static native boolean IFusionCHPDataAdapter_Read(long jarg1);
  public final static native boolean IFusionCHPDataAdapter_ReadHeader(long jarg1);
  public final static native void IFusionCHPDataAdapter_SetFileName(long jarg1, String jarg2);
  public final static native String IFusionCHPDataAdapter_GetFileName(long jarg1);
  public final static native void IFusionCHPDataAdapter_Clear(long jarg1);
  public final static native void delete_IFusionCHPDataAdapter(long jarg1);
  public final static native long new_FusionCHPHeader();
  public final static native void delete_FusionCHPHeader(long jarg1);
  public final static native int FusionCHPHeader_GetCols(long jarg1);
  public final static native int FusionCHPHeader_GetRows(long jarg1);
  public final static native int FusionCHPHeader_GetNumProbeSets(long jarg1);
  public final static native int FusionCHPHeader_GetAssayType(long jarg1);
  public final static native long FusionCHPHeader_GetChipType(long jarg1);
  public final static native long FusionCHPHeader_GetAlgName(long jarg1);
  public final static native long FusionCHPHeader_GetAlgVersion(long jarg1);
  public final static native void FusionCHPHeader_AlgorithmParameters(long jarg1, long jarg2);
  public final static native long FusionCHPHeader_AlgorithmParameterCount(long jarg1);
  public final static native void FusionCHPHeader_SummaryParameters(long jarg1, long jarg2);
  public final static native long FusionCHPHeader_GetParentCellFile(long jarg1);
  public final static native long FusionCHPHeader_GetProgID(long jarg1);
  public final static native long FusionCHPHeader_GetAlgorithmParameter(long jarg1, long jarg2);
  public final static native long FusionCHPHeader_GetSummaryParameter(long jarg1, long jarg2);
  public final static native void FusionCHPHeader_GetBackgroundZoneInfo(long jarg1, long jarg2);
  public final static native void FusionCHPHeader_GetBackgroundZones(long jarg1, long jarg2);
  public final static native void FusionCHPHeader_GetBackgroundZone(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int FusionCHPHeader_GetMagic(long jarg1);
  public final static native int FusionCHPHeader_GetVersion(long jarg1);
  public final static native void FusionCHPHeader_CheckAdapter(long jarg1);
  public final static native long new_FusionCHPData();
  public final static native void delete_FusionCHPData(long jarg1);
  public final static native boolean FusionCHPData_GetExpressionResults(long jarg1, int jarg2, long jarg3);
  public final static native boolean FusionCHPData_GetGenotypingResults(long jarg1, int jarg2, long jarg3);
  public final static native boolean FusionCHPData_GetUniversalResults(long jarg1, int jarg2, long jarg3);
  public final static native boolean FusionCHPData_Read(long jarg1);
  public final static native boolean FusionCHPData_ReadHeader(long jarg1);
  public final static native boolean FusionCHPData_Exists(long jarg1);
  public final static native void FusionCHPData_SetFileName(long jarg1, String jarg2);
  public final static native String FusionCHPData_GetFileName(long jarg1);
  public final static native void FusionCHPData_Clear(long jarg1);
  public final static native void FusionCHPData_CheckAdapter(long jarg1);
  public final static native void FusionCHPData_CreateAdapter(long jarg1);
  public final static native void FusionCHPData_DeleteAdapter(long jarg1);
  public final static native long FusionCHPData_GetHeader(long jarg1);
  public final static native long SWIGNotImplementedExceptionUpcast(long jarg1);
  public final static native long SWIGFormatExceptionUpcast(long jarg1);
  public final static native long SWIGParameterMismatchExceptionUpcast(long jarg1);
  public final static native long SWIGUnexpectedParameterExceptionUpcast(long jarg1);
  public final static native long SWIGOutOfRangeParameterExceptionUpcast(long jarg1);
  public final static native long SWIGByteColumnTypeUpcast(long jarg1);
  public final static native long SWIGUByteColumnTypeUpcast(long jarg1);
  public final static native long SWIGShortColumnTypeUpcast(long jarg1);
  public final static native long SWIGUShortColumnTypeUpcast(long jarg1);
  public final static native long SWIGIntColumnTypeUpcast(long jarg1);
  public final static native long SWIGUIntColumnTypeUpcast(long jarg1);
  public final static native long SWIGFloatColumnTypeUpcast(long jarg1);
  public final static native long SWIGASCIIColumnTypeUpcast(long jarg1);
  public final static native long SWIGUnicodeColumnTypeUpcast(long jarg1);
  public final static native long SWIGDataSetNotOpenExceptionUpcast(long jarg1);
  public final static native long SWIGColumnIndexOutOfBoundsExceptionUpcast(long jarg1);
  public final static native long SWIGRowIndexOutOfBoundsExceptionUpcast(long jarg1);
  public final static native long SWIGUnexpectedColumnTypeExceptionUpcast(long jarg1);
  public final static native long SWIGDataGroupNotFoundExceptionUpcast(long jarg1);
  public final static native long SWIGDataSetNotFoundExceptionUpcast(long jarg1);
  public final static native long SWIGProbeSetNotFoundExceptionUpcast(long jarg1);
  public final static native long SWIGCDFAccessNotSupportedByModeExceptionUpcast(long jarg1);
  public final static native long SWIGFileNotFoundExceptionUpcast(long jarg1);
  public final static native long SWIGInvalidVersionExceptionUpcast(long jarg1);
  public final static native long SWIGInvalidFileTypeExceptionUpcast(long jarg1);
  public final static native long SWIGUnableToOpenFileExceptionUpcast(long jarg1);
  public final static native long SWIGFileNotOpenExceptionUpcast(long jarg1);
  public final static native long SWIGTemplateFileReaderUpcast(long jarg1);
  public final static native long SWIGTemplateDataUpcast(long jarg1);
  public final static native long SWIGCExpressionProbeSetResultsUpcast(long jarg1);
  public final static native long SWIGCGenotypeProbeSetResultsUpcast(long jarg1);
  public final static native long SWIGCUniversalProbeSetResultsUpcast(long jarg1);
  public final static native long SWIGFusionExpressionProbeSetResultsUpcast(long jarg1);
  public final static native long SWIGFusionGenotypeProbeSetResultsUpcast(long jarg1);
  public final static native long SWIGFusionUniversalProbeSetResultsUpcast(long jarg1);
}
