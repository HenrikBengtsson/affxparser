/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public final class GeneChipQCProbeSetType {
  public final static GeneChipQCProbeSetType UnknownQCProbeSetType = new GeneChipQCProbeSetType("UnknownQCProbeSetType");
  public final static GeneChipQCProbeSetType CheckerboardNegativeQCProbeSetType = new GeneChipQCProbeSetType("CheckerboardNegativeQCProbeSetType");
  public final static GeneChipQCProbeSetType CheckerboardPositiveQCProbeSetType = new GeneChipQCProbeSetType("CheckerboardPositiveQCProbeSetType");
  public final static GeneChipQCProbeSetType HybNegativeQCProbeSetType = new GeneChipQCProbeSetType("HybNegativeQCProbeSetType");
  public final static GeneChipQCProbeSetType HybPositiveQCProbeSetType = new GeneChipQCProbeSetType("HybPositiveQCProbeSetType");
  public final static GeneChipQCProbeSetType TextFeaturesNegativeQCProbeSetType = new GeneChipQCProbeSetType("TextFeaturesNegativeQCProbeSetType");
  public final static GeneChipQCProbeSetType TextFeaturesPositiveQCProbeSetType = new GeneChipQCProbeSetType("TextFeaturesPositiveQCProbeSetType");
  public final static GeneChipQCProbeSetType CentralNegativeQCProbeSetType = new GeneChipQCProbeSetType("CentralNegativeQCProbeSetType");
  public final static GeneChipQCProbeSetType CentralPositiveQCProbeSetType = new GeneChipQCProbeSetType("CentralPositiveQCProbeSetType");
  public final static GeneChipQCProbeSetType GeneExpNegativeQCProbeSetType = new GeneChipQCProbeSetType("GeneExpNegativeQCProbeSetType");
  public final static GeneChipQCProbeSetType GeneExpPositiveQCProbeSetType = new GeneChipQCProbeSetType("GeneExpPositiveQCProbeSetType");
  public final static GeneChipQCProbeSetType CycleFidelityNegativeQCProbeSetType = new GeneChipQCProbeSetType("CycleFidelityNegativeQCProbeSetType");
  public final static GeneChipQCProbeSetType CycleFidelityPositiveQCProbeSetType = new GeneChipQCProbeSetType("CycleFidelityPositiveQCProbeSetType");
  public final static GeneChipQCProbeSetType CentralCrossNegativeQCProbeSetType = new GeneChipQCProbeSetType("CentralCrossNegativeQCProbeSetType");
  public final static GeneChipQCProbeSetType CentralCrossPositiveQCProbeSetType = new GeneChipQCProbeSetType("CentralCrossPositiveQCProbeSetType");
  public final static GeneChipQCProbeSetType CrossHybNegativeQCProbeSetType = new GeneChipQCProbeSetType("CrossHybNegativeQCProbeSetType");
  public final static GeneChipQCProbeSetType CrossHybPositiveQCProbeSetType = new GeneChipQCProbeSetType("CrossHybPositiveQCProbeSetType");
  public final static GeneChipQCProbeSetType SpatialNormalizationNegativeQCProbeSetType = new GeneChipQCProbeSetType("SpatialNormalizationNegativeQCProbeSetType");
  public final static GeneChipQCProbeSetType SpatialNormalizationPositiveQCProbeSetType = new GeneChipQCProbeSetType("SpatialNormalizationPositiveQCProbeSetType");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static GeneChipQCProbeSetType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + GeneChipQCProbeSetType.class + " with value " + swigValue);
  }

  private GeneChipQCProbeSetType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private GeneChipQCProbeSetType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private static GeneChipQCProbeSetType[] swigValues = { UnknownQCProbeSetType, CheckerboardNegativeQCProbeSetType, CheckerboardPositiveQCProbeSetType, HybNegativeQCProbeSetType, HybPositiveQCProbeSetType, TextFeaturesNegativeQCProbeSetType, TextFeaturesPositiveQCProbeSetType, CentralNegativeQCProbeSetType, CentralPositiveQCProbeSetType, GeneExpNegativeQCProbeSetType, GeneExpPositiveQCProbeSetType, CycleFidelityNegativeQCProbeSetType, CycleFidelityPositiveQCProbeSetType, CentralCrossNegativeQCProbeSetType, CentralCrossPositiveQCProbeSetType, CrossHybNegativeQCProbeSetType, CrossHybPositiveQCProbeSetType, SpatialNormalizationNegativeQCProbeSetType, SpatialNormalizationPositiveQCProbeSetType };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

