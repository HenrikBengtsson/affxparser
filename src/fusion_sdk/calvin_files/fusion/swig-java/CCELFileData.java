/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class CCELFileData {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected CCELFileData(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CCELFileData obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionJNI.delete_CCELFileData(swigCPtr);
    }
    swigCPtr = 0;
  }

  public CCELFileData() {
    this(affx_fusionJNI.new_CCELFileData(), true);
  }

  public void SetError(String str) {
    affx_fusionJNI.CCELFileData_SetError(swigCPtr, str);
  }

  public String GetError() {
    return affx_fusionJNI.CCELFileData_GetError(swigCPtr);
  }

  public CCELFileData GetThisPtr() {
    long cPtr = affx_fusionJNI.CCELFileData_GetThisPtr(swigCPtr);
    return (cPtr == 0) ? null : new CCELFileData(cPtr, false);
  }

  public void SetFileName(String str) {
    affx_fusionJNI.CCELFileData_SetFileName(swigCPtr, str);
  }

  public String GetFileName() {
    return affx_fusionJNI.CCELFileData_GetFileName(swigCPtr);
  }

  public String GetHeaderKey(String key) {
    return affx_fusionJNI.CCELFileData_GetHeaderKey(swigCPtr, key);
  }

  public int GetVersion() {
    return affx_fusionJNI.CCELFileData_GetVersion(swigCPtr);
  }

  public int GetCols() {
    return affx_fusionJNI.CCELFileData_GetCols(swigCPtr);
  }

  public int GetRows() {
    return affx_fusionJNI.CCELFileData_GetRows(swigCPtr);
  }

  public int GetNumCells() {
    return affx_fusionJNI.CCELFileData_GetNumCells(swigCPtr);
  }

  public String GetHeaderString() {
    return affx_fusionJNI.CCELFileData_GetHeaderString(swigCPtr);
  }

  public CCELFileHeaderData GetHeader() {
    return new CCELFileHeaderData(affx_fusionJNI.CCELFileData_GetHeader(swigCPtr), false);
  }

  public String GetAlg() {
    return affx_fusionJNI.CCELFileData_GetAlg(swigCPtr);
  }

  public String GetParams() {
    return affx_fusionJNI.CCELFileData_GetParams(swigCPtr);
  }

  public String GetAlgorithmParameter(String tag) {
    return affx_fusionJNI.CCELFileData_GetAlgorithmParameter(swigCPtr, tag);
  }

  public String GetAlgorithmParameterTag(int index) {
    return affx_fusionJNI.CCELFileData_GetAlgorithmParameterTag(swigCPtr, index);
  }

  public int GetNumberAlgorithmParameters() {
    return affx_fusionJNI.CCELFileData_GetNumberAlgorithmParameters(swigCPtr);
  }

  public String GetAlgorithmParameters() {
    return affx_fusionJNI.CCELFileData_GetAlgorithmParameters(swigCPtr);
  }

  public String GetDatHeader() {
    return affx_fusionJNI.CCELFileData_GetDatHeader(swigCPtr);
  }

  public String GetChipType() {
    return affx_fusionJNI.CCELFileData_GetChipType(swigCPtr);
  }

  public int GetCellMargin() {
    return affx_fusionJNI.CCELFileData_GetCellMargin(swigCPtr);
  }

  public long GetNumOutliers() {
    return affx_fusionJNI.CCELFileData_GetNumOutliers(swigCPtr);
  }

  public long GetNumMasked() {
    return affx_fusionJNI.CCELFileData_GetNumMasked(swigCPtr);
  }

  public GridCoordinatesType GetGridCorners() {
    return new GridCoordinatesType(affx_fusionJNI.CCELFileData_GetGridCorners(swigCPtr), true);
  }

  public int IndexToX(int index) {
    return affx_fusionJNI.CCELFileData_IndexToX(swigCPtr, index);
  }

  public int IndexToY(int index) {
    return affx_fusionJNI.CCELFileData_IndexToY(swigCPtr, index);
  }

  public int XYToIndex(int x, int y) {
    return affx_fusionJNI.CCELFileData_XYToIndex__SWIG_0(swigCPtr, x, y);
  }

  public static int XYToIndex(int x, int y, int r, int c) {
    return affx_fusionJNI.CCELFileData_XYToIndex__SWIG_1(x, y, r, c);
  }

  public void GetEntry(int index, CELFileEntryType entry) {
    affx_fusionJNI.CCELFileData_GetEntry__SWIG_0(swigCPtr, index, CELFileEntryType.getCPtr(entry));
  }

  public void GetEntry(int x, int y, CELFileEntryType entry) {
    affx_fusionJNI.CCELFileData_GetEntry__SWIG_1(swigCPtr, x, y, CELFileEntryType.getCPtr(entry));
  }

  public void GetTranscriptomeEntry(int index, CELFileTranscriptomeEntryType entry) {
    affx_fusionJNI.CCELFileData_GetTranscriptomeEntry__SWIG_0(swigCPtr, index, CELFileTranscriptomeEntryType.getCPtr(entry));
  }

  public void GetTranscriptomeEntry(int x, int y, CELFileTranscriptomeEntryType entry) {
    affx_fusionJNI.CCELFileData_GetTranscriptomeEntry__SWIG_1(swigCPtr, x, y, CELFileTranscriptomeEntryType.getCPtr(entry));
  }

  public float GetIntensity(int index) {
    return affx_fusionJNI.CCELFileData_GetIntensity__SWIG_0(swigCPtr, index);
  }

  public float GetIntensity(int x, int y) {
    return affx_fusionJNI.CCELFileData_GetIntensity__SWIG_1(swigCPtr, x, y);
  }

  public float GetStdv(int index) {
    return affx_fusionJNI.CCELFileData_GetStdv__SWIG_0(swigCPtr, index);
  }

  public float GetStdv(int x, int y) {
    return affx_fusionJNI.CCELFileData_GetStdv__SWIG_1(swigCPtr, x, y);
  }

  public short GetPixels(int index) {
    return affx_fusionJNI.CCELFileData_GetPixels__SWIG_0(swigCPtr, index);
  }

  public short GetPixels(int x, int y) {
    return affx_fusionJNI.CCELFileData_GetPixels__SWIG_1(swigCPtr, x, y);
  }

  public boolean IsMasked(int x, int y) {
    return affx_fusionJNI.CCELFileData_IsMasked__SWIG_0(swigCPtr, x, y);
  }

  public boolean IsMasked(int index) {
    return affx_fusionJNI.CCELFileData_IsMasked__SWIG_1(swigCPtr, index);
  }

  public boolean IsOutlier(int x, int y) {
    return affx_fusionJNI.CCELFileData_IsOutlier__SWIG_0(swigCPtr, x, y);
  }

  public boolean IsOutlier(int index) {
    return affx_fusionJNI.CCELFileData_IsOutlier__SWIG_1(swigCPtr, index);
  }

  public void Close() {
    affx_fusionJNI.CCELFileData_Close(swigCPtr);
  }

  public long GetFileSize() {
    return affx_fusionJNI.CCELFileData_GetFileSize(swigCPtr);
  }

  public boolean Exists() {
    return affx_fusionJNI.CCELFileData_Exists(swigCPtr);
  }

  public boolean ReadHeader() {
    return affx_fusionJNI.CCELFileData_ReadHeader(swigCPtr);
  }

  public boolean Read(boolean bIncludeMaskAndOutliers) {
    return affx_fusionJNI.CCELFileData_Read__SWIG_0(swigCPtr, bIncludeMaskAndOutliers);
  }

  public boolean Read() {
    return affx_fusionJNI.CCELFileData_Read__SWIG_1(swigCPtr);
  }

  public boolean IsXDACompatibleFile() {
    return affx_fusionJNI.CCELFileData_IsXDACompatibleFile(swigCPtr);
  }

  public boolean IsTranscriptomeBcelFile() {
    return affx_fusionJNI.CCELFileData_IsTranscriptomeBcelFile(swigCPtr);
  }

  public boolean IsCompactCelFile() {
    return affx_fusionJNI.CCELFileData_IsCompactCelFile(swigCPtr);
  }

  public boolean ReadEx(String filename, int nState) {
    return affx_fusionJNI.CCELFileData_ReadEx__SWIG_0(swigCPtr, filename, nState);
  }

  public boolean ReadEx(String filename) {
    return affx_fusionJNI.CCELFileData_ReadEx__SWIG_1(swigCPtr, filename);
  }

  public boolean ReadEx() {
    return affx_fusionJNI.CCELFileData_ReadEx__SWIG_2(swigCPtr);
  }

  public int GetReadState() {
    return affx_fusionJNI.CCELFileData_GetReadState(swigCPtr);
  }

  public void Clear() {
    affx_fusionJNI.CCELFileData_Clear(swigCPtr);
  }

  public int GetFileFormat() {
    return affx_fusionJNI.CCELFileData_GetFileFormat(swigCPtr);
  }

  public void SetFileFormat(int i) {
    affx_fusionJNI.CCELFileData_SetFileFormat(swigCPtr, i);
  }

  public void SetAlgorithmName(String str) {
    affx_fusionJNI.CCELFileData_SetAlgorithmName(swigCPtr, str);
  }

  public void AddAlgorithmParameter(String tag, String value) {
    affx_fusionJNI.CCELFileData_AddAlgorithmParameter(swigCPtr, tag, value);
  }

  public void SetDimensions(int rows, int cols) {
    affx_fusionJNI.CCELFileData_SetDimensions(swigCPtr, rows, cols);
  }

  public void SetChipType(String str) {
    affx_fusionJNI.CCELFileData_SetChipType(swigCPtr, str);
  }

  public void SetMargin(int margin) {
    affx_fusionJNI.CCELFileData_SetMargin(swigCPtr, margin);
  }

  public void SetGridCorners(GridCoordinatesType grid) {
    affx_fusionJNI.CCELFileData_SetGridCorners(swigCPtr, GridCoordinatesType.getCPtr(grid));
  }

  public void SetCellEntry(int x, int y, CELFileEntryType pEntry) {
    affx_fusionJNI.CCELFileData_SetCellEntry__SWIG_0(swigCPtr, x, y, CELFileEntryType.getCPtr(pEntry));
  }

  public void SetCellEntry(int index, CELFileEntryType pEntry) {
    affx_fusionJNI.CCELFileData_SetCellEntry__SWIG_1(swigCPtr, index, CELFileEntryType.getCPtr(pEntry));
  }

  public void AllocateEntries() {
    affx_fusionJNI.CCELFileData_AllocateEntries(swigCPtr);
  }

  public void SetTranscriptomeCellEntry(int x, int y, CELFileTranscriptomeEntryType pEntry) {
    affx_fusionJNI.CCELFileData_SetTranscriptomeCellEntry__SWIG_0(swigCPtr, x, y, CELFileTranscriptomeEntryType.getCPtr(pEntry));
  }

  public void SetTranscriptomeCellEntry(int index, CELFileTranscriptomeEntryType pEntry) {
    affx_fusionJNI.CCELFileData_SetTranscriptomeCellEntry__SWIG_1(swigCPtr, index, CELFileTranscriptomeEntryType.getCPtr(pEntry));
  }

  public void AllocateTranscriptomeEntries() {
    affx_fusionJNI.CCELFileData_AllocateTranscriptomeEntries(swigCPtr);
  }

  public void SetIntensity(int index, float intensity) {
    affx_fusionJNI.CCELFileData_SetIntensity__SWIG_0(swigCPtr, index, intensity);
  }

  public void SetIntensity(int x, int y, float intensity) {
    affx_fusionJNI.CCELFileData_SetIntensity__SWIG_1(swigCPtr, x, y, intensity);
  }

  public void SetStdv(int index, float stdev) {
    affx_fusionJNI.CCELFileData_SetStdv__SWIG_0(swigCPtr, index, stdev);
  }

  public void SetStdv(int x, int y, float stdev) {
    affx_fusionJNI.CCELFileData_SetStdv__SWIG_1(swigCPtr, x, y, stdev);
  }

  public void SetPixels(int index, short pixels) {
    affx_fusionJNI.CCELFileData_SetPixels__SWIG_0(swigCPtr, index, pixels);
  }

  public void SetPixels(int x, int y, short pixels) {
    affx_fusionJNI.CCELFileData_SetPixels__SWIG_1(swigCPtr, x, y, pixels);
  }

  public void SetMask(int index, boolean mask) {
    affx_fusionJNI.CCELFileData_SetMask__SWIG_0(swigCPtr, index, mask);
  }

  public void SetMask(int x, int y, boolean masked) {
    affx_fusionJNI.CCELFileData_SetMask__SWIG_1(swigCPtr, x, y, masked);
  }

  public void SetOutlier(int index, boolean outlier) {
    affx_fusionJNI.CCELFileData_SetOutlier__SWIG_0(swigCPtr, index, outlier);
  }

  public void SetOutlier(int x, int y, boolean outlier) {
    affx_fusionJNI.CCELFileData_SetOutlier__SWIG_1(swigCPtr, x, y, outlier);
  }

  public void Munmap() {
    affx_fusionJNI.CCELFileData_Munmap(swigCPtr);
  }

  public void EnsureNotMmapped() {
    affx_fusionJNI.CCELFileData_EnsureNotMmapped(swigCPtr);
  }

  public final static int TEXT_CEL = affx_fusionJNI.get_CCELFileData_TEXT_CEL();
  public final static int XDA_BCEL = affx_fusionJNI.get_CCELFileData_XDA_BCEL();
  public final static int TRANSCRIPTOME_BCEL = affx_fusionJNI.get_CCELFileData_TRANSCRIPTOME_BCEL();
  public final static int COMPACT_BCEL = affx_fusionJNI.get_CCELFileData_COMPACT_BCEL();

  public final static int CEL_ALL = affx_fusionJNI.get_CCELFileData_CEL_ALL();
  public final static int CEL_DATA = affx_fusionJNI.get_CCELFileData_CEL_DATA();
  public final static int CEL_OUTLIER = affx_fusionJNI.get_CCELFileData_CEL_OUTLIER();
  public final static int CEL_MASK = affx_fusionJNI.get_CCELFileData_CEL_MASK();

}
