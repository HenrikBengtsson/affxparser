/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class ParameterNameValueType {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ParameterNameValueType(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ParameterNameValueType obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionJNI.delete_ParameterNameValueType(swigCPtr);
    }
    swigCPtr = 0;
  }

  public ParameterNameValueType() {
    this(affx_fusionJNI.new_ParameterNameValueType__SWIG_0(), true);
  }

  public ParameterNameValueType(SWIGTYPE_p_std__wstring name, SWIGTYPE_p_void mimeValue, int mimeValueSize, SWIGTYPE_p_std__wstring mimeType) {
    this(affx_fusionJNI.new_ParameterNameValueType__SWIG_1(SWIGTYPE_p_std__wstring.getCPtr(name), SWIGTYPE_p_void.getCPtr(mimeValue), mimeValueSize, SWIGTYPE_p_std__wstring.getCPtr(mimeType)), true);
  }

  public ParameterNameValueType(SWIGTYPE_p_std__wstring name, MIMEValue mimeValue, SWIGTYPE_p_std__wstring mimeType) {
    this(affx_fusionJNI.new_ParameterNameValueType__SWIG_2(SWIGTYPE_p_std__wstring.getCPtr(name), MIMEValue.getCPtr(mimeValue), SWIGTYPE_p_std__wstring.getCPtr(mimeType)), true);
  }

  public ParameterNameValueType ParameterNameValueType_copy(ParameterNameValueType param) {
    return new ParameterNameValueType(affx_fusionJNI.ParameterNameValueType_ParameterNameValueType_copy(swigCPtr, ParameterNameValueType.getCPtr(param)), true);
  }

  public boolean ParameterNameValueType_equals_obj(ParameterNameValueType param) {
    return affx_fusionJNI.ParameterNameValueType_ParameterNameValueType_equals_obj(swigCPtr, ParameterNameValueType.getCPtr(param));
  }

  public boolean ParameterNameValueType_not_equals_obj(ParameterNameValueType param) {
    return affx_fusionJNI.ParameterNameValueType_ParameterNameValueType_not_equals_obj(swigCPtr, ParameterNameValueType.getCPtr(param));
  }

  public boolean ParameterNameValueType_equals_name(SWIGTYPE_p_std__wstring name) {
    return affx_fusionJNI.ParameterNameValueType_ParameterNameValueType_equals_name(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(name));
  }

  public boolean ParameterNameValueType_not_equals_name(SWIGTYPE_p_std__wstring name) {
    return affx_fusionJNI.ParameterNameValueType_ParameterNameValueType_not_equals_name(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(name));
  }

  public boolean ParameterNameValueType_less_than(ParameterNameValueType param) {
    return affx_fusionJNI.ParameterNameValueType_ParameterNameValueType_less_than(swigCPtr, ParameterNameValueType.getCPtr(param));
  }

  public boolean ParameterNameValueType_greater_than(ParameterNameValueType param) {
    return affx_fusionJNI.ParameterNameValueType_ParameterNameValueType_greater_than(swigCPtr, ParameterNameValueType.getCPtr(param));
  }

  public SWIGTYPE_p_std__wstring GetName() {
    return new SWIGTYPE_p_std__wstring(affx_fusionJNI.ParameterNameValueType_GetName(swigCPtr), true);
  }

  public void SetName(SWIGTYPE_p_std__wstring value) {
    affx_fusionJNI.ParameterNameValueType_SetName(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(value));
  }

  public ParameterNameValueType.ParameterType GetParameterType() {
    return ParameterNameValueType.ParameterType.swigToEnum(affx_fusionJNI.ParameterNameValueType_GetParameterType(swigCPtr));
  }

  public char GetValueInt8() {
    return affx_fusionJNI.ParameterNameValueType_GetValueInt8(swigCPtr);
  }

  public void SetValueInt8(char value) {
    affx_fusionJNI.ParameterNameValueType_SetValueInt8(swigCPtr, value);
  }

  public short GetValueUInt8() {
    return affx_fusionJNI.ParameterNameValueType_GetValueUInt8(swigCPtr);
  }

  public void SetValueUInt8(short value) {
    affx_fusionJNI.ParameterNameValueType_SetValueUInt8(swigCPtr, value);
  }

  public short GetValueInt16() {
    return affx_fusionJNI.ParameterNameValueType_GetValueInt16(swigCPtr);
  }

  public void SetValueInt16(short value) {
    affx_fusionJNI.ParameterNameValueType_SetValueInt16(swigCPtr, value);
  }

  public int GetValueUInt16() {
    return affx_fusionJNI.ParameterNameValueType_GetValueUInt16(swigCPtr);
  }

  public void SetValueUInt16(int value) {
    affx_fusionJNI.ParameterNameValueType_SetValueUInt16(swigCPtr, value);
  }

  public int GetValueInt32() {
    return affx_fusionJNI.ParameterNameValueType_GetValueInt32(swigCPtr);
  }

  public void SetValueInt32(int value) {
    affx_fusionJNI.ParameterNameValueType_SetValueInt32(swigCPtr, value);
  }

  public long GetValueUInt32() {
    return affx_fusionJNI.ParameterNameValueType_GetValueUInt32(swigCPtr);
  }

  public void SetValueUInt32(long value) {
    affx_fusionJNI.ParameterNameValueType_SetValueUInt32(swigCPtr, value);
  }

  public float GetValueFloat() {
    return affx_fusionJNI.ParameterNameValueType_GetValueFloat(swigCPtr);
  }

  public void SetValueFloat(float value) {
    affx_fusionJNI.ParameterNameValueType_SetValueFloat(swigCPtr, value);
  }

  public SWIGTYPE_p_std__wstring GetValueText() {
    return new SWIGTYPE_p_std__wstring(affx_fusionJNI.ParameterNameValueType_GetValueText(swigCPtr), true);
  }

  public void SetValueText(SWIGTYPE_p_std__wstring value) {
    affx_fusionJNI.ParameterNameValueType_SetValueText(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(value));
  }

  public String GetValueAscii() {
    return affx_fusionJNI.ParameterNameValueType_GetValueAscii(swigCPtr);
  }

  public void SetValueAscii(String value) {
    affx_fusionJNI.ParameterNameValueType_SetValueAscii(swigCPtr, value);
  }

  public SWIGTYPE_p_std__wstring GetMIMEType() {
    return new SWIGTYPE_p_std__wstring(affx_fusionJNI.ParameterNameValueType_GetMIMEType(swigCPtr), true);
  }

  public void SetMIMEType(SWIGTYPE_p_std__wstring value) {
    affx_fusionJNI.ParameterNameValueType_SetMIMEType(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(value));
  }

  public MIMEValue GetMIMEValue() {
    return new MIMEValue(affx_fusionJNI.ParameterNameValueType_GetMIMEValue(swigCPtr), true);
  }

  public void SetMIMEValue(MIMEValue value) {
    affx_fusionJNI.ParameterNameValueType_SetMIMEValue(swigCPtr, MIMEValue.getCPtr(value));
  }

  public SWIGTYPE_p_std__wstring ToString() {
    return new SWIGTYPE_p_std__wstring(affx_fusionJNI.ParameterNameValueType_ToString(swigCPtr), true);
  }

  public final static class ParameterType {
    public final static ParameterType Int8Type = new ParameterType("Int8Type");
    public final static ParameterType UInt8Type = new ParameterType("UInt8Type");
    public final static ParameterType Int16Type = new ParameterType("Int16Type");
    public final static ParameterType UInt16Type = new ParameterType("UInt16Type");
    public final static ParameterType Int32Type = new ParameterType("Int32Type");
    public final static ParameterType UInt32Type = new ParameterType("UInt32Type");
    public final static ParameterType FloatType = new ParameterType("FloatType");
    public final static ParameterType TextType = new ParameterType("TextType");
    public final static ParameterType AsciiType = new ParameterType("AsciiType");
    public final static ParameterType UnknownType = new ParameterType("UnknownType");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ParameterType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ParameterType.class + " with value " + swigValue);
    }

    private ParameterType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ParameterType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private static ParameterType[] swigValues = { Int8Type, UInt8Type, Int16Type, UInt16Type, Int32Type, UInt32Type, FloatType, TextType, AsciiType, UnknownType };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
