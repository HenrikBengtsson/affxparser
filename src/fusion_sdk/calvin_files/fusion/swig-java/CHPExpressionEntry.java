/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class CHPExpressionEntry {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected CHPExpressionEntry(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CHPExpressionEntry obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      affx_fusionJNI.delete_CHPExpressionEntry(swigCPtr);
    }
    swigCPtr = 0;
  }

  public CHPExpressionEntry() {
    this(affx_fusionJNI.new_CHPExpressionEntry__SWIG_0(), true);
  }

  public CHPExpressionEntry(SWIGTYPE_p_std__wstring probeSetname, short detection, float detectionPValue, float signal, int numPairs, int numPairsUsed, short change, float changePValue, float sigLogRatio, float sigLogRatioLo, float sigLogRatioHi, int commonPairs) {
    this(affx_fusionJNI.new_CHPExpressionEntry__SWIG_1(SWIGTYPE_p_std__wstring.getCPtr(probeSetname), detection, detectionPValue, signal, numPairs, numPairsUsed, change, changePValue, sigLogRatio, sigLogRatioLo, sigLogRatioHi, commonPairs), true);
  }

  public void Clear() {
    affx_fusionJNI.CHPExpressionEntry_Clear(swigCPtr);
  }

  public CHPExpressionEntry CHPExpressionEntry_assign(CHPExpressionEntry zn) {
    return new CHPExpressionEntry(affx_fusionJNI.CHPExpressionEntry_CHPExpressionEntry_assign(swigCPtr, CHPExpressionEntry.getCPtr(zn)), true);
  }

  public SWIGTYPE_p_std__wstring GetProbeSetName() {
    return new SWIGTYPE_p_std__wstring(affx_fusionJNI.CHPExpressionEntry_GetProbeSetName(swigCPtr), true);
  }

  public short GetDetection() {
    return affx_fusionJNI.CHPExpressionEntry_GetDetection(swigCPtr);
  }

  public float GetDetectionPValue() {
    return affx_fusionJNI.CHPExpressionEntry_GetDetectionPValue(swigCPtr);
  }

  public float GetSignal() {
    return affx_fusionJNI.CHPExpressionEntry_GetSignal(swigCPtr);
  }

  public int GetNumPairs() {
    return affx_fusionJNI.CHPExpressionEntry_GetNumPairs(swigCPtr);
  }

  public int GetNumPairsUsed() {
    return affx_fusionJNI.CHPExpressionEntry_GetNumPairsUsed(swigCPtr);
  }

  public short GetChange() {
    return affx_fusionJNI.CHPExpressionEntry_GetChange(swigCPtr);
  }

  public float GetChangePValue() {
    return affx_fusionJNI.CHPExpressionEntry_GetChangePValue(swigCPtr);
  }

  public float GetSigLogRatio() {
    return affx_fusionJNI.CHPExpressionEntry_GetSigLogRatio(swigCPtr);
  }

  public float GetSigLogRatioLo() {
    return affx_fusionJNI.CHPExpressionEntry_GetSigLogRatioLo(swigCPtr);
  }

  public float GetSigLogRatioHi() {
    return affx_fusionJNI.CHPExpressionEntry_GetSigLogRatioHi(swigCPtr);
  }

  public int GetCommonPairs() {
    return affx_fusionJNI.CHPExpressionEntry_GetCommonPairs(swigCPtr);
  }

  public void SetProbeSetName(SWIGTYPE_p_std__wstring p) {
    affx_fusionJNI.CHPExpressionEntry_SetProbeSetName(swigCPtr, SWIGTYPE_p_std__wstring.getCPtr(p));
  }

  public void SetDetection(short p) {
    affx_fusionJNI.CHPExpressionEntry_SetDetection(swigCPtr, p);
  }

  public void SetDetectionPValue(float p) {
    affx_fusionJNI.CHPExpressionEntry_SetDetectionPValue(swigCPtr, p);
  }

  public void SetSignal(float p) {
    affx_fusionJNI.CHPExpressionEntry_SetSignal(swigCPtr, p);
  }

  public void SetNumPairs(int p) {
    affx_fusionJNI.CHPExpressionEntry_SetNumPairs(swigCPtr, p);
  }

  public void SetNumPairsUsed(int p) {
    affx_fusionJNI.CHPExpressionEntry_SetNumPairsUsed(swigCPtr, p);
  }

  public void SetChange(short p) {
    affx_fusionJNI.CHPExpressionEntry_SetChange(swigCPtr, p);
  }

  public void SetChangePValue(float p) {
    affx_fusionJNI.CHPExpressionEntry_SetChangePValue(swigCPtr, p);
  }

  public void SetSigLogRatio(float p) {
    affx_fusionJNI.CHPExpressionEntry_SetSigLogRatio(swigCPtr, p);
  }

  public void SetSigLogRatioLo(float p) {
    affx_fusionJNI.CHPExpressionEntry_SetSigLogRatioLo(swigCPtr, p);
  }

  public void SetSigLogRatioHi(float p) {
    affx_fusionJNI.CHPExpressionEntry_SetSigLogRatioHi(swigCPtr, p);
  }

  public void SetCommonPairs(int p) {
    affx_fusionJNI.CHPExpressionEntry_SetCommonPairs(swigCPtr, p);
  }

}
